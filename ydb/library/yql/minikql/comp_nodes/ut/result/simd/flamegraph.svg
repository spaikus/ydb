<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1334.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1317" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1317" > </text>
<g id="frames">
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (1,657,559 samples, 0.18%)</title><rect x="1152.3" y="997" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1155.31" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TDirectArrayHolderInplace::GetElement (7,493,298 samples, 0.83%)</title><rect x="98.0" y="1237" width="9.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="100.96" y="1247.5" ></text>
</g>
<g >
<title>exc_page_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="789" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="192.11" y="799.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::TryPop (599,446 samples, 0.07%)</title><rect x="215.8" y="693" width="0.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="218.76" y="703.5" ></text>
</g>
<g >
<title>arrow::NumericBuilder&lt;arrow::UInt64Type&gt;::UnsafeAppend (75,644,039 samples, 8.36%)</title><rect x="223.5" y="853" width="98.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="226.46" y="863.5" >arrow::Nume..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;bool&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (189,266 samples, 0.02%)</title><rect x="1146.0" y="949" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1148.97" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::ReleaseRef (3,226,502 samples, 0.36%)</title><rect x="1070.3" y="949" width="4.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1073.35" y="959.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::SystemAllocator::DeallocateAligned (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="261" width="4.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1158.98" y="271.5" ></text>
</g>
<g >
<title>TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;::data (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="837" width="1.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1146.11" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterDiv (1,257,482 samples, 0.14%)</title><rect x="1143.1" y="981" width="1.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1146.11" y="991.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (14,826,641 samples, 1.64%)</title><rect x="294.9" y="805" width="19.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="297.93" y="815.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (599,446 samples, 0.07%)</title><rect x="215.8" y="741" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="218.76" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TFlowForwardListWrapper::TIterator::Next (1,853,524 samples, 0.20%)</title><rect x="75.3" y="1237" width="2.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="78.26" y="1247.5" ></text>
</g>
<g >
<title>TSimd8 (1,090,796 samples, 0.12%)</title><rect x="1016.0" y="885" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1018.97" y="895.5" ></text>
</g>
<g >
<title>exc_page_fault (217,170 samples, 0.02%)</title><rect x="196.5" y="389" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="199.48" y="399.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestBlockFlowWrapper::DoCalculateImpl (2,992,987 samples, 0.33%)</title><rect x="1021.7" y="917" width="3.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1024.66" y="927.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (186,860 samples, 0.02%)</title><rect x="1148.1" y="821" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1151.13" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::RefillFiller (217,170 samples, 0.02%)</title><rect x="196.5" y="549" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="199.48" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (10,568,009 samples, 1.17%)</title><rect x="297.2" y="709" width="13.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="300.25" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;::operator (157,984 samples, 0.02%)</title><rect x="1149.3" y="837" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1152.33" y="847.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (408,211 samples, 0.05%)</title><rect x="220.3" y="709" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="223.32" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::MakeComputationPatternImpl (104,314,006 samples, 11.53%)</title><rect x="186.1" y="1013" width="136.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="189.06" y="1023.5" >NKikimr::NMiniKQL..</text>
</g>
<g >
<title>do_user_addr_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="933" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1149.22" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AllocateOn&lt;NKikimr::NMiniKQL::TArrowBlock, NKikimr::NMiniKQL::TMemoryUsageInfo*, arrow::Datum&gt; (810,798 samples, 0.09%)</title><rect x="1021.7" y="869" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1024.66" y="879.5" ></text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="805" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="815.5" ></text>
</g>
<g >
<title>ScalarKernel (189,061 samples, 0.02%)</title><rect x="1145.7" y="869" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1148.72" y="879.5" ></text>
</g>
<g >
<title>exc_page_fault (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="853" width="1.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1170.38" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_sub[abi:v160005]&lt;long&gt; (1,091,058 samples, 0.12%)</title><rect x="1154.6" y="437" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1157.56" y="447.5" ></text>
</g>
<g >
<title>vma_alloc_folio (217,170 samples, 0.02%)</title><rect x="196.5" y="293" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="199.48" y="303.5" ></text>
</g>
<g >
<title>~unordered_map (1,089,938 samples, 0.12%)</title><rect x="1161.7" y="565" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1164.67" y="575.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (601,801 samples, 0.07%)</title><rect x="194.3" y="661" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="197.27" y="671.5" ></text>
</g>
<g >
<title>get_page_from_freelist (217,449 samples, 0.02%)</title><rect x="220.3" y="517" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="223.32" y="527.5" ></text>
</g>
<g >
<title>folio_lruvec_lock_irqsave (689,941 samples, 0.08%)</title><rect x="300.6" y="629" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="303.62" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryRealFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMin, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="949" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1151.86" y="959.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2,176,999 samples, 0.24%)</title><rect x="1181.5" y="1013" width="2.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1184.48" y="1023.5" ></text>
</g>
<g >
<title>function (189,061 samples, 0.02%)</title><rect x="1145.7" y="837" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1148.72" y="847.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt; (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="837" width="5.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1157.56" y="847.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (217,451 samples, 0.02%)</title><rect x="203.5" y="469" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="206.55" y="479.5" ></text>
</g>
<g >
<title>MurmurHash&lt;unsigned long&gt; (380,029 samples, 0.04%)</title><rect x="1152.3" y="981" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1155.31" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterEquals (370,306 samples, 0.04%)</title><rect x="1144.7" y="981" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1147.75" y="991.5" ></text>
</g>
<g >
<title>__alloc_pages (217,170 samples, 0.02%)</title><rect x="196.5" y="261" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="199.48" y="271.5" ></text>
</g>
<g >
<title>std::__y1::__function::__alloc_func&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (104,314,006 samples, 11.53%)</title><rect x="186.1" y="933" width="136.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="189.06" y="943.5" >std::__y1::__func..</text>
</g>
<g >
<title>lock_mm_and_find_vma (605,852 samples, 0.07%)</title><rect x="311.4" y="757" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="314.36" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper::DoCalculate (236,659,456 samples, 26.16%)</title><rect x="758.8" y="965" width="308.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="761.78" y="975.5" >NKikimr::NMiniKQL::(anonymous namespace):..</text>
</g>
<g >
<title>__handle_mm_fault (150,430 samples, 0.02%)</title><rect x="1142.3" y="597" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1145.29" y="607.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::UnRef (2,181,441 samples, 0.24%)</title><rect x="1133.3" y="981" width="2.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1136.31" y="991.5" ></text>
</g>
<g >
<title>MakeIntrusive&lt;NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry&gt;&gt; (9,448,923 samples, 1.04%)</title><rect x="1142.1" y="1029" width="12.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1145.14" y="1039.5" ></text>
</g>
<g >
<title>std::__y1::make_shared[abi:v160005]&lt;arrow::UInt64Scalar, unsigned long const&amp;, void&gt; (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="901" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1027.14" y="911.5" ></text>
</g>
<g >
<title>handle_pte_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="725" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="192.11" y="735.5" ></text>
</g>
<g >
<title>arrow::TypeTraits&lt;arrow::UInt64Type&gt;::type_singleton (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="789" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1027.14" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt; &gt; &gt;::__deallocate_node (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="725" width="2.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1163.25" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TPagedArena::AllocSlow (190,647 samples, 0.02%)</title><rect x="322.1" y="997" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="325.14" y="1007.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::TransferCacheManager::RemoveRange (607,323 samples, 0.07%)</title><rect x="214.0" y="629" width="0.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="216.98" y="639.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (150,430 samples, 0.02%)</title><rect x="1142.3" y="677" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1145.29" y="687.5" ></text>
</g>
<g >
<title>do_anonymous_page (6,802,328 samples, 0.75%)</title><rect x="200.0" y="501" width="8.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="203.03" y="511.5" ></text>
</g>
<g >
<title>~unordered_map (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="757" width="2.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1163.25" y="767.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (914,798 samples, 0.10%)</title><rect x="222.3" y="821" width="1.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="225.27" y="831.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (189,266 samples, 0.02%)</title><rect x="1146.0" y="741" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1148.97" y="751.5" ></text>
</g>
<g >
<title>~TTestBlockFlowWrapper (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="725" width="5.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1157.56" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareCustomOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TUuid&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TUuid&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TCustomLess&lt; (186,860 samples, 0.02%)</title><rect x="1148.1" y="949" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1151.13" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_delete[abi:v160005]&lt;void*&gt; (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1077" width="1.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1170.38" y="1087.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TNotEqualsOp&gt; (186,768 samples, 0.02%)</title><rect x="1149.8" y="933" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1152.78" y="943.5" ></text>
</g>
<g >
<title>kthread_blkcg (217,232 samples, 0.02%)</title><rect x="297.9" y="677" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="300.88" y="687.5" ></text>
</g>
<g >
<title>~vector (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1141" width="1.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1168.96" y="1151.5" ></text>
</g>
<g >
<title>handle_pte_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="805" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1152.78" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePrimitive&lt;NKikimr::NMiniKQL::(anonymous namespace)::TGreater, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (188,627 samples, 0.02%)</title><rect x="1145.5" y="965" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1148.48" y="975.5" ></text>
</g>
<g >
<title>~TBinaryNumericKernelFamily (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="597" width="1.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1163.25" y="607.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (217,519 samples, 0.02%)</title><rect x="189.4" y="757" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="192.36" y="767.5" ></text>
</g>
<g >
<title>std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt;::operator (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="421" width="1.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1163.25" y="431.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (63,913,927 samples, 7.07%)</title><rect x="406.0" y="981" width="83.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="409.00" y="991.5" >NKikimr::..</text>
</g>
<g >
<title>operator (10,366,255 samples, 1.15%)</title><rect x="169.8" y="1237" width="13.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="172.76" y="1247.5" ></text>
</g>
<g >
<title>~Kernel (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="357" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1163.25" y="367.5" ></text>
</g>
<g >
<title>~TGlobalPools (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1157" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1168.96" y="1167.5" ></text>
</g>
<g >
<title>do_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="693" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1147.53" y="703.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::FinishWithLength (1,585,509 samples, 0.18%)</title><rect x="216.5" y="821" width="2.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="219.55" y="831.5" ></text>
</g>
<g >
<title>handle_pte_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="709" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1147.53" y="719.5" ></text>
</g>
<g >
<title>std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt;::__get_pointer[abi:v160005] (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="805" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1146.11" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__destroy_at[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, 0&gt; (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="485" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1163.25" y="495.5" ></text>
</g>
<g >
<title>charge_memcg (498,512 samples, 0.06%)</title><rect x="298.2" y="677" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="301.16" y="687.5" ></text>
</g>
<g >
<title>filemap_map_pages (191,092 samples, 0.02%)</title><rect x="189.1" y="677" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="192.11" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TCustomLess&lt; (186,860 samples, 0.02%)</title><rect x="1148.1" y="933" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1151.13" y="943.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::internal_transfer_cache::RingBufferTransferCache&lt;tcmalloc::tcmalloc_internal::CentralFreeList, tcmalloc::tcmalloc_internal::TransferCacheManager&gt;::InsertRange (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="917" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1170.38" y="927.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (1,089,157 samples, 0.12%)</title><rect x="1175.8" y="1093" width="1.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1178.80" y="1103.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMin&lt;signed char, float, float&gt;, NKikimr::NMiniKQL::TBinaryArgsOpt&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;float&gt;, NYql::NUdf::TDataType&lt;float&gt;, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="917" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1151.86" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (185,631 samples, 0.02%)</title><rect x="1144.7" y="917" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1147.75" y="927.5" ></text>
</g>
<g >
<title>folio_add_lru (183,976 samples, 0.02%)</title><rect x="1148.9" y="565" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1151.86" y="575.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;NKikimr::NMiniKQL::IComputationPattern&gt; (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="949" width="5.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1157.56" y="959.5" ></text>
</g>
<g >
<title>do_group_exit (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1205" width="14.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1178.80" y="1215.5" ></text>
</g>
<g >
<title>sync_regs (190,762 samples, 0.02%)</title><rect x="220.6" y="677" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="223.60" y="687.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (109,516 samples, 0.01%)</title><rect x="1142.1" y="741" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1145.14" y="751.5" ></text>
</g>
<g >
<title>do_user_addr_fault (217,449 samples, 0.02%)</title><rect x="220.3" y="645" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="223.32" y="655.5" ></text>
</g>
<g >
<title>~vector (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="709" width="5.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1157.56" y="719.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;unsigned long, void&gt;::UnsafeAppend (32,010,017 samples, 3.54%)</title><rect x="273.7" y="837" width="41.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="276.65" y="847.5" >arr..</text>
</g>
<g >
<title>TCMallocInternalNew (599,446 samples, 0.07%)</title><rect x="215.8" y="757" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="218.76" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterStringKernelContains (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="965" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1153.89" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (217,519 samples, 0.02%)</title><rect x="189.4" y="741" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="192.36" y="751.5" ></text>
</g>
<g >
<title>NSimd::NAVX2::TSimd8&lt;signed char&gt;::Shuffle&lt;false&gt; (60,810,412 samples, 6.72%)</title><rect x="917.5" y="901" width="79.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="920.53" y="911.5" >NSimd::NA..</text>
</g>
<g >
<title>__next_zones_zonelist (589,965 samples, 0.07%)</title><rect x="304.1" y="645" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="307.12" y="655.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::CreateBuiltinRegistry (9,448,923 samples, 1.04%)</title><rect x="1142.1" y="1045" width="12.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1145.14" y="1055.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::pair&lt;unsigned int, NKikimr::NMiniKQL::EValueRepresentation&gt;, std::__y1::allocator&lt;std::__y1::pair&lt;unsigned int, NKikimr::NMiniKQL::EValueRepresentation&gt; &gt; &gt;::end[abi:v160005] (1,090,179 samples, 0.12%)</title><rect x="471.0" y="949" width="1.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="473.95" y="959.5" ></text>
</g>
<g >
<title>std::__y1::char_traits&lt;char&gt;::copy (179,708 samples, 0.02%)</title><rect x="1142.9" y="789" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1145.87" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="853" width="1.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1149.71" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__sort&lt;NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (1,277,530 samples, 0.14%)</title><rect x="1152.8" y="949" width="1.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1155.80" y="959.5" ></text>
</g>
<g >
<title>arrow::compute::InputType::CopyInto (189,266 samples, 0.02%)</title><rect x="1146.0" y="821" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1148.97" y="831.5" ></text>
</g>
<g >
<title>TUnboxedValue (15,323,840 samples, 1.69%)</title><rect x="336.1" y="1013" width="20.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="339.08" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (408,211 samples, 0.05%)</title><rect x="220.3" y="757" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="223.32" y="767.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (183,976 samples, 0.02%)</title><rect x="1148.9" y="805" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1151.86" y="815.5" ></text>
</g>
<g >
<title>NSimd::FallbackMergeBlockImpl (1,047,832 samples, 0.12%)</title><rect x="867.2" y="901" width="1.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="870.24" y="911.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (245,095 samples, 0.03%)</title><rect x="311.0" y="741" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="314.04" y="751.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap::GetExistingDescriptor (1,090,863 samples, 0.12%)</title><rect x="1158.8" y="69" width="1.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1161.83" y="79.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (188,160 samples, 0.02%)</title><rect x="1148.4" y="965" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1151.37" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper, false&gt;::FetchValues (2,181,922 samples, 0.24%)</title><rect x="128.3" y="1237" width="2.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="131.30" y="1247.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationNode, false&gt;::ValueRef (3,257,361 samples, 0.36%)</title><rect x="725.3" y="965" width="4.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="728.32" y="975.5" ></text>
</g>
<g >
<title>std::__y1::deque&lt;(anonymous namespace)::TAtExit::TFunc, std::__y1::allocator&lt;(anonymous namespace)::TAtExit::TFunc&gt; &gt;::end[abi:v160005] (190,647 samples, 0.02%)</title><rect x="322.1" y="869" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="325.14" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TMutableComputationNode&lt;NKikimr::NMiniKQL::TArrayNode&gt;::GetValue (3,123,530 samples, 0.35%)</title><rect x="122.8" y="1237" width="4.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="125.80" y="1247.5" ></text>
</g>
<g >
<title>_compound_head (2,176,238 samples, 0.24%)</title><rect x="1177.2" y="1045" width="2.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1180.22" y="1055.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IFunctionRegistry, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IFunctionRegistry&gt; &gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="1029" width="2.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1163.25" y="1039.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (188,160 samples, 0.02%)</title><rect x="1148.4" y="933" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1151.37" y="943.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::MergeColumns (3,270,757 samples, 0.36%)</title><rect x="165.5" y="1237" width="4.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="168.50" y="1247.5" ></text>
</g>
<g >
<title>next_uptodate_page (191,092 samples, 0.02%)</title><rect x="189.1" y="661" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="192.11" y="671.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap::sizeclass (186,860 samples, 0.02%)</title><rect x="1148.1" y="773" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1151.13" y="783.5" ></text>
</g>
<g >
<title>NX86::HaveAVX2 (1,090,973 samples, 0.12%)</title><rect x="859.1" y="917" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="862.09" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper::DoCalculate (21,075,828 samples, 2.33%)</title><rect x="12.8" y="1237" width="27.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="15.85" y="1247.5" >N..</text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Next (1,090,557 samples, 0.12%)</title><rect x="181.9" y="1221" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="184.86" y="1231.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="501" width="5.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1157.56" y="511.5" ></text>
</g>
<g >
<title>IntHash&lt;unsigned long&gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="789" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1152.33" y="799.5" ></text>
</g>
<g >
<title>__run_exit_handlers (2,178,668 samples, 0.24%)</title><rect x="1166.0" y="1189" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.96" y="1199.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::emplace[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (147,314 samples, 0.02%)</title><rect x="1150.5" y="885" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.50" y="895.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::ReleaseRef (3,226,502 samples, 0.36%)</title><rect x="1070.3" y="965" width="4.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1073.35" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (187,794 samples, 0.02%)</title><rect x="1148.6" y="885" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.62" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (496,106 samples, 0.05%)</title><rect x="218.0" y="709" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="220.97" y="719.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::MemoryManager&gt;::__enable_weak_this[abi:v160005]&lt;arrow::MemoryManager, arrow::CPUMemoryManager, void&gt; (601,801 samples, 0.07%)</title><rect x="194.3" y="693" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="197.27" y="703.5" ></text>
</g>
<g >
<title>TSimd8 (2,182,053 samples, 0.24%)</title><rect x="1018.8" y="853" width="2.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1021.82" y="863.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="805" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="192.11" y="815.5" ></text>
</g>
<g >
<title>charge_memcg (850,960 samples, 0.09%)</title><rect x="200.8" y="469" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="203.80" y="479.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::Resize (5,240,356 samples, 0.58%)</title><rect x="189.6" y="805" width="6.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="192.64" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="741" width="1.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1027.14" y="751.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;arrow::UInt64Scalar&gt;::construct[abi:v160005]&lt;arrow::UInt64Scalar, unsigned long const&amp;&gt; (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="837" width="1.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1027.14" y="847.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1045" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1170.38" y="1055.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (292,761 samples, 0.03%)</title><rect x="1142.3" y="949" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1145.29" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterWith (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="981" width="1.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1153.89" y="991.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (701,591 samples, 0.08%)</title><rect x="297.2" y="693" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="300.25" y="703.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="917" width="5.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1157.56" y="927.5" ></text>
</g>
<g >
<title>unmap_single_vma (9,795,159 samples, 1.08%)</title><rect x="1177.2" y="1093" width="12.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1180.22" y="1103.5" ></text>
</g>
<g >
<title>do_anonymous_page (217,449 samples, 0.02%)</title><rect x="220.3" y="581" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="223.32" y="591.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::Next (602,592,793 samples, 66.62%)</title><rect x="356.1" y="1045" width="786.0" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="359.07" y="1055.5" >NYql::NUdf::TBoxedValueAccessor::Next</text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (147,314 samples, 0.02%)</title><rect x="1150.5" y="837" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1153.50" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper, false&gt;::FetchValues (239,931,296 samples, 26.52%)</title><rect x="757.4" y="981" width="312.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="760.36" y="991.5" >NKikimr::NMiniKQL::TStatefulWideFlowComput..</text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::(anonymous namespace)::TAdd&gt;&gt; (292,761 samples, 0.03%)</title><rect x="1142.3" y="965" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1145.29" y="975.5" ></text>
</g>
<g >
<title>do_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="869" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1149.22" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="325" width="4.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1158.98" y="335.5" ></text>
</g>
<g >
<title>arrow::CPUMemoryManager::Make (601,801 samples, 0.07%)</title><rect x="194.3" y="725" width="0.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="197.27" y="735.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4,497,971 samples, 0.50%)</title><rect x="304.9" y="645" width="5.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="307.89" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="885" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1168.96" y="895.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (2,370,257 samples, 0.26%)</title><rect x="300.3" y="677" width="3.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="303.33" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="885" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1152.78" y="895.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::CentralFreeList::RemoveRange (109,516 samples, 0.01%)</title><rect x="1142.1" y="709" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1145.14" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;short&gt;, NYql::NUdf::TDataType&lt;long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TAdd&gt; (150,430 samples, 0.02%)</title><rect x="1142.3" y="917" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1145.29" y="927.5" ></text>
</g>
<g >
<title>~InputType (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="181" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1163.25" y="191.5" ></text>
</g>
<g >
<title>arrow::CPUDevice::Instance (216,999 samples, 0.02%)</title><rect x="74.7" y="1237" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="77.74" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (35,775,697 samples, 3.96%)</title><rect x="136.8" y="1253" width="46.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="139.85" y="1263.5" >[unk..</text>
</g>
<g >
<title>ArrayKernel (172,783 samples, 0.02%)</title><rect x="1149.1" y="901" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1152.10" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1141" width="982.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="186.51" y="1151.5" >std::__y1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute</text>
</g>
<g >
<title>std::__y1::allocate_shared[abi:v160005]&lt;arrow::compute::KernelSignature, std::__y1::allocator&lt;arrow::compute::KernelSignature&gt;, std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;, arrow::compute::OutputType, bool&amp;, void&gt; (150,430 samples, 0.02%)</title><rect x="1142.3" y="821" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1145.29" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="901" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1168.96" y="911.5" ></text>
</g>
<g >
<title>~__hash_table (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="549" width="1.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1163.25" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="725" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1147.53" y="735.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (214,978 samples, 0.02%)</title><rect x="302.9" y="629" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="305.86" y="639.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="901" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1146.11" y="911.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (810,798 samples, 0.09%)</title><rect x="1021.7" y="533" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1024.66" y="543.5" ></text>
</g>
<g >
<title>std::__y1::__invoke[abi:v160005]&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (104,314,006 samples, 11.53%)</title><rect x="186.1" y="901" width="136.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="189.06" y="911.5" >std::__y1::__invo..</text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::IComputationNode const*, NKikimr::NMiniKQL::TMKQLAllocator&lt;NKikimr::NMiniKQL::IComputationNode const*,  (6,377,605 samples, 0.71%)</title><rect x="749.0" y="965" width="8.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="752.04" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_sub[abi:v160005]&lt;long&gt; (496,106 samples, 0.05%)</title><rect x="218.0" y="661" width="0.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="220.97" y="671.5" ></text>
</g>
<g >
<title>arrow::ArrayBuilder::Reserve (20,623,103 samples, 2.28%)</title><rect x="189.6" y="853" width="26.9" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="192.64" y="863.5" >a..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNotEqualsOp&gt; (373,796 samples, 0.04%)</title><rect x="1149.5" y="965" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1152.53" y="975.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__push_back_slow_path&lt;NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="869" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1151.86" y="879.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;TThrRefBase&gt; (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="821" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1163.25" y="831.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;arrow::compute::InputType&gt;::construct[abi:v160005]&lt;arrow::compute::InputType, arrow::compute::InputType const&amp;&gt; (189,266 samples, 0.02%)</title><rect x="1146.0" y="853" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1148.97" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (189,061 samples, 0.02%)</title><rect x="1145.7" y="917" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1148.72" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (217,519 samples, 0.02%)</title><rect x="189.4" y="773" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="192.36" y="783.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="773" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1151.86" y="783.5" ></text>
</g>
<g >
<title>do_user_addr_fault (810,798 samples, 0.09%)</title><rect x="1021.7" y="629" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1024.66" y="639.5" ></text>
</g>
<g >
<title>NSimd::NAVX2::TSimd8&lt;signed char&gt;::operator| (10,472,936 samples, 1.16%)</title><rect x="983.2" y="885" width="13.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="986.20" y="895.5" ></text>
</g>
<g >
<title>ydb-library-yql (904,564,733 samples, 100.00%)</title><rect x="10.0" y="1269" width="1180.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" >ydb-library-yql</text>
</g>
<g >
<title>Datum (810,798 samples, 0.09%)</title><rect x="1021.7" y="837" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1024.66" y="847.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (157,984 samples, 0.02%)</title><rect x="1149.3" y="949" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1152.33" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (185,631 samples, 0.02%)</title><rect x="1144.7" y="821" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1147.75" y="831.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TContainerCacheOnContext::NewArray (2,048,844 samples, 0.23%)</title><rect x="65.0" y="1237" width="2.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="67.95" y="1247.5" ></text>
</g>
<g >
<title>__split_buffer (109,516 samples, 0.01%)</title><rect x="1142.1" y="837" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1145.14" y="847.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::UnsafeAppend (38,472,736 samples, 4.25%)</title><rect x="223.5" y="821" width="50.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="226.46" y="831.5" >arrow..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (13,202,312 samples, 1.46%)</title><rect x="196.8" y="629" width="17.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="199.76" y="639.5" ></text>
</g>
<g >
<title>~shared_ptr (2,003,233 samples, 0.22%)</title><rect x="220.9" y="837" width="2.6" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="223.85" y="847.5" ></text>
</g>
<g >
<title>__folio_alloc (217,170 samples, 0.02%)</title><rect x="196.5" y="277" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="199.48" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap::Ensure (217,170 samples, 0.02%)</title><rect x="196.5" y="453" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="199.48" y="463.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::IsInvalid (4,594,196 samples, 0.51%)</title><rect x="1136.2" y="997" width="5.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1139.15" y="1007.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::GetElement (25,814,938 samples, 2.85%)</title><rect x="322.4" y="1045" width="33.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="325.39" y="1055.5" >NY..</text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (285,780 samples, 0.03%)</title><rect x="191.6" y="661" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="194.63" y="671.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt;::reset[abi:v160005] (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="629" width="2.8" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1163.25" y="639.5" ></text>
</g>
<g >
<title>slow_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (1,088,976 samples, 0.12%)</title><rect x="195.1" y="741" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="198.06" y="751.5" ></text>
</g>
<g >
<title>~TPlainKernel (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="405" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1163.25" y="415.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TConvert&lt;unsigned short, unsigned short&gt;, NKikimr::NMiniKQL::TUnaryArgsOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, true&gt;, NKikimr::NMiniKQL::TUnaryWrap&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="917" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1145.87" y="927.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__construct_at_end&lt;arrow::compute::InputType const*, 0&gt; (189,266 samples, 0.02%)</title><rect x="1146.0" y="901" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1148.97" y="911.5" ></text>
</g>
<g >
<title>vector (166,980 samples, 0.02%)</title><rect x="1144.5" y="901" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1147.53" y="911.5" ></text>
</g>
<g >
<title>TBuiltinFunctionRegistry (9,448,923 samples, 1.04%)</title><rect x="1142.1" y="1013" width="12.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1145.14" y="1023.5" ></text>
</g>
<g >
<title>TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt;::UnRef (186,860 samples, 0.02%)</title><rect x="1148.1" y="837" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1151.13" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::GetValue (6,386,404 samples, 0.71%)</title><rect x="107.7" y="1237" width="8.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="110.74" y="1247.5" ></text>
</g>
<g >
<title>NSimd::NAVX2::TSimd8&lt;signed char&gt;::Shuffle128 (14,395,008 samples, 1.59%)</title><rect x="938.1" y="885" width="18.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="941.06" y="895.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (183,976 samples, 0.02%)</title><rect x="1148.9" y="757" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1151.86" y="767.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator--[abi:v160005] (696,877 samples, 0.08%)</title><rect x="222.6" y="789" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="225.55" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="933" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.33" y="943.5" ></text>
</g>
<g >
<title>~PoolBuffer (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="293" width="4.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1158.98" y="303.5" ></text>
</g>
<g >
<title>std::__y1::destroy_at[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, 0&gt; (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="501" width="1.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1163.25" y="511.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (109,516 samples, 0.01%)</title><rect x="1142.1" y="789" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1145.14" y="799.5" ></text>
</g>
<g >
<title>lock_page_memcg (1,087,917 samples, 0.12%)</title><rect x="1180.1" y="1029" width="1.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1183.06" y="1039.5" ></text>
</g>
<g >
<title>operator (1,088,018 samples, 0.12%)</title><rect x="1152.8" y="917" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1155.80" y="927.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::AsBoxed (1,090,868 samples, 0.12%)</title><rect x="769.9" y="933" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="772.89" y="943.5" ></text>
</g>
<g >
<title>clear_page_erms (217,170 samples, 0.02%)</title><rect x="196.5" y="229" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="199.48" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1,088,018 samples, 0.12%)</title><rect x="1152.8" y="837" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1155.80" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (188,627 samples, 0.02%)</title><rect x="1145.5" y="901" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1148.48" y="911.5" ></text>
</g>
<g >
<title>~FunctionDoc (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1173" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1170.38" y="1183.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt;::allocate[abi:v160005] (109,516 samples, 0.01%)</title><rect x="1142.1" y="805" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1145.14" y="815.5" ></text>
</g>
<g >
<title>NSimd::NAVX2::TSimd8&lt;signed char&gt;::Store (2,004,143 samples, 0.22%)</title><rect x="996.9" y="901" width="2.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="999.86" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (9,361,631 samples, 1.03%)</title><rect x="141.3" y="1237" width="12.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="144.30" y="1247.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1,089,157 samples, 0.12%)</title><rect x="1175.8" y="1109" width="1.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1178.80" y="1119.5" ></text>
</g>
<g >
<title>handle_mm_fault (185,631 samples, 0.02%)</title><rect x="1144.7" y="693" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1147.75" y="703.5" ></text>
</g>
<g >
<title>rmqueue (1,139,714 samples, 0.13%)</title><rect x="207.1" y="421" width="1.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="210.14" y="431.5" ></text>
</g>
<g >
<title>~TKernelFamilyBase (1,089,938 samples, 0.12%)</title><rect x="1161.7" y="581" width="1.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1164.67" y="591.5" ></text>
</g>
<g >
<title>handle_pte_fault (185,631 samples, 0.02%)</title><rect x="1144.7" y="661" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1147.75" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="757" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="192.11" y="767.5" ></text>
</g>
<g >
<title>ArrayKernel (150,430 samples, 0.02%)</title><rect x="1142.3" y="885" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1145.29" y="895.5" ></text>
</g>
<g >
<title>std::__y1::operator&lt;=&gt;[abi:v160005]&lt;char, std::__y1::char_traits&lt;char&gt; &gt; (189,512 samples, 0.02%)</title><rect x="1154.2" y="885" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1157.22" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestBlockFlowWrapper::DoCalculate (2,992,987 samples, 0.33%)</title><rect x="1021.7" y="933" width="3.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1024.66" y="943.5" ></text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="741" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::AddCompareStringKernel&lt;char*, char*, NKikimr::NMiniKQL::(anonymous namespace)::TStrContainsOp&gt; (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="933" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1153.89" y="943.5" ></text>
</g>
<g >
<title>NumericScalar (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="821" width="1.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1027.14" y="831.5" ></text>
</g>
<g >
<title>std::__y1::__introsort&lt;std::__y1::_ClassicAlgPolicy, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (1,277,530 samples, 0.14%)</title><rect x="1152.8" y="933" width="1.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1155.80" y="943.5" ></text>
</g>
<g >
<title>std::__y1::function&lt;NYql::NUdf::TUnboxedValue  (6,393,104 samples, 0.71%)</title><rect x="696.9" y="933" width="8.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="699.95" y="943.5" ></text>
</g>
<g >
<title>do_read_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="853" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.22" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (559,927,222 samples, 61.90%)</title><rect x="369.6" y="1013" width="730.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="372.65" y="1023.5" >NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMap..</text>
</g>
<g >
<title>free_pages_and_swap_cache (1,089,157 samples, 0.12%)</title><rect x="1175.8" y="1077" width="1.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1178.80" y="1087.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="677" width="1.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1027.14" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (5,454,011 samples, 0.60%)</title><rect x="425.6" y="949" width="7.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="428.62" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (601,801 samples, 0.07%)</title><rect x="194.3" y="613" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="197.27" y="623.5" ></text>
</g>
<g >
<title>std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;::operator (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="869" width="1.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1146.11" y="879.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (216,690 samples, 0.02%)</title><rect x="191.3" y="661" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="194.35" y="671.5" ></text>
</g>
<g >
<title>vector (408,211 samples, 0.05%)</title><rect x="220.3" y="837" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="223.32" y="847.5" ></text>
</g>
<g >
<title>exc_page_fault (185,631 samples, 0.02%)</title><rect x="1144.7" y="725" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1147.75" y="735.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="773" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1145.14" y="783.5" ></text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="997" width="2.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1163.25" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryNumericFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMin, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="965" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1151.86" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper::DoCalculate (552,370,361 samples, 61.06%)</title><rect x="369.6" y="997" width="720.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="372.65" y="1007.5" >NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper::DoCalculate</text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IBuiltinFunctionRegistry&gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="869" width="2.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1163.25" y="879.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Resize (5,240,356 samples, 0.58%)</title><rect x="189.6" y="789" width="6.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="192.64" y="799.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (185,631 samples, 0.02%)</title><rect x="1144.7" y="757" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1147.75" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TContainerCacheOnContext::NewArray (101,736,566 samples, 11.25%)</title><rect x="529.6" y="949" width="132.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="532.63" y="959.5" >NKikimr::NMiniKQ..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeCache::DoGet (217,170 samples, 0.02%)</title><rect x="196.5" y="517" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="199.48" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1,088,296 samples, 0.12%)</title><rect x="1187.2" y="949" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1190.16" y="959.5" ></text>
</g>
<g >
<title>TUnboxedValue (11,672,330 samples, 1.29%)</title><rect x="681.7" y="933" width="15.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="684.72" y="943.5" ></text>
</g>
<g >
<title>std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;::operator (184,675 samples, 0.02%)</title><rect x="1145.0" y="869" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1147.99" y="879.5" ></text>
</g>
<g >
<title>do_mas_munmap (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="853" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1168.96" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__uninitialized_allocator_copy[abi:v160005]&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt;, arrow::compute::InputType const*, arrow::compute::InputType const*, arrow::compute::InputType*&gt; (166,980 samples, 0.02%)</title><rect x="1144.5" y="869" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1147.53" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (183,976 samples, 0.02%)</title><rect x="1148.9" y="661" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1151.86" y="671.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (183,976 samples, 0.02%)</title><rect x="1148.9" y="581" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1151.86" y="591.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (311,928 samples, 0.03%)</title><rect x="303.4" y="693" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="306.43" y="703.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt;::destroy[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="533" width="5.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1157.56" y="543.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::Iteration (108,754,868 samples, 12.02%)</title><rect x="868.6" y="917" width="141.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="871.61" y="927.5" >NSimd::Perfomancer..</text>
</g>
<g >
<title>__mod_lruvec_state (2,176,999 samples, 0.24%)</title><rect x="1181.5" y="997" width="2.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1184.48" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (186,860 samples, 0.02%)</title><rect x="1148.1" y="917" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.13" y="927.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1093" width="1.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1168.96" y="1103.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual&lt;unsigned short, int, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;int&gt;, false, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (187,794 samples, 0.02%)</title><rect x="1148.6" y="901" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1151.62" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (217,519 samples, 0.02%)</title><rect x="189.4" y="725" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="192.36" y="735.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_store[abi:v160005]&lt;long&gt; (434,466 samples, 0.05%)</title><rect x="192.0" y="645" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="195.00" y="655.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::GetElement (25,814,938 samples, 2.85%)</title><rect x="322.4" y="1061" width="33.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="325.39" y="1071.5" >NY..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (189,061 samples, 0.02%)</title><rect x="1145.7" y="949" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1148.72" y="959.5" ></text>
</g>
<g >
<title>arrow::CPUDevice::memory_manager (819,219 samples, 0.09%)</title><rect x="194.0" y="741" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="196.99" y="751.5" ></text>
</g>
<g >
<title>try_charge_memcg (200,597 samples, 0.02%)</title><rect x="201.6" y="453" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="204.65" y="463.5" ></text>
</g>
<g >
<title>vma_alloc_folio (3,890,135 samples, 0.43%)</title><rect x="203.8" y="485" width="5.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="206.83" y="495.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1173" width="982.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="186.51" y="1183.5" >NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute</text>
</g>
<g >
<title>asm_exc_page_fault (10,063,410 samples, 1.11%)</title><rect x="198.0" y="597" width="13.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="201.02" y="607.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (2,154,122 samples, 0.24%)</title><rect x="300.3" y="645" width="2.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="303.33" y="655.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::PrepareMasks (934,442 samples, 0.10%)</title><rect x="40.3" y="1253" width="1.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="43.34" y="1263.5" ></text>
</g>
<g >
<title>NKikimr::TSystemMmap::Munmap (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="949" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1168.96" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__introsort&lt;std::__y1::_ClassicAlgPolicy, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (189,512 samples, 0.02%)</title><rect x="1154.2" y="917" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1157.22" y="927.5" ></text>
</g>
<g >
<title>~KernelSignature (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="293" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1163.25" y="303.5" ></text>
</g>
<g >
<title>std::__y1::atomic&lt;long&gt;::operator=[abi:v160005] (434,466 samples, 0.05%)</title><rect x="192.0" y="677" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="195.00" y="687.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (27,661,256 samples, 3.06%)</title><rect x="1100.1" y="1013" width="36.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1103.07" y="1023.5" >NYq..</text>
</g>
<g >
<title>TArrowBlock (810,798 samples, 0.09%)</title><rect x="1021.7" y="853" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1024.66" y="863.5" ></text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="789" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="799.5" ></text>
</g>
<g >
<title>__shared_ptr_emplace&lt;const unsigned long &amp;&gt; (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="869" width="1.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1027.14" y="879.5" ></text>
</g>
<g >
<title>~unique_ptr (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="453" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1163.25" y="463.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::IComputationPattern, TAtomicCounter, TDelete&gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="981" width="5.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1157.56" y="991.5" ></text>
</g>
<g >
<title>shared_ptr (142,331 samples, 0.02%)</title><rect x="1142.5" y="869" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1145.48" y="879.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="837" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1170.38" y="847.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="325" width="1.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1163.25" y="335.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (152,517 samples, 0.02%)</title><rect x="1150.7" y="901" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1153.69" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterDefaultOperations (7,791,364 samples, 0.86%)</title><rect x="1142.1" y="997" width="10.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1145.14" y="1007.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::ReleaseToCentralCache (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="149" width="4.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1158.98" y="159.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TSetup&lt;false&gt;::BuildGraph (104,314,006 samples, 11.53%)</title><rect x="186.1" y="1045" width="136.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="189.06" y="1055.5" >NKikimr::NMiniKQL..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterAggregateFunctionForAllPrecisions&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalAdd, NKikimr::NMiniKQL::TBinaryArgsSameOpt&gt; (156,145 samples, 0.02%)</title><rect x="1142.7" y="965" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1145.67" y="975.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (586,067 samples, 0.06%)</title><rect x="200.0" y="469" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="203.03" y="479.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationExternalNode, false&gt;::GetDependencesCount (2,181,658 samples, 0.24%)</title><rect x="153.5" y="1237" width="2.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="156.52" y="1247.5" ></text>
</g>
<g >
<title>arrow::internal::MemoryPoolStats::UpdateAllocatedBytes (445,602 samples, 0.05%)</title><rect x="214.8" y="709" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="217.78" y="719.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1,089,403 samples, 0.12%)</title><rect x="216.5" y="757" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="219.55" y="767.5" ></text>
</g>
<g >
<title>InputType (166,980 samples, 0.02%)</title><rect x="1144.5" y="821" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1147.53" y="831.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__destroy_vector::operator (188,934 samples, 0.02%)</title><rect x="1145.2" y="837" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1148.23" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareUnsignedAndSigned&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (187,794 samples, 0.02%)</title><rect x="1148.6" y="933" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1151.62" y="943.5" ></text>
</g>
<g >
<title>release_pages (216,135 samples, 0.02%)</title><rect x="303.1" y="645" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="306.14" y="655.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;arrow::compute::InputType&gt;::construct[abi:v160005]&lt;arrow::compute::InputType, arrow::compute::InputType const&amp;&gt; (187,285 samples, 0.02%)</title><rect x="1146.5" y="837" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1149.46" y="847.5" ></text>
</g>
<g >
<title>page_remove_rmap (3,265,677 samples, 0.36%)</title><rect x="1181.5" y="1029" width="4.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1184.48" y="1039.5" ></text>
</g>
<g >
<title>std::__y1::__sort_impl[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (1,277,530 samples, 0.14%)</title><rect x="1152.8" y="965" width="1.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1155.80" y="975.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::CreatePureShuffleMask (1,090,258 samples, 0.12%)</title><rect x="1010.5" y="901" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1013.48" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (185,631 samples, 0.02%)</title><rect x="1144.7" y="837" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1147.75" y="847.5" ></text>
</g>
<g >
<title>__GI___munmap (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="933" width="1.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1168.96" y="943.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (177,831 samples, 0.02%)</title><rect x="1150.3" y="901" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1153.26" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TGreater&lt;double, double, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;double&gt;, false, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (188,627 samples, 0.02%)</title><rect x="1145.5" y="917" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1148.48" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="901" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1149.71" y="911.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::emplace[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (152,517 samples, 0.02%)</title><rect x="1150.7" y="885" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.69" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__do_deallocate_handle_size[abi:v160005]&lt;&gt; (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1093" width="1.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1170.38" y="1103.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;arrow::compute::InputType&gt;::destroy[abi:v160005] (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="197" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1163.25" y="207.5" ></text>
</g>
<g >
<title>__folio_alloc (185,631 samples, 0.02%)</title><rect x="1144.7" y="613" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1147.75" y="623.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;TThrRefBase&gt; (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="805" width="2.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1163.25" y="815.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (217,634 samples, 0.02%)</title><rect x="294.9" y="757" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="297.93" y="767.5" ></text>
</g>
<g >
<title>std::__y1::accumulate[abi:v160005]&lt;unsigned long const*, int&gt; (7,350,789 samples, 0.81%)</title><rect x="849.5" y="933" width="9.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="852.50" y="943.5" ></text>
</g>
<g >
<title>arrow::NumericBuilder&lt;arrow::UInt64Type&gt;::FinishInternal (5,303,398 samples, 0.59%)</title><rect x="216.5" y="853" width="7.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="219.55" y="863.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::internal_transfer_cache::RingBufferTransferCache&lt;tcmalloc::tcmalloc_internal::CentralFreeList, tcmalloc::tcmalloc_internal::TransferCacheManager&gt;::CopyIntoEnd (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="901" width="1.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1170.38" y="911.5" ></text>
</g>
<g >
<title>arrow::AllocateResizableBuffer (5,240,356 samples, 0.58%)</title><rect x="189.6" y="773" width="6.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="192.64" y="783.5" ></text>
</g>
<g >
<title>TUnboxedValue (5,375,594 samples, 0.59%)</title><rect x="1093.1" y="997" width="7.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1096.05" y="1007.5" ></text>
</g>
<g >
<title>NSimd::FallbackMergeColumns (1,047,832 samples, 0.12%)</title><rect x="867.2" y="917" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="870.24" y="927.5" ></text>
</g>
<g >
<title>~vector (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="613" width="5.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1157.56" y="623.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageAllocator::New (217,170 samples, 0.02%)</title><rect x="196.5" y="613" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="199.48" y="623.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (1,088,768 samples, 0.12%)</title><rect x="192.6" y="725" width="1.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="195.57" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::MakeComputationPattern (104,314,006 samples, 11.53%)</title><rect x="186.1" y="1029" width="136.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="189.06" y="1039.5" >NKikimr::NMiniKQL..</text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::__destroy_vector::operator (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="693" width="5.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1157.56" y="703.5" ></text>
</g>
<g >
<title>ArrayKernel (188,934 samples, 0.02%)</title><rect x="1145.2" y="901" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1148.23" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (601,801 samples, 0.07%)</title><rect x="194.3" y="645" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="197.27" y="655.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt; (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="821" width="5.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1157.56" y="831.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (11,562,509 samples, 1.28%)</title><rect x="640.3" y="885" width="15.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="643.35" y="895.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::__clear[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="581" width="5.7" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1157.56" y="591.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::THolderFactory::Create&lt;NKikimr::NMiniKQL::TArrowBlock, arrow::Datum&gt; (810,798 samples, 0.09%)</title><rect x="1021.7" y="885" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1024.66" y="895.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::MapObjectToSpan (1,090,863 samples, 0.12%)</title><rect x="1158.8" y="85" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1161.83" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (810,798 samples, 0.09%)</title><rect x="1021.7" y="613" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1024.66" y="623.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiv&lt;float, double, double&gt;, NKikimr::NMiniKQL::TBinaryArgsOpt&lt;NYql::NUdf::TDataType&lt;float&gt;, NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;double&gt;, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="933" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1146.11" y="943.5" ></text>
</g>
<g >
<title>operator (104,314,006 samples, 11.53%)</title><rect x="186.1" y="885" width="136.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="189.06" y="895.5" >operator</text>
</g>
<g >
<title>exc_page_fault (14,400,276 samples, 1.59%)</title><rect x="294.9" y="789" width="18.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="297.93" y="799.5" ></text>
</g>
<g >
<title>rmqueue_bulk (1,259,880 samples, 0.14%)</title><rect x="309.1" y="613" width="1.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="312.11" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (217,170 samples, 0.02%)</title><rect x="196.5" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="199.48" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (217,449 samples, 0.02%)</title><rect x="220.3" y="501" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="223.32" y="511.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SizeMap::ClassIndexMaybe (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="853" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1153.89" y="863.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (1,089,157 samples, 0.12%)</title><rect x="1175.8" y="1045" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1178.80" y="1055.5" ></text>
</g>
<g >
<title>__handle_mm_fault (11,696,341 samples, 1.29%)</title><rect x="295.8" y="741" width="15.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="298.78" y="751.5" ></text>
</g>
<g >
<title>mt_find (605,852 samples, 0.07%)</title><rect x="311.4" y="725" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="314.36" y="735.5" ></text>
</g>
<g >
<title>TUnboxedValuePod (1,089,555 samples, 0.12%)</title><rect x="554.8" y="917" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="557.77" y="927.5" ></text>
</g>
<g >
<title>vector (187,285 samples, 0.02%)</title><rect x="1146.5" y="901" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1149.46" y="911.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (9,816,036 samples, 1.09%)</title><rect x="476.6" y="949" width="12.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="479.57" y="959.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (191,020 samples, 0.02%)</title><rect x="313.5" y="757" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="316.46" y="767.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (150,430 samples, 0.02%)</title><rect x="1142.3" y="661" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1145.29" y="671.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::push_back[abi:v160005] (183,976 samples, 0.02%)</title><rect x="1148.9" y="885" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.86" y="895.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (109,516 samples, 0.01%)</title><rect x="1142.1" y="661" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1145.14" y="671.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::pair&lt;unsigned int, NKikimr::NMiniKQL::EValueRepresentation&gt;, std::__y1::allocator&lt;std::__y1::pair&lt;unsigned int, NKikimr::NMiniKQL::EValueRepresentation&gt; &gt; &gt;::begin[abi:v160005] (3,080,542 samples, 0.34%)</title><rect x="466.9" y="949" width="4.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="469.93" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::GetValue (32,918,685 samples, 3.64%)</title><rect x="662.3" y="949" width="43.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="665.35" y="959.5" >NKik..</text>
</g>
<g >
<title>~TComputationPatternImpl (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="933" width="5.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1157.56" y="943.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (184,675 samples, 0.02%)</title><rect x="1145.0" y="901" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1147.99" y="911.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationPattern&gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="1013" width="5.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1157.56" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;arrow::UInt64Scalar&gt; &gt;::construct[abi:v160005]&lt;arrow::UInt64Scalar, unsigned long const&amp;, void&gt; (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="853" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1027.14" y="863.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (186,860 samples, 0.02%)</title><rect x="1148.1" y="885" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1151.13" y="895.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (186,860 samples, 0.02%)</title><rect x="1148.1" y="805" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1151.13" y="815.5" ></text>
</g>
<g >
<title>~TSetup (6,542,824 samples, 0.72%)</title><rect x="1154.6" y="1061" width="8.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1157.56" y="1071.5" ></text>
</g>
<g >
<title>std::__y1::__function::__func&lt;arrow::Status  (189,061 samples, 0.02%)</title><rect x="1145.7" y="805" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1148.72" y="815.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt;::allocate[abi:v160005] (183,976 samples, 0.02%)</title><rect x="1148.9" y="821" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1151.86" y="831.5" ></text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="981" width="2.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1163.25" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="917" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1168.96" y="927.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (311,928 samples, 0.03%)</title><rect x="303.4" y="645" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="306.43" y="655.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="837" width="1.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1149.71" y="847.5" ></text>
</g>
<g >
<title>std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt;::operator (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="613" width="2.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1163.25" y="623.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::TransferCacheManager::InsertRange (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="133" width="4.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1158.98" y="143.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="341" width="4.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1158.98" y="351.5" ></text>
</g>
<g >
<title>std::__y1::__function::__func&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (5,161,286 samples, 0.57%)</title><rect x="315.4" y="837" width="6.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="318.41" y="847.5" ></text>
</g>
<g >
<title>handle_pte_fault (217,449 samples, 0.02%)</title><rect x="220.3" y="597" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="223.32" y="607.5" ></text>
</g>
<g >
<title>release_pages (3,265,327 samples, 0.36%)</title><rect x="1185.7" y="981" width="4.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1188.74" y="991.5" ></text>
</g>
<g >
<title>TSetup (9,518,581 samples, 1.05%)</title><rect x="1142.1" y="1061" width="12.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1145.14" y="1071.5" ></text>
</g>
<g >
<title>do_read_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="677" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.53" y="687.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (810,798 samples, 0.09%)</title><rect x="1021.7" y="549" width="1.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1024.66" y="559.5" ></text>
</g>
<g >
<title>AtExit (190,647 samples, 0.02%)</title><rect x="322.1" y="901" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="325.14" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TContainerCacheOnContext::NewArray (10,302,859 samples, 1.14%)</title><rect x="84.5" y="1237" width="13.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="87.52" y="1247.5" ></text>
</g>
<g >
<title>~function (187,028 samples, 0.02%)</title><rect x="1149.5" y="885" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1152.53" y="895.5" ></text>
</g>
<g >
<title>__folio_alloc (217,449 samples, 0.02%)</title><rect x="220.3" y="549" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="223.32" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5,363,542 samples, 0.59%)</title><rect x="1168.8" y="1253" width="7.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1171.80" y="1263.5" ></text>
</g>
<g >
<title>OutputType (142,331 samples, 0.02%)</title><rect x="1142.5" y="885" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1145.48" y="895.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::ListTooLong (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="965" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1170.38" y="975.5" ></text>
</g>
<g >
<title>std::__y1::allocate_shared[abi:v160005]&lt;arrow::UInt64Scalar, std::__y1::allocator&lt;arrow::UInt64Scalar&gt;, unsigned long const&amp;, void&gt; (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="885" width="1.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1027.14" y="895.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__construct_at_end&lt;arrow::compute::InputType const*, 0&gt; (187,285 samples, 0.02%)</title><rect x="1146.5" y="885" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1149.46" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator--[abi:v160005] (496,106 samples, 0.05%)</title><rect x="218.0" y="693" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="220.97" y="703.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterMin (183,976 samples, 0.02%)</title><rect x="1148.9" y="981" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1151.86" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_Next (599,446 samples, 0.07%)</title><rect x="215.8" y="677" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="218.76" y="687.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (217,921 samples, 0.02%)</title><rect x="222.3" y="773" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="225.27" y="783.5" ></text>
</g>
<g >
<title>arrow::Buffer::mutable_data (217,561 samples, 0.02%)</title><rect x="191.1" y="725" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="194.06" y="735.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,437,027 samples, 0.16%)</title><rect x="200.0" y="485" width="1.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="203.03" y="495.5" ></text>
</g>
<g >
<title>~TTestBlockFlowWrapper (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="741" width="5.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1157.56" y="751.5" ></text>
</g>
<g >
<title>~shared_ptr (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="165" width="1.4" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1163.25" y="175.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__vallocate[abi:v160005] (185,631 samples, 0.02%)</title><rect x="1144.7" y="885" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1147.75" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="917" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1149.22" y="927.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::AllocSmall&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (217,170 samples, 0.02%)</title><rect x="196.5" y="645" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="199.48" y="655.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralDiv, NKikimr::NMiniKQL::(anonymous namespace)::TDiv&gt;&gt; (166,980 samples, 0.02%)</title><rect x="1144.5" y="965" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1147.53" y="975.5" ></text>
</g>
<g >
<title>TRaw (1,089,555 samples, 0.12%)</title><rect x="554.8" y="901" width="1.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="557.77" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TNotEqualsOp&gt; (187,028 samples, 0.02%)</title><rect x="1149.5" y="949" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1152.53" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (189,266 samples, 0.02%)</title><rect x="1146.0" y="757" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1148.97" y="767.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (109,516 samples, 0.01%)</title><rect x="1142.1" y="549" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1145.14" y="559.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, false&gt;::store[abi:v160005] (434,466 samples, 0.05%)</title><rect x="192.0" y="661" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="195.00" y="671.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt;, std::__y1::allocator&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt; &gt;::__construct_at_end (2,182,053 samples, 0.24%)</title><rect x="1018.8" y="901" width="2.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1021.82" y="911.5" ></text>
</g>
<g >
<title>__alloc_pages (5,304,941 samples, 0.59%)</title><rect x="303.8" y="661" width="7.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="306.83" y="671.5" ></text>
</g>
<g >
<title>mas_store_prealloc (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="821" width="1.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1168.96" y="831.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (3,265,327 samples, 0.36%)</title><rect x="1185.7" y="1013" width="4.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1188.74" y="1023.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationExternalNode, false&gt;::ValueRef (8,525,134 samples, 0.94%)</title><rect x="670.6" y="933" width="11.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="673.60" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (109,516 samples, 0.01%)</title><rect x="1142.1" y="597" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1145.14" y="607.5" ></text>
</g>
<g >
<title>vma_alloc_folio (185,631 samples, 0.02%)</title><rect x="1144.7" y="629" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1147.75" y="639.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (186,860 samples, 0.02%)</title><rect x="1148.1" y="789" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1151.13" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryIntegralFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="949" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1145.14" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (310,894 samples, 0.03%)</title><rect x="215.4" y="645" width="0.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="218.36" y="655.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="885" width="1.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1153.89" y="895.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::__destroy_vector::operator (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1125" width="1.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1168.96" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1253" width="14.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1178.80" y="1263.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::__clear[abi:v160005] (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="421" width="4.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1158.98" y="431.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="405" width="4.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1158.98" y="415.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationNode&gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="757" width="5.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1157.56" y="767.5" ></text>
</g>
<g >
<title>operator (1,047,832 samples, 0.12%)</title><rect x="867.2" y="885" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="870.24" y="895.5" ></text>
</g>
<g >
<title>std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;::operator (184,675 samples, 0.02%)</title><rect x="1145.0" y="853" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1147.99" y="863.5" ></text>
</g>
<g >
<title>~TBuiltinsWrapper (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="933" width="2.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1163.25" y="943.5" ></text>
</g>
<g >
<title>~pair (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="661" width="2.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1163.25" y="671.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePrimitive&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (187,794 samples, 0.02%)</title><rect x="1148.6" y="965" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1151.62" y="975.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="661" width="5.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1157.56" y="671.5" ></text>
</g>
<g >
<title>NSimd::FallbackMergeColImpl (1,047,832 samples, 0.12%)</title><rect x="867.2" y="869" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="870.24" y="879.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (597,058 samples, 0.07%)</title><rect x="302.1" y="597" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="305.08" y="607.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__destroy_vector::operator (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="261" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1163.25" y="271.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (496,106 samples, 0.05%)</title><rect x="218.0" y="725" width="0.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="220.97" y="735.5" ></text>
</g>
<g >
<title>NKikimr::TAlignedPagePoolImpl&lt;NKikimr::TSystemMmap&gt;::GetPage (190,647 samples, 0.02%)</title><rect x="322.1" y="981" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="325.14" y="991.5" ></text>
</g>
<g >
<title>std::__y1::char_traits&lt;char&gt;::compare (1,088,018 samples, 0.12%)</title><rect x="1152.8" y="869" width="1.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1155.80" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (146,885 samples, 0.02%)</title><rect x="136.8" y="1237" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="139.85" y="1247.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes, TAtomicCounter, TDelete&gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="853" width="5.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1157.56" y="863.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;arrow::compute::InputType&gt;::construct[abi:v160005]&lt;arrow::compute::InputType, arrow::compute::InputType const&amp;&gt; (166,980 samples, 0.02%)</title><rect x="1144.5" y="837" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1147.53" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TDirectArrayHolderInplace::GetElement (17,303,127 samples, 1.91%)</title><rect x="333.5" y="1029" width="22.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="336.49" y="1039.5" >N..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterLessOrEqual (375,954 samples, 0.04%)</title><rect x="1148.4" y="981" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1151.37" y="991.5" ></text>
</g>
<g >
<title>__handle_mm_fault (217,449 samples, 0.02%)</title><rect x="220.3" y="613" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="223.32" y="623.5" ></text>
</g>
<g >
<title>__cond_resched (185,631 samples, 0.02%)</title><rect x="1144.7" y="597" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1147.75" y="607.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt;::allocate[abi:v160005] (408,211 samples, 0.05%)</title><rect x="220.3" y="789" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="223.32" y="799.5" ></text>
</g>
<g >
<title>operator (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1109" width="982.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="186.51" y="1119.5" >operator</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterNotEquals (559,923 samples, 0.06%)</title><rect x="1149.5" y="981" width="0.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1152.53" y="991.5" ></text>
</g>
<g >
<title>NX86::CpuId (1,090,973 samples, 0.12%)</title><rect x="859.1" y="885" width="1.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="862.09" y="895.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (1,088,768 samples, 0.12%)</title><rect x="192.6" y="709" width="1.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="195.57" y="719.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (166,980 samples, 0.02%)</title><rect x="1144.5" y="613" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1147.53" y="623.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt; &gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="901" width="5.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1157.56" y="911.5" ></text>
</g>
<g >
<title>do_anonymous_page (810,798 samples, 0.09%)</title><rect x="1021.7" y="565" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1024.66" y="575.5" ></text>
</g>
<g >
<title>exc_page_fault (150,430 samples, 0.02%)</title><rect x="1142.3" y="645" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1145.29" y="655.5" ></text>
</g>
<g >
<title>TCMallocInternalPosixMemalign (216,690 samples, 0.02%)</title><rect x="191.3" y="677" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="194.35" y="687.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (13,202,312 samples, 1.46%)</title><rect x="196.8" y="613" width="17.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="199.76" y="623.5" ></text>
</g>
<g >
<title>~TBuiltinsWrapper (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="917" width="2.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1163.25" y="927.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::construct[abi:v160005]&lt;arrow::compute::InputType, arrow::compute::InputType const&amp;, void&gt; (189,266 samples, 0.02%)</title><rect x="1146.0" y="869" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1148.97" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__destroy_at[abi:v160005]&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, 0&gt; (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="677" width="2.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1163.25" y="687.5" ></text>
</g>
<g >
<title>__mmput (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1141" width="14.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1178.80" y="1151.5" ></text>
</g>
<g >
<title>TCMallocInternalNew (1,088,768 samples, 0.12%)</title><rect x="192.6" y="741" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="195.57" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionUnOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TConvert, NKikimr::NMiniKQL::TUnaryArgsOpt&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="933" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="1145.87" y="943.5" ></text>
</g>
<g >
<title>policy_nodemask (217,251 samples, 0.02%)</title><rect x="208.6" y="469" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="211.62" y="479.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap2&lt;30, &amp;tcmalloc::tcmalloc_internal::MetaDataAlloc&gt;::sizeclass (186,860 samples, 0.02%)</title><rect x="1148.1" y="757" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1151.13" y="767.5" ></text>
</g>
<g >
<title>~SpinLockHolder (607,323 samples, 0.07%)</title><rect x="214.0" y="597" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="216.98" y="607.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="917" width="1.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1146.11" y="927.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1,088,434 samples, 0.12%)</title><rect x="1188.6" y="965" width="1.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1191.58" y="975.5" ></text>
</g>
<g >
<title>~shared_ptr (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="517" width="5.7" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1157.56" y="527.5" ></text>
</g>
<g >
<title>NumericBuilder&lt;arrow::UInt64Type&gt; (408,611 samples, 0.05%)</title><rect x="189.1" y="853" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="192.11" y="863.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, void*&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, void, void&gt; (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="709" width="2.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1163.25" y="719.5" ></text>
</g>
<g >
<title>~ArrayKernel (187,028 samples, 0.02%)</title><rect x="1149.5" y="901" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1152.53" y="911.5" ></text>
</g>
<g >
<title>handle_mm_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="837" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1152.78" y="847.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;char&gt; &gt;::deallocate[abi:v160005] (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1141" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1170.38" y="1151.5" ></text>
</g>
<g >
<title>std::__y1::__allocate_at_least[abi:v160005]&lt;std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="821" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1145.14" y="831.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper::TState::Transpose (124,623,013 samples, 13.78%)</title><rect x="859.1" y="949" width="162.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="862.09" y="959.5" >NKikimr::NMiniKQL::(..</text>
</g>
<g >
<title>filemap_map_pages (166,980 samples, 0.02%)</title><rect x="1144.5" y="661" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1147.53" y="671.5" ></text>
</g>
<g >
<title>TX86CpuInfo (1,090,973 samples, 0.12%)</title><rect x="859.1" y="901" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="862.09" y="911.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (162,867 samples, 0.02%)</title><rect x="136.6" y="1237" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="139.63" y="1247.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::CreateShuffleToBlendMask (4,213,851 samples, 0.47%)</title><rect x="1011.9" y="901" width="5.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1014.90" y="911.5" ></text>
</g>
<g >
<title>std::__y1::char_traits&lt;char&gt;::compare (189,512 samples, 0.02%)</title><rect x="1154.2" y="853" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1157.22" y="863.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (217,921 samples, 0.02%)</title><rect x="222.3" y="789" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="225.27" y="799.5" ></text>
</g>
<g >
<title>irqentry_exit (191,020 samples, 0.02%)</title><rect x="313.5" y="773" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="316.46" y="783.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Reserve (14,472,407 samples, 1.60%)</title><rect x="196.5" y="741" width="18.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="199.48" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TIntegralDiv&gt; (166,980 samples, 0.02%)</title><rect x="1144.5" y="917" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1147.53" y="927.5" ></text>
</g>
<g >
<title>get_page_from_freelist (217,170 samples, 0.02%)</title><rect x="196.5" y="245" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="199.48" y="255.5" ></text>
</g>
<g >
<title>std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;::operator (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="853" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.11" y="863.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (9,132,095 samples, 1.01%)</title><rect x="705.3" y="949" width="11.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="708.29" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationExternalNode, false&gt;::ValueRef (13,033,736 samples, 1.44%)</title><rect x="472.4" y="965" width="17.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="475.37" y="975.5" ></text>
</g>
<g >
<title>do_exit (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1189" width="14.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1178.80" y="1199.5" ></text>
</g>
<g >
<title>xas_load (189,219 samples, 0.02%)</title><rect x="1146.2" y="805" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1149.22" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (156,145 samples, 0.02%)</title><rect x="1142.7" y="901" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1145.67" y="911.5" ></text>
</g>
<g >
<title>[[stack]] (25,651,424 samples, 2.84%)</title><rect x="41.6" y="1253" width="33.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="44.56" y="1263.5" >[[..</text>
</g>
<g >
<title>arrow::BufferBuilder::Finish (1,585,509 samples, 0.18%)</title><rect x="216.5" y="805" width="2.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="219.55" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;unsigned long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (187,285 samples, 0.02%)</title><rect x="1146.5" y="933" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1149.46" y="943.5" ></text>
</g>
<g >
<title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::SystemAllocator&gt;::Allocate (14,472,407 samples, 1.60%)</title><rect x="196.5" y="725" width="18.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="199.48" y="735.5" ></text>
</g>
<g >
<title>std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;::compare (1,088,018 samples, 0.12%)</title><rect x="1152.8" y="885" width="1.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1155.80" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareReal&lt;NKikimr::NMiniKQL::(anonymous namespace)::TGreater, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (188,627 samples, 0.02%)</title><rect x="1145.5" y="949" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1148.48" y="959.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::IComputationNode*, NKikimr::NMiniKQL::TMKQLAllocator&lt;NKikimr::NMiniKQL::IComputationNode*,  (6,225,261 samples, 0.69%)</title><rect x="717.2" y="949" width="8.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="720.20" y="959.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::ResizableBuffer&gt;::operator=[abi:v160005]&lt;arrow::ResizableBuffer, std::__y1::default_delete&lt;arrow::ResizableBuffer&gt;, void&gt; (599,446 samples, 0.07%)</title><rect x="215.8" y="789" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="218.76" y="799.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Deallocate (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="997" width="1.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1170.38" y="1007.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (13,201,929 samples, 1.46%)</title><rect x="832.3" y="917" width="17.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="835.28" y="927.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt;::destroy[abi:v160005] (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="373" width="4.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1158.98" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Deallocate (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="181" width="4.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1158.98" y="191.5" ></text>
</g>
<g >
<title>post_alloc_hook (190,302 samples, 0.02%)</title><rect x="308.0" y="629" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="311.04" y="639.5" ></text>
</g>
<g >
<title>__folio_alloc (5,304,941 samples, 0.59%)</title><rect x="303.8" y="677" width="7.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="306.83" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOp&gt; (188,934 samples, 0.02%)</title><rect x="1145.2" y="933" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1148.23" y="943.5" ></text>
</g>
<g >
<title>std::__y1::copy_n[abi:v160005]&lt;char const*, unsigned long, char*&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="773" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1145.87" y="783.5" ></text>
</g>
<g >
<title>exc_page_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="949" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1149.22" y="959.5" ></text>
</g>
<g >
<title>CityHash64 (184,675 samples, 0.02%)</title><rect x="1145.0" y="821" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1147.99" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::CentralFreeList::ReleaseToSpans (1,090,125 samples, 0.12%)</title><rect x="1157.4" y="85" width="1.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1160.41" y="95.5" ></text>
</g>
<g >
<title>Variant (810,798 samples, 0.09%)</title><rect x="1021.7" y="821" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1024.66" y="831.5" ></text>
</g>
<g >
<title>rmqueue_bulk (683,609 samples, 0.08%)</title><rect x="207.7" y="405" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="210.73" y="415.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterConvert&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt; &gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="949" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1145.87" y="959.5" ></text>
</g>
<g >
<title>do_read_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="773" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1152.78" y="783.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3,265,327 samples, 0.36%)</title><rect x="1185.7" y="997" width="4.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1188.74" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__copy_trivial_impl[abi:v160005]&lt;char const, char&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="677" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1145.87" y="687.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::MakeUnique (2,996,963 samples, 0.33%)</title><rect x="192.6" y="757" width="3.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="195.57" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryRealKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub&gt; (152,517 samples, 0.02%)</title><rect x="1150.7" y="933" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1153.69" y="943.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (2,835,059 samples, 0.31%)</title><rect x="299.7" y="693" width="3.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="302.73" y="703.5" ></text>
</g>
<g >
<title>~TPatternNodes (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="805" width="5.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1157.56" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__invoke_void_return_wrapper&lt;NKikimr::NMiniKQL::IComputationNode*, false&gt;::__call&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (104,314,006 samples, 11.53%)</title><rect x="186.1" y="917" width="136.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="189.06" y="927.5" >std::__y1::__invo..</text>
</g>
<g >
<title>CheckedDelete&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt; &gt; (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="997" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1168.96" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (3,270,626 samples, 0.36%)</title><rect x="70.5" y="1237" width="4.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="73.47" y="1247.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="229" width="4.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1158.98" y="239.5" ></text>
</g>
<g >
<title>operator (189,512 samples, 0.02%)</title><rect x="1154.2" y="901" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1157.22" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;int&gt;, NYql::NUdf::TDataType&lt;float&gt;, NYql::NUdf::TDataType&lt;float&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TSub&gt; (152,517 samples, 0.02%)</title><rect x="1150.7" y="917" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1153.69" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__deallocate_node (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="533" width="1.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1163.25" y="543.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="917" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1152.33" y="927.5" ></text>
</g>
<g >
<title>mmput (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1157" width="14.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1178.80" y="1167.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterAggregateFunction&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalAdd&lt; (156,145 samples, 0.02%)</title><rect x="1142.7" y="933" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1145.67" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TFlowForwardListWrapper::TIterator::Next (3,270,925 samples, 0.36%)</title><rect x="137.0" y="1237" width="4.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="140.04" y="1247.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::DataType&gt;::operator=[abi:v160005] (189,266 samples, 0.02%)</title><rect x="1146.0" y="805" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1148.97" y="815.5" ></text>
</g>
<g >
<title>Singleton&lt;NKikimr::(anonymous namespace)::TGlobalPools&lt;NKikimr::TSystemMmap&gt;&gt; (190,647 samples, 0.02%)</title><rect x="322.1" y="949" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="325.14" y="959.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::SystemAllocator::AllocateAligned (216,690 samples, 0.02%)</title><rect x="191.3" y="693" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="194.35" y="703.5" ></text>
</g>
<g >
<title>xas_find (189,219 samples, 0.02%)</title><rect x="1146.2" y="821" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1149.22" y="831.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (187,794 samples, 0.02%)</title><rect x="1148.6" y="869" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1151.62" y="879.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (3,257,361 samples, 0.36%)</title><rect x="725.3" y="949" width="4.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="728.32" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UniqueBoxed (2,029,249 samples, 0.22%)</title><rect x="552.1" y="933" width="2.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="555.12" y="943.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="245" width="4.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1158.98" y="255.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (187,794 samples, 0.02%)</title><rect x="1148.6" y="853" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1151.62" y="863.5" ></text>
</g>
<g >
<title>TUnboxedValue (1,089,555 samples, 0.12%)</title><rect x="554.8" y="933" width="1.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="557.77" y="943.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (1,091,185 samples, 0.12%)</title><rect x="715.8" y="917" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="718.78" y="927.5" ></text>
</g>
<g >
<title>TCallableComputationNodeBuilderFuncMapFiller (190,949 samples, 0.02%)</title><rect x="165.2" y="1221" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="168.25" y="1231.5" ></text>
</g>
<g >
<title>InputType (189,266 samples, 0.02%)</title><rect x="1146.0" y="837" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1148.97" y="847.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="485" width="5.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1157.56" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (183,976 samples, 0.02%)</title><rect x="1148.9" y="725" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1151.86" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateNotEquals&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, true, false, true&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;true, false&gt; &gt; (186,127 samples, 0.02%)</title><rect x="1150.0" y="933" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1153.02" y="943.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (185,631 samples, 0.02%)</title><rect x="1144.7" y="773" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1147.75" y="783.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::CentralFreeList::InsertRange (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="101" width="4.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1158.98" y="111.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (4,284,632 samples, 0.47%)</title><rect x="1094.5" y="981" width="5.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1097.48" y="991.5" ></text>
</g>
<g >
<title>shared_ptr (217,327 samples, 0.02%)</title><rect x="220.0" y="821" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="223.03" y="831.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;::reset[abi:v160005] (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="437" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1163.25" y="447.5" ></text>
</g>
<g >
<title>std::__y1::destroy_at[abi:v160005]&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, 0&gt; (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="693" width="2.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1163.25" y="703.5" ></text>
</g>
<g >
<title>arrow::ArrayBuilder::UnsafeAppendToBitmap (38,472,736 samples, 4.25%)</title><rect x="223.5" y="837" width="50.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="226.46" y="847.5" >arrow..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::TArrayNode::DoCalculate (170,504,862 samples, 18.85%)</title><rect x="502.9" y="965" width="222.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="505.90" y="975.5" >NKikimr::NMiniKQL::TArrayNode..</text>
</g>
<g >
<title>__mod_lruvec_state (1,088,678 samples, 0.12%)</title><rect x="1184.3" y="1013" width="1.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1187.32" y="1023.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TDataType::GetSchemeType (8,546,018 samples, 0.94%)</title><rect x="821.1" y="933" width="11.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="824.13" y="943.5" ></text>
</g>
<g >
<title>~shared_ptr (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="341" width="1.4" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1163.25" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="805" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1170.38" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__allocate_at_least[abi:v160005]&lt;std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="837" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1151.86" y="847.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::Push (217,921 samples, 0.02%)</title><rect x="222.3" y="709" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="225.27" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (601,801 samples, 0.07%)</title><rect x="194.3" y="597" width="0.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="197.27" y="607.5" ></text>
</g>
<g >
<title>TCMallocInternalNew (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="901" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1153.89" y="911.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt;::destroy[abi:v160005] (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1061" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1168.96" y="1071.5" ></text>
</g>
<g >
<title>shared_ptr (1,091,152 samples, 0.12%)</title><rect x="1022.7" y="901" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1025.72" y="911.5" ></text>
</g>
<g >
<title>folio_add_lru (847,173 samples, 0.09%)</title><rect x="201.9" y="453" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="204.91" y="463.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (186,127 samples, 0.02%)</title><rect x="1150.0" y="901" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1153.02" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TNotEqualsOp&gt; (187,028 samples, 0.02%)</title><rect x="1149.5" y="933" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1152.53" y="943.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (3,016,636 samples, 0.33%)</title><rect x="352.1" y="981" width="4.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="355.13" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::FreelistPush (1,090,125 samples, 0.12%)</title><rect x="1157.4" y="69" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1160.41" y="79.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator--[abi:v160005] (1,091,058 samples, 0.12%)</title><rect x="1154.6" y="469" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1157.56" y="479.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1029" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1170.38" y="1039.5" ></text>
</g>
<g >
<title>~_ConstructTransaction (188,160 samples, 0.02%)</title><rect x="1148.4" y="869" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1151.37" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::function&lt;NKikimr::NMiniKQL::IComputationNode*  (190,949 samples, 0.02%)</title><rect x="165.2" y="1157" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="168.25" y="1167.5" ></text>
</g>
<g >
<title>find_vma (605,852 samples, 0.07%)</title><rect x="311.4" y="741" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="314.36" y="751.5" ></text>
</g>
<g >
<title>NSimd::NAVX2::TSimd8&lt;signed char&gt;::operator+ (20,201,707 samples, 2.23%)</title><rect x="956.8" y="885" width="26.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="959.84" y="895.5" >N..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (185,631 samples, 0.02%)</title><rect x="1144.7" y="965" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1147.75" y="975.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (185,631 samples, 0.02%)</title><rect x="1144.7" y="789" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1147.75" y="799.5" ></text>
</g>
<g >
<title>arrow::ArrayBuilder::Resize (5,240,356 samples, 0.58%)</title><rect x="189.6" y="821" width="6.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="192.64" y="831.5" ></text>
</g>
<g >
<title>do_anonymous_page (217,170 samples, 0.02%)</title><rect x="196.5" y="309" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="199.48" y="319.5" ></text>
</g>
<g >
<title>memcg_check_events (699,456 samples, 0.08%)</title><rect x="298.8" y="677" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="301.82" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TTypeHasher::operator (157,984 samples, 0.02%)</title><rect x="1149.3" y="821" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1152.33" y="831.5" ></text>
</g>
<g >
<title>TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;::Construct&lt;char const*&amp;, unsigned long&amp;&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="853" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1145.87" y="863.5" ></text>
</g>
<g >
<title>arrow::Buffer::ZeroPadding (217,561 samples, 0.02%)</title><rect x="191.1" y="741" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="194.06" y="751.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FreeList::TryPop (599,446 samples, 0.07%)</title><rect x="215.8" y="709" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="218.76" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (183,976 samples, 0.02%)</title><rect x="1148.9" y="709" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1151.86" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__function::__func&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (104,314,006 samples, 11.53%)</title><rect x="186.1" y="949" width="136.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="189.06" y="959.5" >std::__y1::__func..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (599,446 samples, 0.07%)</title><rect x="215.8" y="725" width="0.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="218.76" y="735.5" ></text>
</g>
<g >
<title>~TPlainKernel (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="389" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1163.25" y="399.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1,088,296 samples, 0.12%)</title><rect x="1187.2" y="933" width="1.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1190.16" y="943.5" ></text>
</g>
<g >
<title>unmap_page_range (9,795,159 samples, 1.08%)</title><rect x="1177.2" y="1077" width="12.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1180.22" y="1087.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (188,160 samples, 0.02%)</title><rect x="1148.4" y="949" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1151.37" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1221" width="14.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1178.80" y="1231.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (4,205,155 samples, 0.46%)</title><rect x="131.1" y="1237" width="5.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="134.15" y="1247.5" ></text>
</g>
<g >
<title>absl::lts_20240116::base_internal::SpinLock::Unlock (607,323 samples, 0.07%)</title><rect x="214.0" y="581" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="216.98" y="591.5" ></text>
</g>
<g >
<title>clear_page_erms (2,198,466 samples, 0.24%)</title><rect x="305.2" y="629" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="308.17" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (187,285 samples, 0.02%)</title><rect x="1146.5" y="917" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1149.46" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__uninitialized_allocator_copy[abi:v160005]&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt;, arrow::compute::InputType const*, arrow::compute::InputType const*, arrow::compute::InputType*&gt; (189,266 samples, 0.02%)</title><rect x="1146.0" y="885" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1148.97" y="895.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (9,490,468 samples, 1.05%)</title><rect x="684.6" y="917" width="12.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="687.57" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (177,831 samples, 0.02%)</title><rect x="1150.3" y="869" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1153.26" y="879.5" ></text>
</g>
<g >
<title>ArrayKernel (189,061 samples, 0.02%)</title><rect x="1145.7" y="853" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1148.72" y="863.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::UnRef (8,577,622 samples, 0.95%)</title><rect x="447.2" y="917" width="11.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="450.21" y="927.5" ></text>
</g>
<g >
<title>handle_pte_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="885" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1149.22" y="895.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (627,993 samples, 0.07%)</title><rect x="203.0" y="485" width="0.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="206.01" y="495.5" ></text>
</g>
<g >
<title>basic_string (179,708 samples, 0.02%)</title><rect x="1142.9" y="821" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1145.87" y="831.5" ></text>
</g>
<g >
<title>InputType (187,285 samples, 0.02%)</title><rect x="1146.5" y="821" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1149.46" y="831.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::destroy[abi:v160005]&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, void&gt; (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1077" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1168.96" y="1087.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::__clear[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="677" width="5.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1157.56" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterAggrAdd (156,145 samples, 0.02%)</title><rect x="1142.7" y="981" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1145.67" y="991.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::construct[abi:v160005]&lt;arrow::compute::InputType, arrow::compute::InputType const&amp;, void&gt; (187,285 samples, 0.02%)</title><rect x="1146.5" y="853" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1149.46" y="863.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (408,211 samples, 0.05%)</title><rect x="220.3" y="693" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="223.32" y="703.5" ></text>
</g>
<g >
<title>NUnitTest::RunMain (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1205" width="982.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="186.51" y="1215.5" >NUnitTest::RunMain</text>
</g>
<g >
<title>up_read (407,742 samples, 0.05%)</title><rect x="209.2" y="549" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="212.19" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="869" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1170.38" y="879.5" ></text>
</g>
<g >
<title>clear_page_erms (2,013,878 samples, 0.22%)</title><rect x="204.5" y="421" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="207.51" y="431.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::construct[abi:v160005]&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt;&gt; (2,182,053 samples, 0.24%)</title><rect x="1018.8" y="869" width="2.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1021.82" y="879.5" ></text>
</g>
<g >
<title>shared_ptr&lt;arrow::MemoryManager&gt; (601,801 samples, 0.07%)</title><rect x="194.3" y="677" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="197.27" y="687.5" ></text>
</g>
<g >
<title>std::__y1::make_shared[abi:v160005]&lt;arrow::compute::KernelSignature, std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;, arrow::compute::OutputType, bool&amp;, void&gt; (150,430 samples, 0.02%)</title><rect x="1142.3" y="837" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1145.29" y="847.5" ></text>
</g>
<g >
<title>NMurmurPrivate::MurmurHash64 (380,029 samples, 0.04%)</title><rect x="1152.3" y="949" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1155.31" y="959.5" ></text>
</g>
<g >
<title>NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;::FreePage (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="965" width="1.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1168.96" y="975.5" ></text>
</g>
<g >
<title>do_user_addr_fault (217,170 samples, 0.02%)</title><rect x="196.5" y="373" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="199.48" y="383.5" ></text>
</g>
<g >
<title>std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt;::data[abi:v160005] (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="821" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1146.11" y="831.5" ></text>
</g>
<g >
<title>vma_alloc_folio (217,449 samples, 0.02%)</title><rect x="220.3" y="565" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="223.32" y="575.5" ></text>
</g>
<g >
<title>exc_page_fault (109,516 samples, 0.01%)</title><rect x="1142.1" y="645" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1145.14" y="655.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TNotEqualsOp&gt; (186,768 samples, 0.02%)</title><rect x="1149.8" y="917" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1152.78" y="927.5" ></text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="773" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="783.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::CreateBlendMask (934,442 samples, 0.10%)</title><rect x="40.3" y="1237" width="1.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="43.34" y="1247.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOp&gt; (188,934 samples, 0.02%)</title><rect x="1145.2" y="917" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1148.23" y="927.5" ></text>
</g>
<g >
<title>~shared_ptr (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="357" width="4.3" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1158.98" y="367.5" ></text>
</g>
<g >
<title>handle_pte_fault (183,976 samples, 0.02%)</title><rect x="1148.9" y="629" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1151.86" y="639.5" ></text>
</g>
<g >
<title>Kernel (150,430 samples, 0.02%)</title><rect x="1142.3" y="869" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1145.29" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TFlowForwardListWrapper::TIterator::Next (602,592,793 samples, 66.62%)</title><rect x="356.1" y="1029" width="786.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="359.07" y="1039.5" >NKikimr::NMiniKQL::(anonymous namespace)::TFlowForwardListWrapper::TIterator::Next</text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (147,314 samples, 0.02%)</title><rect x="1150.5" y="901" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1153.50" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (185,631 samples, 0.02%)</title><rect x="1144.7" y="933" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1147.75" y="943.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (245,095 samples, 0.03%)</title><rect x="311.0" y="725" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="314.04" y="735.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (183,976 samples, 0.02%)</title><rect x="1148.9" y="597" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1151.86" y="607.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterAdd (402,277 samples, 0.04%)</title><rect x="1142.1" y="981" width="0.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1145.14" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (13,809,635 samples, 1.53%)</title><rect x="196.8" y="645" width="18.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="199.76" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (810,798 samples, 0.09%)</title><rect x="1021.7" y="581" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1024.66" y="591.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::function&lt;NKikimr::NMiniKQL::IComputationNode*  (190,949 samples, 0.02%)</title><rect x="165.2" y="1189" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="168.25" y="1199.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;unsigned int, false&gt;::exchange[abi:v160005] (607,323 samples, 0.07%)</title><rect x="214.0" y="565" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="216.98" y="575.5" ></text>
</g>
<g >
<title>irqentry_exit (685,814 samples, 0.08%)</title><rect x="210.3" y="565" width="0.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="213.26" y="575.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TSetup&lt;false&gt;::BuildGraph (104,314,006 samples, 11.53%)</title><rect x="186.1" y="1061" width="136.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="189.06" y="1071.5" >NKikimr::NMiniKQL..</text>
</g>
<g >
<title>CPUMemoryManager (310,894 samples, 0.03%)</title><rect x="215.4" y="725" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="218.36" y="735.5" ></text>
</g>
<g >
<title>CombineHashes&lt;unsigned long&gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="805" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1152.33" y="815.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (410,542 samples, 0.05%)</title><rect x="203.0" y="469" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="206.01" y="479.5" ></text>
</g>
<g >
<title>do_set_pte (166,980 samples, 0.02%)</title><rect x="1144.5" y="645" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1147.53" y="655.5" ></text>
</g>
<g >
<title>vector (189,266 samples, 0.02%)</title><rect x="1146.0" y="917" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1148.97" y="927.5" ></text>
</g>
<g >
<title>~vector (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="453" width="4.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1158.98" y="463.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (150,430 samples, 0.02%)</title><rect x="1142.3" y="549" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1145.29" y="559.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (166,980 samples, 0.02%)</title><rect x="1144.5" y="949" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1147.53" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (188,627 samples, 0.02%)</title><rect x="1145.5" y="869" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1148.48" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareDatetime&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateNotEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (186,127 samples, 0.02%)</title><rect x="1150.0" y="965" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1153.02" y="975.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (189,512 samples, 0.02%)</title><rect x="1154.2" y="821" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1157.22" y="831.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (685,814 samples, 0.08%)</title><rect x="210.3" y="533" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="213.26" y="543.5" ></text>
</g>
<g >
<title>page_add_file_rmap (166,980 samples, 0.02%)</title><rect x="1144.5" y="629" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1147.53" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub&gt; (147,314 samples, 0.02%)</title><rect x="1150.5" y="933" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1153.50" y="943.5" ></text>
</g>
<g >
<title>~TBasicString (186,860 samples, 0.02%)</title><rect x="1148.1" y="901" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1151.13" y="911.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__clear[abi:v160005] (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="245" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1163.25" y="255.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Finish (1,585,509 samples, 0.18%)</title><rect x="216.5" y="789" width="2.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="219.55" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TTypeEnvironment::Allocate&lt;NKikimr::NMiniKQL::TDataType&gt; (190,647 samples, 0.02%)</title><rect x="322.1" y="1029" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="325.14" y="1039.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateEquals&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TInterval&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TInterval64&gt;, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TInterval&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TInterval64&gt;, false, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (184,675 samples, 0.02%)</title><rect x="1145.0" y="933" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1147.99" y="943.5" ></text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="837" width="2.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1163.25" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TPagedArena::Alloc (190,647 samples, 0.02%)</title><rect x="322.1" y="1013" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="325.14" y="1023.5" ></text>
</g>
<g >
<title>__split_buffer (183,976 samples, 0.02%)</title><rect x="1148.9" y="853" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1151.86" y="863.5" ></text>
</g>
<g >
<title>~unordered_map (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="565" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1163.25" y="575.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (299,831 samples, 0.03%)</title><rect x="1150.5" y="949" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1153.50" y="959.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::push_back[abi:v160005] (109,516 samples, 0.01%)</title><rect x="1142.1" y="869" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.14" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::InvalidateValue (44,539,244 samples, 4.92%)</title><rect x="414.3" y="965" width="58.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="417.27" y="975.5" >NKikim..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterFromDateConvert&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt; &gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="965" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1145.87" y="975.5" ></text>
</g>
<g >
<title>arrow::NumericBuilder&lt;arrow::UInt64Type&gt;::Resize (20,623,103 samples, 2.28%)</title><rect x="189.6" y="837" width="26.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="192.64" y="847.5" >a..</text>
</g>
<g >
<title>handle_mm_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="741" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1147.53" y="751.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (19,672,659 samples, 2.17%)</title><rect x="432.7" y="949" width="25.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="435.74" y="959.5" >N..</text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (5,293,769 samples, 0.59%)</title><rect x="674.8" y="917" width="6.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="677.82" y="927.5" ></text>
</g>
<g >
<title>arrow::uint64 (408,611 samples, 0.05%)</title><rect x="189.1" y="821" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="192.11" y="831.5" ></text>
</g>
<g >
<title>NUnitTest::TTestBase::Run (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1157" width="982.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="186.51" y="1167.5" >NUnitTest::TTestBase::Run</text>
</g>
<g >
<title>std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;::compare (189,512 samples, 0.02%)</title><rect x="1154.2" y="869" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1157.22" y="879.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__construct_at_end&lt;arrow::compute::InputType const*, 0&gt; (166,980 samples, 0.02%)</title><rect x="1144.5" y="885" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1147.53" y="895.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (217,645 samples, 0.02%)</title><rect x="208.9" y="549" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="211.91" y="559.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="789" width="5.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1157.56" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::GetPrimitiveOutputArrowType&lt;signed char&gt; (142,331 samples, 0.02%)</title><rect x="1142.5" y="901" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1145.48" y="911.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void*&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void, void&gt; (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="517" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1163.25" y="527.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="885" width="1.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1146.11" y="895.5" ></text>
</g>
<g >
<title>NSimd::NAVX2::TSimd8&lt;signed char&gt;::Get (12,713,262 samples, 1.41%)</title><rect x="900.9" y="901" width="16.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="903.95" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__allocate_at_least[abi:v160005]&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt; (185,631 samples, 0.02%)</title><rect x="1144.7" y="869" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1147.75" y="879.5" ></text>
</g>
<g >
<title>shared_ptr (166,980 samples, 0.02%)</title><rect x="1144.5" y="805" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1147.53" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (152,517 samples, 0.02%)</title><rect x="1150.7" y="869" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1153.69" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__constexpr_memcmp[abi:v160005]&lt;char&gt; (1,088,018 samples, 0.12%)</title><rect x="1152.8" y="853" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1155.80" y="863.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="885" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1170.38" y="895.5" ></text>
</g>
<g >
<title>shared_ptr&lt;arrow::ResizableBuffer, std::__y1::default_delete&lt;arrow::ResizableBuffer&gt;, void&gt; (599,446 samples, 0.07%)</title><rect x="215.8" y="773" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="218.76" y="783.5" ></text>
</g>
<g >
<title>~PoolBuffer (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="309" width="4.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1158.98" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="821" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1170.38" y="831.5" ></text>
</g>
<g >
<title>NSimd::NAVX2::TSimd8&lt;signed char&gt;::Blend (13,883,574 samples, 1.53%)</title><rect x="882.8" y="901" width="18.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="885.83" y="911.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,197,968 samples, 0.13%)</title><rect x="298.2" y="693" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="301.16" y="703.5" ></text>
</g>
<g >
<title>unmap_vmas (9,795,159 samples, 1.08%)</title><rect x="1177.2" y="1109" width="12.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1180.22" y="1119.5" ></text>
</g>
<g >
<title>~__hash_table (1,089,938 samples, 0.12%)</title><rect x="1161.7" y="549" width="1.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1164.67" y="559.5" ></text>
</g>
<g >
<title>std::__y1::__constexpr_memcmp[abi:v160005]&lt;char&gt; (189,512 samples, 0.02%)</title><rect x="1154.2" y="837" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1157.22" y="847.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::PrepareMasks (1,089,830 samples, 0.12%)</title><rect x="1017.4" y="901" width="1.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1020.39" y="911.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="773" width="1.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1170.38" y="783.5" ></text>
</g>
<g >
<title>Kernel (188,934 samples, 0.02%)</title><rect x="1145.2" y="869" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1148.23" y="879.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TPlainKernel, NKikimr::NMiniKQL::TKernelFamilyBase&amp;, std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;&amp;, unsigned short&amp;, arrow::compute::ScalarKernel&amp;, NKikimr::NMiniKQL::TKernel::ENullMode&gt; (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="917" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1153.89" y="927.5" ></text>
</g>
<g >
<title>sync_regs (2,171,793 samples, 0.24%)</title><rect x="211.2" y="597" width="2.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="214.15" y="607.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="869" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1152.33" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (147,314 samples, 0.02%)</title><rect x="1150.5" y="853" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1153.50" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (179,708 samples, 0.02%)</title><rect x="1142.9" y="901" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1145.87" y="911.5" ></text>
</g>
<g >
<title>__folio_alloc (3,672,884 samples, 0.41%)</title><rect x="203.8" y="469" width="4.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="206.83" y="479.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;TThrRefBase&gt; (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="949" width="2.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1163.25" y="959.5" ></text>
</g>
<g >
<title>free_unref_page_list (1,088,296 samples, 0.12%)</title><rect x="1187.2" y="965" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1190.16" y="975.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (3,272,717 samples, 0.36%)</title><rect x="1085.9" y="949" width="4.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1088.94" y="959.5" ></text>
</g>
<g >
<title>TCMallocInternalPosixMemalign (14,026,805 samples, 1.55%)</title><rect x="196.5" y="693" width="18.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="199.48" y="703.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (1,091,152 samples, 0.12%)</title><rect x="1022.7" y="853" width="1.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1025.72" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (217,449 samples, 0.02%)</title><rect x="220.3" y="629" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="223.32" y="639.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::GetElement (9,275,698 samples, 1.03%)</title><rect x="169.8" y="1205" width="12.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="172.76" y="1215.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (1,088,597 samples, 0.12%)</title><rect x="1185.7" y="965" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1188.74" y="975.5" ></text>
</g>
<g >
<title>~ArrayKernel (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="373" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1163.25" y="383.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (847,173 samples, 0.09%)</title><rect x="201.9" y="469" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="204.91" y="479.5" ></text>
</g>
<g >
<title>std::__y1::fill_n[abi:v160005]&lt;NYql::NUdf::TUnboxedValue*, unsigned long, NYql::NUdf::TUnboxedValue&gt; (76,077,309 samples, 8.41%)</title><rect x="556.2" y="933" width="99.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="559.19" y="943.5" >std::__y1::f..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (186,127 samples, 0.02%)</title><rect x="1150.0" y="917" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1153.02" y="927.5" ></text>
</g>
<g >
<title>TSimd8 (1,090,258 samples, 0.12%)</title><rect x="1010.5" y="885" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1013.48" y="895.5" ></text>
</g>
<g >
<title>exc_page_fault (9,830,850 samples, 1.09%)</title><rect x="198.3" y="581" width="12.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="201.33" y="591.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (6,541,570 samples, 0.72%)</title><rect x="458.4" y="949" width="8.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="461.40" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::GetElement (9,275,698 samples, 1.03%)</title><rect x="169.8" y="1221" width="12.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="172.76" y="1231.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (13,809,635 samples, 1.53%)</title><rect x="196.8" y="661" width="18.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="199.76" y="671.5" ></text>
</g>
<g >
<title>std::__y1::function&lt;NKikimr::NMiniKQL::IComputationNode*  (104,314,006 samples, 11.53%)</title><rect x="186.1" y="981" width="136.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="189.06" y="991.5" >std::__y1::functi..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod&gt; (172,783 samples, 0.02%)</title><rect x="1149.1" y="933" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1152.10" y="943.5" ></text>
</g>
<g >
<title>~vector (188,934 samples, 0.02%)</title><rect x="1145.2" y="853" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1148.23" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (187,285 samples, 0.02%)</title><rect x="1146.5" y="949" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1149.46" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TArrayNode::DoCalculate (5,248,297 samples, 0.58%)</title><rect x="77.7" y="1237" width="6.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="80.68" y="1247.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IComputationNode, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationNode&gt; &gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="773" width="5.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1157.56" y="783.5" ></text>
</g>
<g >
<title>filemap_map_pages (186,768 samples, 0.02%)</title><rect x="1149.8" y="757" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1152.78" y="767.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (7,289,111 samples, 0.81%)</title><rect x="739.5" y="949" width="9.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="742.53" y="959.5" ></text>
</g>
<g >
<title>std::__y1::deque&lt;(anonymous namespace)::TAtExit::TFunc, std::__y1::allocator&lt;(anonymous namespace)::TAtExit::TFunc&gt; &gt;::push_back (190,647 samples, 0.02%)</title><rect x="322.1" y="885" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="325.14" y="895.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::IComputationPattern, TAtomicCounter, TDelete&gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="997" width="5.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1157.56" y="1007.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="789" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1147.53" y="799.5" ></text>
</g>
<g >
<title>ArrayKernel (172,783 samples, 0.02%)</title><rect x="1149.1" y="885" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1152.10" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (310,894 samples, 0.03%)</title><rect x="215.4" y="677" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="218.36" y="687.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1061" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1170.38" y="1071.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (185,631 samples, 0.02%)</title><rect x="1144.7" y="805" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1147.75" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__uninitialized_allocator_copy[abi:v160005]&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt;, arrow::compute::InputType const*, arrow::compute::InputType const*, arrow::compute::InputType*&gt; (187,285 samples, 0.02%)</title><rect x="1146.5" y="869" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1149.46" y="879.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Reset (496,106 samples, 0.05%)</title><rect x="218.0" y="773" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="220.97" y="783.5" ></text>
</g>
<g >
<title>[anon] (47,394,216 samples, 5.24%)</title><rect x="75.0" y="1253" width="61.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="78.02" y="1263.5" >[anon]</text>
</g>
<g >
<title>vector (188,160 samples, 0.02%)</title><rect x="1148.4" y="901" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1151.37" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;bool&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (189,266 samples, 0.02%)</title><rect x="1146.0" y="933" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1148.97" y="943.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (7,100,468 samples, 0.78%)</title><rect x="707.9" y="933" width="9.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="710.94" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (2,181,267 samples, 0.24%)</title><rect x="1090.2" y="997" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1093.21" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__unwrap_and_dispatch[abi:v160005]&lt;std::__y1::__overload&lt;std::__y1::__copy_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__copy_trivial&gt;, char const*, char const*, char*, 0&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="709" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1145.87" y="719.5" ></text>
</g>
<g >
<title>do_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="709" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="192.11" y="719.5" ></text>
</g>
<g >
<title>do_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="789" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1152.78" y="799.5" ></text>
</g>
<g >
<title>TStdString&lt;const char *&amp;, unsigned long &amp;&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="837" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1145.87" y="847.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (685,814 samples, 0.08%)</title><rect x="210.3" y="549" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="213.26" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (755,303,911 samples, 83.50%)</title><rect x="183.5" y="1237" width="985.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="186.51" y="1247.5" >__libc_start_main_impl</text>
</g>
<g >
<title>IntHashImpl (157,984 samples, 0.02%)</title><rect x="1149.3" y="773" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1152.33" y="783.5" ></text>
</g>
<g >
<title>NKikimr::(anonymous namespace)::TGlobalPools&lt;NKikimr::TSystemMmap&gt;::Instance (190,647 samples, 0.02%)</title><rect x="322.1" y="965" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="325.14" y="975.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SizeMap::GetSizeClass&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt; &gt; (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="869" width="1.4" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1153.89" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper::TState::Get (67,287,312 samples, 7.44%)</title><rect x="771.3" y="949" width="87.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="774.32" y="959.5" >NKikimr::N..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::PtrToIdxSized&lt; (1,090,125 samples, 0.12%)</title><rect x="1157.4" y="37" width="1.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1160.41" y="47.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::Ref (2,927,825 samples, 0.32%)</title><rect x="745.2" y="933" width="3.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="748.22" y="943.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (150,430 samples, 0.02%)</title><rect x="1142.3" y="741" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1145.29" y="751.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;arrow::compute::InputType&gt;::allocate[abi:v160005] (185,631 samples, 0.02%)</title><rect x="1144.7" y="853" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1147.75" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (217,519 samples, 0.02%)</title><rect x="189.4" y="789" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="192.36" y="799.5" ></text>
</g>
<g >
<title>mt_find (217,645 samples, 0.02%)</title><rect x="208.9" y="517" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="211.91" y="527.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt; &gt; (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1013" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1168.96" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_sub[abi:v160005]&lt;long&gt; (696,877 samples, 0.08%)</title><rect x="222.6" y="757" width="0.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="225.55" y="767.5" ></text>
</g>
<g >
<title>NPrivate::SingletonBase&lt;NKikimr::(anonymous namespace)::TGlobalPools&lt;NKikimr::TSystemMmap&gt;, 65536ul&gt; (190,647 samples, 0.02%)</title><rect x="322.1" y="917" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="325.14" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (810,798 samples, 0.09%)</title><rect x="1021.7" y="597" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1024.66" y="607.5" ></text>
</g>
<g >
<title>std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt;::__init (179,708 samples, 0.02%)</title><rect x="1142.9" y="805" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1145.87" y="815.5" ></text>
</g>
<g >
<title>do_user_addr_fault (8,370,100 samples, 0.93%)</title><rect x="198.8" y="565" width="10.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="201.80" y="575.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePolyOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateNotEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (186,127 samples, 0.02%)</title><rect x="1150.0" y="949" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1153.02" y="959.5" ></text>
</g>
<g >
<title>up_read (1,009,854 samples, 0.11%)</title><rect x="312.1" y="757" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="315.15" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterUnsignedShiftFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TRotLeft, NKikimr::NMiniKQL::TBinaryShiftArgsOpt&gt; (177,831 samples, 0.02%)</title><rect x="1150.3" y="965" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1153.26" y="975.5" ></text>
</g>
<g >
<title>sync_regs (217,089 samples, 0.02%)</title><rect x="315.1" y="805" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="318.12" y="815.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (4,362,573 samples, 0.48%)</title><rect x="546.4" y="933" width="5.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="549.43" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TMutableComputationNode&lt;NKikimr::NMiniKQL::TArrayNode&gt;::GetValue (199,053,480 samples, 22.01%)</title><rect x="489.4" y="981" width="259.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="492.38" y="991.5" >NKikimr::NMiniKQL::TMutableComputa..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestBlockFlowWrapper, false&gt;::FetchValues (1,090,463 samples, 0.12%)</title><rect x="126.9" y="1237" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="129.88" y="1247.5" ></text>
</g>
<g >
<title>all (904,564,733 samples, 100%)</title><rect x="10.0" y="1285" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>arrow::Buffer::ZeroPadding (1,089,403 samples, 0.12%)</title><rect x="216.5" y="773" width="1.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="219.55" y="783.5" ></text>
</g>
<g >
<title>THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;::DoDestroy (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1029" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1168.96" y="1039.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (410,542 samples, 0.05%)</title><rect x="203.0" y="453" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="206.01" y="463.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,802,328 samples, 0.75%)</title><rect x="200.0" y="517" width="8.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="203.03" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (185,631 samples, 0.02%)</title><rect x="1144.7" y="741" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1147.75" y="751.5" ></text>
</g>
<g >
<title>exit_mmap (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1125" width="14.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1178.80" y="1135.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, void&gt; (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="645" width="5.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1157.56" y="655.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralDiv&gt; (166,980 samples, 0.02%)</title><rect x="1144.5" y="933" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1147.53" y="943.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, void&gt; (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="389" width="4.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1158.98" y="399.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::MakeUnique (310,894 samples, 0.03%)</title><rect x="215.4" y="773" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="218.36" y="783.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod, NKikimr::NMiniKQL::(anonymous namespace)::TMod&gt;&gt; (172,783 samples, 0.02%)</title><rect x="1149.1" y="965" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1152.10" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;float&gt;, NYql::NUdf::TDataType&lt;float&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TMin, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="933" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1151.86" y="943.5" ></text>
</g>
<g >
<title>down_read_trylock (217,317 samples, 0.02%)</title><rect x="295.2" y="757" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="298.21" y="767.5" ></text>
</g>
<g >
<title>do_anonymous_page (185,631 samples, 0.02%)</title><rect x="1144.7" y="645" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1147.75" y="655.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalAdd&lt; (156,145 samples, 0.02%)</title><rect x="1142.7" y="917" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1145.67" y="927.5" ></text>
</g>
<g >
<title>handle_mm_fault (217,170 samples, 0.02%)</title><rect x="196.5" y="357" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="199.48" y="367.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__push_back_slow_path&lt;NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="853" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1145.14" y="863.5" ></text>
</g>
<g >
<title>release_pages (218,013 samples, 0.02%)</title><rect x="202.7" y="421" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="205.73" y="431.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::__destroy_vector::operator (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="597" width="5.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1157.56" y="607.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt; &gt;::construct[abi:v160005]&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt;, , void&gt; (2,182,053 samples, 0.24%)</title><rect x="1018.8" y="885" width="2.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1021.82" y="895.5" ></text>
</g>
<g >
<title>~TKernelFamilyBase (1,089,938 samples, 0.12%)</title><rect x="1161.7" y="597" width="1.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1164.67" y="607.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (217,921 samples, 0.02%)</title><rect x="222.3" y="757" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="225.27" y="767.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::FreeSmall&lt; (217,921 samples, 0.02%)</title><rect x="222.3" y="741" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="225.27" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationExternalNode, false&gt;::GetDependencesCount (6,377,605 samples, 0.71%)</title><rect x="749.0" y="981" width="8.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="752.04" y="991.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes, TAtomicCounter, TDelete&gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="869" width="5.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1157.56" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__copy[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, char const*, char const*, char*&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="741" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1145.87" y="751.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::FreeSmall&lt; (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="197" width="4.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1158.98" y="207.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Reserve (936,936 samples, 0.10%)</title><rect x="191.3" y="725" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.35" y="735.5" ></text>
</g>
<g >
<title>NPrivate::SingletonBase&lt;NKikimr::NMiniKQL::(anonymous namespace)::TCallableComputationNodeBuilderFuncMapFiller, 65536ul&gt; (190,949 samples, 0.02%)</title><rect x="165.2" y="1237" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="168.25" y="1247.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="725" width="1.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1027.14" y="735.5" ></text>
</g>
<g >
<title>shared_ptr&lt;arrow::CPUMemoryManager, void&gt; (601,801 samples, 0.07%)</title><rect x="194.3" y="709" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="197.27" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="821" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1152.78" y="831.5" ></text>
</g>
<g >
<title>std::__y1::__dispatch_copy_or_move[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::__copy_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__copy_trivial, char const*, char const*, char*&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="725" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1145.87" y="735.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="965" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1149.22" y="975.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TPlainKernel, NKikimr::NMiniKQL::TKernelFamilyBase&amp;, std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;&amp;, unsigned short&amp;, arrow::compute::ScalarKernel&amp;, NKikimr::NMiniKQL::TKernel::ENullMode const&amp;&gt; (189,061 samples, 0.02%)</title><rect x="1145.7" y="901" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1148.72" y="911.5" ></text>
</g>
<g >
<title>arrow::uint64 (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="773" width="1.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1027.14" y="783.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (6,998,100 samples, 0.77%)</title><rect x="346.9" y="997" width="9.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="349.94" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (177,831 samples, 0.02%)</title><rect x="1150.3" y="885" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1153.26" y="895.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__construct_at_end&lt;arrow::compute::InputType const*, 0&gt; (188,160 samples, 0.02%)</title><rect x="1148.4" y="885" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1151.37" y="895.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,458,754 samples, 0.38%)</title><rect x="204.1" y="437" width="4.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="207.11" y="447.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (183,976 samples, 0.02%)</title><rect x="1148.9" y="901" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.86" y="911.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Deallocate (217,921 samples, 0.02%)</title><rect x="222.3" y="725" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="225.27" y="735.5" ></text>
</g>
<g >
<title>slow_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (217,170 samples, 0.02%)</title><rect x="196.5" y="661" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="199.48" y="671.5" ></text>
</g>
<g >
<title>__allocation_guard&lt;std::__y1::allocator&lt;arrow::compute::KernelSignature&gt; &gt; (150,430 samples, 0.02%)</title><rect x="1142.3" y="805" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1145.29" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (12,158,599 samples, 1.34%)</title><rect x="295.5" y="757" width="15.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="298.49" y="767.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::function&lt;NKikimr::NMiniKQL::IComputationNode*  (190,949 samples, 0.02%)</title><rect x="165.2" y="1173" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="168.25" y="1183.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="805" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1168.96" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (177,831 samples, 0.02%)</title><rect x="1150.3" y="917" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1153.26" y="927.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="213" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1158.98" y="223.5" ></text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="725" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterShiftFunctionOpt&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TRotLeft, NKikimr::NMiniKQL::TBinaryShiftArgsOpt&gt; (177,831 samples, 0.02%)</title><rect x="1150.3" y="949" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1153.26" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (189,266 samples, 0.02%)</title><rect x="1146.0" y="773" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1148.97" y="783.5" ></text>
</g>
<g >
<title>ArrayKernel (150,430 samples, 0.02%)</title><rect x="1142.3" y="901" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1145.29" y="911.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (217,170 samples, 0.02%)</title><rect x="196.5" y="405" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="199.48" y="415.5" ></text>
</g>
<g >
<title>TStringPtrOps&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt; &gt;::UnRef (186,860 samples, 0.02%)</title><rect x="1148.1" y="853" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1151.13" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (152,517 samples, 0.02%)</title><rect x="1150.7" y="837" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1153.69" y="847.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::MergeColumns (123,532,040 samples, 13.66%)</title><rect x="860.5" y="933" width="161.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="863.52" y="943.5" >NSimd::Perfomancer::..</text>
</g>
<g >
<title>std::__y1::__fill_n[abi:v160005]&lt;NYql::NUdf::TUnboxedValue*, unsigned long, NYql::NUdf::TUnboxedValue&gt; (76,077,309 samples, 8.41%)</title><rect x="556.2" y="917" width="99.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="559.19" y="927.5" >std::__y1::_..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="917" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1145.14" y="927.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (5,452,881 samples, 0.60%)</title><rect x="1129.0" y="997" width="7.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1132.04" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (445,602 samples, 0.05%)</title><rect x="214.8" y="693" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="217.78" y="703.5" ></text>
</g>
<g >
<title>arrow::BitUtil::SetBitTo (36,133,281 samples, 3.99%)</title><rect x="225.1" y="805" width="47.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="228.09" y="815.5" >arro..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TRotLeft&lt;unsigned char, unsigned char&gt;, NKikimr::NMiniKQL::TBinaryShiftArgsOpt&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (177,831 samples, 0.02%)</title><rect x="1150.3" y="933" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1153.26" y="943.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::Sample (1,088,976 samples, 0.12%)</title><rect x="195.1" y="693" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="198.06" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (109,516 samples, 0.01%)</title><rect x="1142.1" y="613" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1145.14" y="623.5" ></text>
</g>
<g >
<title>find_vma (217,645 samples, 0.02%)</title><rect x="208.9" y="533" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="211.91" y="543.5" ></text>
</g>
<g >
<title>charge_memcg (109,516 samples, 0.01%)</title><rect x="1142.1" y="533" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1145.14" y="543.5" ></text>
</g>
<g >
<title>handle_pte_fault (217,170 samples, 0.02%)</title><rect x="196.5" y="325" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="199.48" y="335.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareIntegral&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (187,794 samples, 0.02%)</title><rect x="1148.6" y="949" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1151.62" y="959.5" ></text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="757" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareOpt&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreater, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (188,627 samples, 0.02%)</title><rect x="1145.5" y="933" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1148.48" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (184,675 samples, 0.02%)</title><rect x="1145.0" y="917" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1147.99" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterRotLeft (177,831 samples, 0.02%)</title><rect x="1150.3" y="981" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1153.26" y="991.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (484,359 samples, 0.05%)</title><rect x="297.2" y="677" width="0.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="300.25" y="687.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeAllocator::AllocateRange (217,170 samples, 0.02%)</title><rect x="196.5" y="485" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="199.48" y="495.5" ></text>
</g>
<g >
<title>~__value_func (187,028 samples, 0.02%)</title><rect x="1149.5" y="869" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1152.53" y="879.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (847,173 samples, 0.09%)</title><rect x="201.9" y="485" width="1.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="204.91" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (408,211 samples, 0.05%)</title><rect x="220.3" y="741" width="0.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="223.32" y="751.5" ></text>
</g>
<g >
<title>_start (755,303,911 samples, 83.50%)</title><rect x="183.5" y="1253" width="985.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="186.51" y="1263.5" >_start</text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_sub[abi:v160005] (696,877 samples, 0.08%)</title><rect x="222.6" y="773" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="225.55" y="783.5" ></text>
</g>
<g >
<title>__GI_exit (2,178,668 samples, 0.24%)</title><rect x="1166.0" y="1205" width="2.8" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1168.96" y="1215.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (150,430 samples, 0.02%)</title><rect x="1142.3" y="709" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1145.29" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TAdd&gt; (142,331 samples, 0.02%)</title><rect x="1142.5" y="917" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1145.48" y="927.5" ></text>
</g>
<g >
<title>~vector (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="277" width="1.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1163.25" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::CentralFreeList::RemoveRange (607,323 samples, 0.07%)</title><rect x="214.0" y="613" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="216.98" y="623.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Next (602,592,793 samples, 66.62%)</title><rect x="356.1" y="1061" width="786.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="359.07" y="1071.5" >NYql::NUdf::TUnboxedValuePod::Next</text>
</g>
<g >
<title>release_pages (1,089,157 samples, 0.12%)</title><rect x="1175.8" y="1061" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1178.80" y="1071.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="869" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1149.71" y="879.5" ></text>
</g>
<g >
<title>__alloc_pages (217,449 samples, 0.02%)</title><rect x="220.3" y="533" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="223.32" y="543.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeCache::Get (217,170 samples, 0.02%)</title><rect x="196.5" y="533" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="199.48" y="543.5" ></text>
</g>
<g >
<title>__value_func (189,061 samples, 0.02%)</title><rect x="1145.7" y="821" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1148.72" y="831.5" ></text>
</g>
<g >
<title>exc_page_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="869" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1152.78" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod&gt; (172,783 samples, 0.02%)</title><rect x="1149.1" y="917" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1152.10" y="927.5" ></text>
</g>
<g >
<title>NPrivate::Destroyer&lt;NKikimr::(anonymous namespace)::TGlobalPools&lt;NKikimr::TSystemMmap&gt; &gt; (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1173" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1168.96" y="1183.5" ></text>
</g>
<g >
<title>~basic_string (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1157" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1170.38" y="1167.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3,265,327 samples, 0.36%)</title><rect x="1185.7" y="1029" width="4.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1188.74" y="1039.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::internal_transfer_cache::RingBufferTransferCache&lt;tcmalloc::tcmalloc_internal::CentralFreeList, tcmalloc::tcmalloc_internal::TransferCacheManager&gt;::InsertRange (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="117" width="4.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1158.98" y="127.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (147,314 samples, 0.02%)</title><rect x="1150.5" y="869" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1153.50" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__copy_trivial::operator (179,708 samples, 0.02%)</title><rect x="1142.9" y="693" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1145.87" y="703.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_exchange[abi:v160005]&lt;unsigned int&gt; (607,323 samples, 0.07%)</title><rect x="214.0" y="549" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="216.98" y="559.5" ></text>
</g>
<g >
<title>mas_wr_modify (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="789" width="1.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1168.96" y="799.5" ></text>
</g>
<g >
<title>NPrivate::SingletonInt&lt;NKikimr::(anonymous namespace)::TGlobalPools&lt;NKikimr::TSystemMmap&gt;, 65536ul&gt; (190,647 samples, 0.02%)</title><rect x="322.1" y="933" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="325.14" y="943.5" ></text>
</g>
<g >
<title>shared_ptr (1,089,118 samples, 0.12%)</title><rect x="218.6" y="837" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="221.61" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd&lt;unsigned int, unsigned char, unsigned int&gt;, NKikimr::NMiniKQL::TBinaryArgsOpt&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="901" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1145.14" y="911.5" ></text>
</g>
<g >
<title>__handle_mm_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="741" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="192.11" y="751.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (2,181,354 samples, 0.24%)</title><rect x="549.3" y="917" width="2.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="552.27" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterGreaterOrEqual (567,546 samples, 0.06%)</title><rect x="1145.7" y="981" width="0.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1148.72" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::CentralFreeList::Populate (109,516 samples, 0.01%)</title><rect x="1142.1" y="693" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1145.14" y="703.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SizeMap::GetSizeClass&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt; &gt; (216,690 samples, 0.02%)</title><rect x="191.3" y="645" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="194.35" y="655.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="757" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1145.14" y="767.5" ></text>
</g>
<g >
<title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::SystemAllocator&gt;::Free (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="277" width="4.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1158.98" y="287.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (150,430 samples, 0.02%)</title><rect x="1142.3" y="757" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1145.29" y="767.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_deallocate[abi:v160005] (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1109" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1170.38" y="1119.5" ></text>
</g>
<g >
<title>handle_mm_fault (150,430 samples, 0.02%)</title><rect x="1142.3" y="613" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1145.29" y="623.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TNotEqualsOp&gt; (186,768 samples, 0.02%)</title><rect x="1149.8" y="949" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1152.78" y="959.5" ></text>
</g>
<g >
<title>HashLen0to16 (184,675 samples, 0.02%)</title><rect x="1145.0" y="805" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1147.99" y="815.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::mutable_data (1,089,347 samples, 0.12%)</title><rect x="272.2" y="789" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="275.23" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterAggregateFunctionForPrecision&lt; (156,145 samples, 0.02%)</title><rect x="1142.7" y="949" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1145.67" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__allocate_at_least[abi:v160005]&lt;std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt; (408,211 samples, 0.05%)</title><rect x="220.3" y="805" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="223.32" y="815.5" ></text>
</g>
<g >
<title>mtree_range_walk (605,852 samples, 0.07%)</title><rect x="311.4" y="709" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="314.36" y="719.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (172,783 samples, 0.02%)</title><rect x="1149.1" y="949" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1152.10" y="959.5" ></text>
</g>
<g >
<title>~TUnboxedValue (3,272,717 samples, 0.36%)</title><rect x="1085.9" y="981" width="4.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1088.94" y="991.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (190,949 samples, 0.02%)</title><rect x="165.2" y="1141" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="168.25" y="1151.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="949" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1149.71" y="959.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::construct[abi:v160005]&lt;arrow::compute::InputType, arrow::compute::InputType const&amp;, void&gt; (166,980 samples, 0.02%)</title><rect x="1144.5" y="853" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1147.53" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TDataType::Create (190,647 samples, 0.02%)</title><rect x="322.1" y="1045" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="325.14" y="1055.5" ></text>
</g>
<g >
<title>ArrayKernel (188,934 samples, 0.02%)</title><rect x="1145.2" y="885" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1148.23" y="895.5" ></text>
</g>
<g >
<title>~shared_ptr (496,106 samples, 0.05%)</title><rect x="218.0" y="741" width="0.6" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="220.97" y="751.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::Ref (4,284,632 samples, 0.47%)</title><rect x="1094.5" y="965" width="5.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1097.48" y="975.5" ></text>
</g>
<g >
<title>charge_memcg (150,430 samples, 0.02%)</title><rect x="1142.3" y="533" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1145.29" y="543.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__shared_ptr_emplace&lt;arrow::compute::KernelSignature, std::__y1::allocator&lt;arrow::compute::KernelSignature&gt; &gt; &gt; &gt;::allocate[abi:v160005] (150,430 samples, 0.02%)</title><rect x="1142.3" y="789" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1145.29" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (1,091,152 samples, 0.12%)</title><rect x="1022.7" y="885" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1025.72" y="895.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IFunctionRegistry&gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="1013" width="2.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1163.25" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (310,894 samples, 0.03%)</title><rect x="215.4" y="629" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="218.36" y="639.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (1,090,777 samples, 0.12%)</title><rect x="1164.5" y="1029" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1167.52" y="1039.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::IsYield (4,594,196 samples, 0.51%)</title><rect x="1136.2" y="1013" width="5.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1139.15" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_sub[abi:v160005] (496,106 samples, 0.05%)</title><rect x="218.0" y="677" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="220.97" y="687.5" ></text>
</g>
<g >
<title>~function (172,783 samples, 0.02%)</title><rect x="1149.1" y="869" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1152.10" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (408,211 samples, 0.05%)</title><rect x="220.3" y="773" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="223.32" y="783.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::AllocSmall&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (1,088,976 samples, 0.12%)</title><rect x="195.1" y="725" width="1.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="198.06" y="735.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="837" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1168.96" y="847.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IComputationPattern, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationPattern&gt; &gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="1029" width="5.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1157.56" y="1039.5" ></text>
</g>
<g >
<title>do_read_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="693" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="192.11" y="703.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOp&gt; (188,934 samples, 0.02%)</title><rect x="1145.2" y="965" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1148.23" y="975.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::__shared_ptr_emplace&lt;arrow::compute::KernelSignature, std::__y1::allocator&lt;arrow::compute::KernelSignature&gt; &gt; &gt;::allocate[abi:v160005] (150,430 samples, 0.02%)</title><rect x="1142.3" y="773" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1145.29" y="783.5" ></text>
</g>
<g >
<title>lru_add_fn (183,976 samples, 0.02%)</title><rect x="1148.9" y="549" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1151.86" y="559.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap2&lt;30, &amp;tcmalloc::tcmalloc_internal::MetaDataAlloc&gt;::Ensure (217,170 samples, 0.02%)</title><rect x="196.5" y="437" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="199.48" y="447.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareOpt&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (187,794 samples, 0.02%)</title><rect x="1148.6" y="917" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1151.62" y="927.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::FinishWithLength (1,585,509 samples, 0.18%)</title><rect x="216.5" y="837" width="2.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="219.55" y="847.5" ></text>
</g>
<g >
<title>arrow::compute::KernelSignature::Make (150,430 samples, 0.02%)</title><rect x="1142.3" y="853" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1145.29" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (1,091,152 samples, 0.12%)</title><rect x="1022.7" y="837" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1025.72" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper, false&gt;::FetchValues (2,181,491 samples, 0.24%)</title><rect x="67.6" y="1237" width="2.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="70.62" y="1247.5" ></text>
</g>
<g >
<title>std::__y1::__function::__value_func&lt;NYql::NUdf::TUnboxedValue  (6,393,104 samples, 0.71%)</title><rect x="696.9" y="917" width="8.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="699.95" y="927.5" ></text>
</g>
<g >
<title>~__hash_table (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="741" width="2.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1163.25" y="751.5" ></text>
</g>
<g >
<title>exit_mm (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1173" width="14.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1178.80" y="1183.5" ></text>
</g>
<g >
<title>~__value_func (172,783 samples, 0.02%)</title><rect x="1149.1" y="853" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1152.10" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TTestCaseTestSIMDFromBlocks::Execute_ (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1093" width="982.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="186.51" y="1103.5" >NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TTestCaseTestSIMDFromBlocks::Execute_</text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="853" width="2.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1163.25" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (157,984 samples, 0.02%)</title><rect x="1149.3" y="901" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1152.33" y="911.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7,527,306 samples, 0.83%)</title><rect x="199.1" y="533" width="9.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="202.09" y="543.5" ></text>
</g>
<g >
<title>__irqentry_text_end (217,138 samples, 0.02%)</title><rect x="294.6" y="805" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="297.64" y="815.5" ></text>
</g>
<g >
<title>exc_page_fault (183,976 samples, 0.02%)</title><rect x="1148.9" y="693" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1151.86" y="703.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub, NKikimr::NMiniKQL::(anonymous namespace)::TSub&gt;&gt; (299,831 samples, 0.03%)</title><rect x="1150.5" y="965" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1153.50" y="975.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::__clear[abi:v160005] (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1109" width="1.4" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="1168.96" y="1119.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TComputationGraphBuildingVisitor::Visit (104,314,006 samples, 11.53%)</title><rect x="186.1" y="997" width="136.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="189.06" y="1007.5" >NKikimr::NMiniKQL..</text>
</g>
<g >
<title>_find_first_bit (216,522 samples, 0.02%)</title><rect x="310.8" y="677" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="313.75" y="687.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_sub[abi:v160005] (1,091,058 samples, 0.12%)</title><rect x="1154.6" y="453" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1157.56" y="463.5" ></text>
</g>
<g >
<title>NSimd::ChooseTrait&lt;NSimd::Perfomancer&gt; (1,090,973 samples, 0.12%)</title><rect x="859.1" y="933" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="862.09" y="943.5" ></text>
</g>
<g >
<title>exc_page_fault (217,449 samples, 0.02%)</title><rect x="220.3" y="661" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="223.32" y="671.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Scavenge (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="165" width="4.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1158.98" y="175.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::TransferCacheManager::InsertRange (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="933" width="1.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1170.38" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (185,631 samples, 0.02%)</title><rect x="1144.7" y="677" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1147.75" y="687.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (150,430 samples, 0.02%)</title><rect x="1142.3" y="725" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1145.29" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterMul (157,984 samples, 0.02%)</title><rect x="1149.3" y="981" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1152.33" y="991.5" ></text>
</g>
<g >
<title>do_anonymous_page (183,976 samples, 0.02%)</title><rect x="1148.9" y="613" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1151.86" y="623.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::ResizePoolBuffer&lt;std::__y1::unique_ptr&lt;arrow::ResizableBuffer, std::__y1::default_delete&lt;arrow::ResizableBuffer&gt; &gt;, std::__y1::unique_ptr&lt;arrow::PoolBuffer, std::__y1::default_delete&lt;arrow::PoolBuffer&gt; &gt; &gt; (2,243,393 samples, 0.25%)</title><rect x="189.6" y="757" width="3.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="192.64" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (11,288,547 samples, 1.25%)</title><rect x="296.3" y="725" width="14.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="299.31" y="735.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (310,894 samples, 0.03%)</title><rect x="215.4" y="613" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="218.36" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (185,631 samples, 0.02%)</title><rect x="1144.7" y="709" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1147.75" y="719.5" ></text>
</g>
<g >
<title>rmqueue (1,891,160 samples, 0.21%)</title><rect x="308.3" y="629" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="311.29" y="639.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (1,091,152 samples, 0.12%)</title><rect x="1022.7" y="821" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1025.72" y="831.5" ></text>
</g>
<g >
<title>do_user_addr_fault (150,430 samples, 0.02%)</title><rect x="1142.3" y="629" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1145.29" y="639.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeAllocator::Get (217,170 samples, 0.02%)</title><rect x="196.5" y="501" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="199.48" y="511.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="901" width="2.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1163.25" y="911.5" ></text>
</g>
<g >
<title>handle_pte_fault (150,430 samples, 0.02%)</title><rect x="1142.3" y="581" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1145.29" y="591.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryRealFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiv, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="965" width="1.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1146.11" y="975.5" ></text>
</g>
<g >
<title>__handle_mm_fault (189,219 samples, 0.02%)</title><rect x="1146.2" y="901" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1149.22" y="911.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (4,362,161 samples, 0.48%)</title><rect x="729.6" y="965" width="5.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="732.57" y="975.5" ></text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="709" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (285,780 samples, 0.03%)</title><rect x="191.6" y="677" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="194.63" y="687.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (184,675 samples, 0.02%)</title><rect x="1145.0" y="885" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1147.99" y="895.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (218,043 samples, 0.02%)</title><rect x="304.9" y="629" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="307.89" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (409,547 samples, 0.05%)</title><rect x="209.7" y="565" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="212.72" y="575.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (914,798 samples, 0.10%)</title><rect x="222.3" y="805" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="225.27" y="815.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::__vallocate[abi:v160005] (408,211 samples, 0.05%)</title><rect x="220.3" y="821" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="223.32" y="831.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (189,266 samples, 0.02%)</title><rect x="1146.0" y="725" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1148.97" y="735.5" ></text>
</g>
<g >
<title>__compressed_pair&lt;arrow::Status  (189,061 samples, 0.02%)</title><rect x="1145.7" y="757" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1148.72" y="767.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (5,302,795 samples, 0.59%)</title><rect x="655.4" y="933" width="6.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="658.43" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePolyOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TInterval&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TInterval64&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (184,675 samples, 0.02%)</title><rect x="1145.0" y="949" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1147.99" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper, false&gt;::FetchValues (32,146,563 samples, 3.55%)</title><rect x="1025.6" y="949" width="41.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1028.57" y="959.5" >NKi..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;float&gt;, NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiv, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="949" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1146.11" y="959.5" ></text>
</g>
<g >
<title>__alloc_func (189,061 samples, 0.02%)</title><rect x="1145.7" y="773" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1148.72" y="783.5" ></text>
</g>
<g >
<title>lru_add_fn (411,986 samples, 0.05%)</title><rect x="202.2" y="421" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="205.19" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::FreeSmall&lt; (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1013" width="1.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1170.38" y="1023.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (13,809,635 samples, 1.53%)</title><rect x="196.8" y="677" width="18.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="199.76" y="687.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt;::UnRef (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="885" width="5.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1157.56" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (1,089,118 samples, 0.12%)</title><rect x="218.6" y="821" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="221.61" y="831.5" ></text>
</g>
<g >
<title>do_user_addr_fault (109,516 samples, 0.01%)</title><rect x="1142.1" y="629" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1145.14" y="639.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt;::destroy[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="629" width="5.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1157.56" y="639.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::AllocatedBytes (1,088,976 samples, 0.12%)</title><rect x="195.1" y="677" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="198.06" y="687.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::LockAndAlloc (217,170 samples, 0.02%)</title><rect x="196.5" y="581" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="199.48" y="591.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (601,801 samples, 0.07%)</title><rect x="194.3" y="629" width="0.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="197.27" y="639.5" ></text>
</g>
<g >
<title>vector (185,631 samples, 0.02%)</title><rect x="1144.7" y="901" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1147.75" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::WrapTestBlockFlow (104,314,006 samples, 11.53%)</title><rect x="186.1" y="869" width="136.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="189.06" y="879.5" >NKikimr::NMiniKQL..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::THolderFactory::CreateArrowBlock (810,798 samples, 0.09%)</title><rect x="1021.7" y="901" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1024.66" y="911.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::emplace[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="885" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1149.71" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryUnsignedFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="933" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1145.14" y="943.5" ></text>
</g>
<g >
<title>arrow::CPUMemoryManager::Make (310,894 samples, 0.03%)</title><rect x="215.4" y="741" width="0.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="218.36" y="751.5" ></text>
</g>
<g >
<title>vector (2,182,053 samples, 0.24%)</title><rect x="1018.8" y="917" width="2.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1021.82" y="927.5" ></text>
</g>
<g >
<title>VariantStorage (810,798 samples, 0.09%)</title><rect x="1021.7" y="677" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1024.66" y="687.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;char&gt;::deallocate[abi:v160005] (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="1125" width="1.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1170.38" y="1135.5" ></text>
</g>
<g >
<title>shared_ptr (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="757" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1027.14" y="767.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (217,580 samples, 0.02%)</title><rect x="300.3" y="629" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="303.33" y="639.5" ></text>
</g>
<g >
<title>unordered_map (190,949 samples, 0.02%)</title><rect x="165.2" y="1205" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="168.25" y="1215.5" ></text>
</g>
<g >
<title>__vm_munmap (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="869" width="1.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1168.96" y="879.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="565" width="5.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1157.56" y="575.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::New (217,170 samples, 0.02%)</title><rect x="196.5" y="597" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="199.48" y="607.5" ></text>
</g>
<g >
<title>folio_add_lru (2,370,257 samples, 0.26%)</title><rect x="300.3" y="661" width="3.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="303.33" y="671.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (2,181,928 samples, 0.24%)</title><rect x="1163.1" y="1045" width="2.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1166.10" y="1055.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (13,201,929 samples, 1.46%)</title><rect x="832.3" y="933" width="17.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="835.28" y="943.5" ></text>
</g>
<g >
<title>__libc_start_call_main (755,303,911 samples, 83.50%)</title><rect x="183.5" y="1221" width="985.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="186.51" y="1231.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::__y1::vector&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt;, std::__y1::allocator&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt; &gt;::operator[][abi:v160005] (8,435,651 samples, 0.93%)</title><rect x="999.5" y="901" width="11.0" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1002.47" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,884,316 samples, 1.20%)</title><rect x="1175.8" y="1237" width="14.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1178.80" y="1247.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (183,976 samples, 0.02%)</title><rect x="1148.9" y="741" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1151.86" y="751.5" ></text>
</g>
<g >
<title>uncharge_folio (1,088,597 samples, 0.12%)</title><rect x="1185.7" y="949" width="1.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1188.74" y="959.5" ></text>
</g>
<g >
<title>filemap_map_pages (189,219 samples, 0.02%)</title><rect x="1146.2" y="837" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1149.22" y="847.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::AllocSmall (217,170 samples, 0.02%)</title><rect x="196.5" y="565" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="199.48" y="575.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper::GetState (1,090,868 samples, 0.12%)</title><rect x="769.9" y="949" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="772.89" y="959.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::SampleifyAllocation (1,088,976 samples, 0.12%)</title><rect x="195.1" y="709" width="1.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="198.06" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="709" width="1.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1027.14" y="719.5" ></text>
</g>
<g >
<title>uncharge_folio (1,089,157 samples, 0.12%)</title><rect x="1175.8" y="1029" width="1.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1178.80" y="1039.5" ></text>
</g>
<g >
<title>do_user_addr_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="757" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1147.53" y="767.5" ></text>
</g>
<g >
<title>mtree_range_walk (217,645 samples, 0.02%)</title><rect x="208.9" y="501" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="211.91" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (810,798 samples, 0.09%)</title><rect x="1021.7" y="661" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1024.66" y="671.5" ></text>
</g>
<g >
<title>TCMallocInternalPosixMemalign (217,170 samples, 0.02%)</title><rect x="196.5" y="677" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="199.48" y="687.5" ></text>
</g>
<g >
<title>__free_one_page (1,088,296 samples, 0.12%)</title><rect x="1187.2" y="917" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1190.16" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="853" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1152.33" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TTypeBuilder::NewDataType (190,647 samples, 0.02%)</title><rect x="322.1" y="1061" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="325.14" y="1071.5" ></text>
</g>
<g >
<title>TBasicString (179,708 samples, 0.02%)</title><rect x="1142.9" y="869" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1145.87" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__deallocate_node (1,089,938 samples, 0.12%)</title><rect x="1161.7" y="533" width="1.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1164.67" y="543.5" ></text>
</g>
<g >
<title>TPlainKernel (189,061 samples, 0.02%)</title><rect x="1145.7" y="885" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1148.72" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (5,163,260 samples, 0.57%)</title><rect x="116.1" y="1237" width="6.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="119.07" y="1247.5" ></text>
</g>
<g >
<title>native_irq_return_iret (656,670 samples, 0.07%)</title><rect x="314.3" y="805" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="317.27" y="815.5" ></text>
</g>
<g >
<title>do_user_addr_fault (183,976 samples, 0.02%)</title><rect x="1148.9" y="677" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1151.86" y="687.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IBuiltinFunctionRegistry, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IBuiltinFunctionRegistry&gt; &gt;::UnRef (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="885" width="2.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1163.25" y="895.5" ></text>
</g>
<g >
<title>NMurmurPrivate::TMurHelper&lt;64u&gt;::MurmurHash (380,029 samples, 0.04%)</title><rect x="1152.3" y="965" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1155.31" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareBigDatetime&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (184,675 samples, 0.02%)</title><rect x="1145.0" y="965" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1147.99" y="975.5" ></text>
</g>
<g >
<title>do_anonymous_page (109,516 samples, 0.01%)</title><rect x="1142.1" y="565" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1145.14" y="575.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::ReleaseToCentralCache (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="949" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1170.38" y="959.5" ></text>
</g>
<g >
<title>__handle_mm_fault (217,170 samples, 0.02%)</title><rect x="196.5" y="341" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="199.48" y="351.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::AllocAndReport&lt; (217,170 samples, 0.02%)</title><rect x="196.5" y="469" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="199.48" y="479.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="789" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1170.38" y="799.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (17,755,279 samples, 1.96%)</title><rect x="435.2" y="933" width="23.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="438.24" y="943.5" >N..</text>
</g>
<g >
<title>VariantImpl (810,798 samples, 0.09%)</title><rect x="1021.7" y="693" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1024.66" y="703.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterGreater (377,561 samples, 0.04%)</title><rect x="1145.2" y="981" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1148.23" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (1,276,017 samples, 0.14%)</title><rect x="1146.5" y="965" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1149.46" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (183,976 samples, 0.02%)</title><rect x="1148.9" y="789" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1151.86" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__function::__value_func&lt;NKikimr::NMiniKQL::IComputationNode*  (104,314,006 samples, 11.53%)</title><rect x="186.1" y="965" width="136.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="189.06" y="975.5" >std::__y1::__func..</text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::ArrayData&gt;::operator=[abi:v160005] (217,327 samples, 0.02%)</title><rect x="220.0" y="837" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="223.03" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestFromBlocks2Wrapper, false&gt;::FetchValues (6,810,986 samples, 0.75%)</title><rect x="156.4" y="1237" width="8.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="159.36" y="1247.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (1,091,197 samples, 0.12%)</title><rect x="733.8" y="933" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="736.84" y="943.5" ></text>
</g>
<g >
<title>arrow::TypeTraits&lt;arrow::UInt64Type&gt;::type_singleton (408,611 samples, 0.05%)</title><rect x="189.1" y="837" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="192.11" y="847.5" ></text>
</g>
<g >
<title>do_user_addr_fault (14,209,256 samples, 1.57%)</title><rect x="294.9" y="773" width="18.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="297.93" y="783.5" ></text>
</g>
<g >
<title>do_user_addr_fault (186,768 samples, 0.02%)</title><rect x="1149.8" y="853" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1152.78" y="863.5" ></text>
</g>
<g >
<title>~TBuiltinFunctionRegistry (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="789" width="2.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1163.25" y="799.5" ></text>
</g>
<g >
<title>arrow::AllocateResizableBuffer (14,783,301 samples, 1.63%)</title><rect x="196.5" y="789" width="19.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="199.48" y="799.5" ></text>
</g>
<g >
<title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::SystemAllocator&gt;::Allocate (936,936 samples, 0.10%)</title><rect x="191.3" y="709" width="1.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="194.35" y="719.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::IsInvalid (1,090,814 samples, 0.12%)</title><rect x="735.3" y="965" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="738.26" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryNumericFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (109,516 samples, 0.01%)</title><rect x="1142.1" y="965" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1145.14" y="975.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::mutable_data (1,089,347 samples, 0.12%)</title><rect x="272.2" y="805" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="275.23" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="933" width="1.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1149.71" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (109,516 samples, 0.01%)</title><rect x="1142.1" y="885" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1145.14" y="895.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Resize (936,936 samples, 0.10%)</title><rect x="191.3" y="741" width="1.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="194.35" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (183,976 samples, 0.02%)</title><rect x="1148.9" y="645" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1151.86" y="655.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (1,089,118 samples, 0.12%)</title><rect x="218.6" y="805" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="221.61" y="815.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (597,058 samples, 0.07%)</title><rect x="302.1" y="613" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="305.08" y="623.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (185,631 samples, 0.02%)</title><rect x="1144.7" y="949" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1147.75" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestBlockFlowWrapper, false&gt;::FetchValues (2,992,987 samples, 0.33%)</title><rect x="1021.7" y="949" width="3.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1024.66" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (310,894 samples, 0.03%)</title><rect x="215.4" y="661" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="218.36" y="671.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterSub (299,831 samples, 0.03%)</title><rect x="1150.5" y="981" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1153.50" y="991.5" ></text>
</g>
<g >
<title>NUnitTest::TTestFactory::Execute (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1189" width="982.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="186.51" y="1199.5" >NUnitTest::TTestFactory::Execute</text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::__destroy_vector::operator (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="437" width="4.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1158.98" y="447.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (186,127 samples, 0.02%)</title><rect x="1150.0" y="885" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1153.02" y="895.5" ></text>
</g>
<g >
<title>~TUnboxedValue (2,181,928 samples, 0.24%)</title><rect x="1163.1" y="1061" width="2.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1166.10" y="1071.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (6,542,824 samples, 0.72%)</title><rect x="1154.6" y="1045" width="8.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1157.56" y="1055.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::SystemAllocator::AllocateAligned (14,026,805 samples, 1.55%)</title><rect x="196.5" y="709" width="18.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="199.48" y="719.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::IComputationExternalNode*, NKikimr::NMiniKQL::TMKQLAllocator&lt;NKikimr::NMiniKQL::IComputationExternalNode*,  (8,726,114 samples, 0.96%)</title><rect x="1074.6" y="981" width="11.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1077.56" y="991.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (3,272,717 samples, 0.36%)</title><rect x="1085.9" y="965" width="4.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1088.94" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (378,327 samples, 0.04%)</title><rect x="1145.7" y="965" width="0.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1148.72" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__invoke[abi:v160005]&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute (753,125,243 samples, 83.26%)</title><rect x="183.5" y="1125" width="982.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="186.51" y="1135.5" >std::__y1::__invoke[abi:v160005]&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute</text>
</g>
<g >
<title>_raw_spin_trylock (305,162 samples, 0.03%)</title><rect x="204.1" y="421" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="207.11" y="431.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (311,928 samples, 0.03%)</title><rect x="303.4" y="661" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="306.43" y="671.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TSub&gt; (147,314 samples, 0.02%)</title><rect x="1150.5" y="917" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1153.50" y="927.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (847,173 samples, 0.09%)</title><rect x="201.9" y="437" width="1.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="204.91" y="447.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::ResizePoolBuffer&lt;std::__y1::unique_ptr&lt;arrow::ResizableBuffer, std::__y1::default_delete&lt;arrow::ResizableBuffer&gt; &gt;, std::__y1::unique_ptr&lt;arrow::PoolBuffer, std::__y1::default_delete&lt;arrow::PoolBuffer&gt; &gt; &gt; (14,472,407 samples, 1.60%)</title><rect x="196.5" y="773" width="18.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="199.48" y="783.5" ></text>
</g>
<g >
<title>shared_ptr (310,894 samples, 0.03%)</title><rect x="215.4" y="693" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="218.36" y="703.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::Release (3,226,502 samples, 0.36%)</title><rect x="1070.3" y="981" width="4.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1073.35" y="991.5" ></text>
</g>
<g >
<title>~THolder (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="1045" width="1.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1168.96" y="1055.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, void&gt; (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="549" width="5.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1157.56" y="559.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::FreelistPushSized&lt; (1,090,125 samples, 0.12%)</title><rect x="1157.4" y="53" width="1.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1160.41" y="63.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (1,090,628 samples, 0.12%)</title><rect x="654.0" y="869" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="657.01" y="879.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::BuildFreelist (109,516 samples, 0.01%)</title><rect x="1142.1" y="677" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1145.14" y="687.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (188,627 samples, 0.02%)</title><rect x="1145.5" y="885" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1148.48" y="895.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;NKikimr::NMiniKQL::IComputationPattern&gt; (4,362,353 samples, 0.48%)</title><rect x="1154.6" y="965" width="5.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1157.56" y="975.5" ></text>
</g>
<g >
<title>do_user_addr_fault (191,092 samples, 0.02%)</title><rect x="189.1" y="773" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="192.11" y="783.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMul, NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt;&gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="965" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1152.33" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd&gt; (292,761 samples, 0.03%)</title><rect x="1142.3" y="933" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1145.29" y="943.5" ></text>
</g>
<g >
<title>NHashPrivate::ComputeStringHash&lt;char&gt; (184,675 samples, 0.02%)</title><rect x="1145.0" y="837" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1147.99" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TNotEqualsOp&gt; (187,028 samples, 0.02%)</title><rect x="1149.5" y="917" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1152.53" y="927.5" ></text>
</g>
<g >
<title>NumericScalar (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="805" width="1.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1027.14" y="815.5" ></text>
</g>
<g >
<title>arrow::CPUDevice::memory_manager (310,894 samples, 0.03%)</title><rect x="215.4" y="757" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="218.36" y="767.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;unsigned long, void&gt;::Resize (15,382,747 samples, 1.70%)</title><rect x="196.5" y="821" width="20.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="199.48" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::SampleifyAllocation (217,170 samples, 0.02%)</title><rect x="196.5" y="629" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="199.48" y="639.5" ></text>
</g>
<g >
<title>~TBuiltinFunctionRegistry (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="773" width="2.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1163.25" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (188,160 samples, 0.02%)</title><rect x="1148.4" y="917" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1151.37" y="927.5" ></text>
</g>
<g >
<title>operator (753,109,828 samples, 83.26%)</title><rect x="183.5" y="1077" width="982.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="186.51" y="1087.5" >operator</text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__base_destruct_at_end[abi:v160005] (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="229" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1163.25" y="239.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (410,542 samples, 0.05%)</title><rect x="203.0" y="437" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="206.01" y="447.5" ></text>
</g>
<g >
<title>std::__y1::sort[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (1,277,530 samples, 0.14%)</title><rect x="1152.8" y="981" width="1.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1155.80" y="991.5" ></text>
</g>
<g >
<title>NSimd::Perfomancer::Algo&lt;NSimd::NAVX2::TSimd8&lt;signed char&gt; &gt;::PrepareMasks (6,393,939 samples, 0.71%)</title><rect x="1010.5" y="917" width="8.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1013.48" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterConvert (179,708 samples, 0.02%)</title><rect x="1142.9" y="981" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1145.87" y="991.5" ></text>
</g>
<g >
<title>__func (189,061 samples, 0.02%)</title><rect x="1145.7" y="789" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1148.72" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (1,091,152 samples, 0.12%)</title><rect x="1022.7" y="869" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1025.72" y="879.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Resize (14,472,407 samples, 1.60%)</title><rect x="196.5" y="757" width="18.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="199.48" y="767.5" ></text>
</g>
<g >
<title>MemoryManager (310,894 samples, 0.03%)</title><rect x="215.4" y="709" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="218.36" y="719.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (311,928 samples, 0.03%)</title><rect x="303.4" y="629" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="306.43" y="639.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (311,928 samples, 0.03%)</title><rect x="303.4" y="677" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="306.43" y="687.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::destroy[abi:v160005]&lt;arrow::compute::InputType, void&gt; (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="213" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1163.25" y="223.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (1,089,118 samples, 0.12%)</title><rect x="218.6" y="757" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="221.61" y="767.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::UnsafeAppend (32,010,017 samples, 3.54%)</title><rect x="273.7" y="821" width="41.7" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="276.65" y="831.5" >arr..</text>
</g>
<g >
<title>do_anonymous_page (150,430 samples, 0.02%)</title><rect x="1142.3" y="565" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1145.29" y="575.5" ></text>
</g>
<g >
<title>exc_page_fault (810,798 samples, 0.09%)</title><rect x="1021.7" y="645" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1024.66" y="655.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (217,449 samples, 0.02%)</title><rect x="220.3" y="677" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="223.32" y="687.5" ></text>
</g>
<g >
<title>shared_ptr (217,519 samples, 0.02%)</title><rect x="189.4" y="805" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="192.36" y="815.5" ></text>
</g>
<g >
<title>irqentry_enter (426,365 samples, 0.05%)</title><rect x="313.7" y="789" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="316.71" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (152,517 samples, 0.02%)</title><rect x="1150.7" y="853" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1153.69" y="863.5" ></text>
</g>
<g >
<title>mas_wr_node_store (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="773" width="1.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1168.96" y="783.5" ></text>
</g>
<g >
<title>TUnboxedValue (9,470,746 samples, 1.05%)</title><rect x="736.7" y="965" width="12.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="739.68" y="975.5" ></text>
</g>
<g >
<title>~TGlobalPagePool (1,088,686 samples, 0.12%)</title><rect x="1166.0" y="981" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1168.96" y="991.5" ></text>
</g>
<g >
<title>arrow::internal::MemoryPoolStats::UpdateAllocatedBytes (720,246 samples, 0.08%)</title><rect x="191.6" y="693" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="194.63" y="703.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="309" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1163.25" y="319.5" ></text>
</g>
<g >
<title>std::__y1::__hash_node_base&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, void*&gt;*&gt;::__hash[abi:v160005] (188,627 samples, 0.02%)</title><rect x="1145.5" y="853" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1148.48" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (7,744,713 samples, 0.86%)</title><rect x="198.8" y="549" width="10.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="201.80" y="559.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (70,631,854 samples, 7.81%)</title><rect x="563.3" y="901" width="92.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="566.29" y="911.5" >NYql::NUdf:..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (150,430 samples, 0.02%)</title><rect x="1142.3" y="693" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1145.29" y="703.5" ></text>
</g>
<g >
<title>std::__y1::__function::__value_func&lt;arrow::Result&lt;arrow::ValueDescr&gt;  (175,651 samples, 0.02%)</title><rect x="183.3" y="1237" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="186.29" y="1247.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1,088,928 samples, 0.12%)</title><rect x="1182.9" y="981" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1185.90" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterLess (1,462,877 samples, 0.16%)</title><rect x="1146.5" y="981" width="1.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1149.46" y="991.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::ResizableBuffer&gt;::operator=[abi:v160005] (496,106 samples, 0.05%)</title><rect x="218.0" y="757" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="220.97" y="767.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::DeallocateSlow (1,089,982 samples, 0.12%)</title><rect x="1167.4" y="981" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1170.38" y="991.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (189,266 samples, 0.02%)</title><rect x="1146.0" y="709" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1148.97" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterMod (172,783 samples, 0.02%)</title><rect x="1149.1" y="981" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1152.10" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TArrayNode::DoCalculate (17,933,464 samples, 1.98%)</title><rect x="41.6" y="1237" width="23.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="44.56" y="1247.5" >N..</text>
</g>
<g >
<title>shared_ptr (187,285 samples, 0.02%)</title><rect x="1146.5" y="805" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1149.46" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (1,089,118 samples, 0.12%)</title><rect x="218.6" y="789" width="1.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="221.61" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOp&gt; (188,934 samples, 0.02%)</title><rect x="1145.2" y="949" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1148.23" y="959.5" ></text>
</g>
<g >
<title>TBasicString&lt;std::__y1::char_traits&lt;char&gt; &gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="885" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1145.87" y="895.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (9,795,159 samples, 1.08%)</title><rect x="1177.2" y="1061" width="12.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1180.22" y="1071.5" ></text>
</g>
<g >
<title>~ArrayData (3,271,295 samples, 0.36%)</title><rect x="1156.0" y="469" width="4.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1158.98" y="479.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap2&lt;30, &amp;tcmalloc::tcmalloc_internal::MetaDataAlloc&gt;::get_existing (1,090,863 samples, 0.12%)</title><rect x="1158.8" y="53" width="1.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1161.83" y="63.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (1,091,197 samples, 0.12%)</title><rect x="733.8" y="949" width="1.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="736.84" y="959.5" ></text>
</g>
<g >
<title>~ArrayKernel (186,768 samples, 0.02%)</title><rect x="1149.8" y="901" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1152.78" y="911.5" ></text>
</g>
<g >
<title>std::__y1::operator&lt;=&gt;[abi:v160005]&lt;char, std::__y1::char_traits&lt;char&gt; &gt; (1,088,018 samples, 0.12%)</title><rect x="1152.8" y="901" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1155.80" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (23,257,185 samples, 2.57%)</title><rect x="10.0" y="1253" width="30.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >NK..</text>
</g>
<g >
<title>shared_ptr (189,266 samples, 0.02%)</title><rect x="1146.0" y="789" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1148.97" y="799.5" ></text>
</g>
<g >
<title>~TKernelFamilyBase (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="581" width="1.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1163.25" y="591.5" ></text>
</g>
<g >
<title>handle_pte_fault (109,516 samples, 0.01%)</title><rect x="1142.1" y="581" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1145.14" y="591.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::Next (1,090,557 samples, 0.12%)</title><rect x="181.9" y="1205" width="1.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="184.86" y="1215.5" ></text>
</g>
<g >
<title>~unique_ptr (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="645" width="2.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1163.25" y="655.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::TransferCacheManager::RemoveRange (109,516 samples, 0.01%)</title><rect x="1142.1" y="725" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1145.14" y="735.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Resize (15,382,747 samples, 1.70%)</title><rect x="196.5" y="805" width="20.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="199.48" y="815.5" ></text>
</g>
<g >
<title>__alloc_pages (3,672,884 samples, 0.41%)</title><rect x="203.8" y="453" width="4.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="206.83" y="463.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::emplace[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (157,984 samples, 0.02%)</title><rect x="1149.3" y="885" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1152.33" y="895.5" ></text>
</g>
<g >
<title>exc_page_fault (166,980 samples, 0.02%)</title><rect x="1144.5" y="773" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1147.53" y="783.5" ></text>
</g>
<g >
<title>zap_pte_range (7,618,921 samples, 0.84%)</title><rect x="1180.1" y="1045" width="9.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1183.06" y="1055.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;short&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (1,088,732 samples, 0.12%)</title><rect x="1146.7" y="917" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1149.71" y="927.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (2,181,396 samples, 0.24%)</title><rect x="1067.5" y="965" width="2.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1070.50" y="975.5" ></text>
</g>
<g >
<title>vma_alloc_folio (5,521,463 samples, 0.61%)</title><rect x="303.8" y="693" width="7.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="306.83" y="703.5" ></text>
</g>
<g >
<title>std::__y1::copy[abi:v160005]&lt;char const*, char*&gt; (179,708 samples, 0.02%)</title><rect x="1142.9" y="757" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1145.87" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (182,637 samples, 0.02%)</title><rect x="75.0" y="1237" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="78.02" y="1247.5" ></text>
</g>
<g >
<title>__compressed_pair_elem&lt;arrow::Status  (189,061 samples, 0.02%)</title><rect x="1145.7" y="741" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1148.72" y="751.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (1,091,037 samples, 0.12%)</title><rect x="1024.1" y="693" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1027.14" y="703.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (408,211 samples, 0.05%)</title><rect x="220.3" y="725" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="223.32" y="735.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;TThrRefBase&gt; (2,180,471 samples, 0.24%)</title><rect x="1160.3" y="965" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1163.25" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareStrings&lt;NKikimr::NMiniKQL::(anonymous namespace)::TCustomLess, NKikimr::NMiniKQL::TCompareArgsOpt, true&gt; (186,860 samples, 0.02%)</title><rect x="1148.1" y="965" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1151.13" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (445,602 samples, 0.05%)</title><rect x="214.8" y="677" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="217.78" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::AddCompareStringKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TStrContainsOp&gt; (1,089,180 samples, 0.12%)</title><rect x="1150.9" y="949" width="1.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1153.89" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (3,272,118 samples, 0.36%)</title><rect x="692.7" y="901" width="4.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="695.68" y="911.5" ></text>
</g>
<g >
<title>~pair (1,090,533 samples, 0.12%)</title><rect x="1160.3" y="469" width="1.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1163.25" y="479.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (1,089,118 samples, 0.12%)</title><rect x="218.6" y="773" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="221.61" y="783.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt;, TStringPtrOps&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::UnRef (186,860 samples, 0.02%)</title><rect x="1148.1" y="869" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1151.13" y="879.5" ></text>
</g>
<g >
<title>__rcu_read_lock (217,174 samples, 0.02%)</title><rect x="201.9" y="421" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="204.91" y="431.5" ></text>
</g>
<g >
<title>std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt;::__is_long[abi:v160005] (1,090,502 samples, 0.12%)</title><rect x="1143.1" y="789" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1146.11" y="799.5" ></text>
</g>
<g >
<title>lru_add_fn (1,031,623 samples, 0.11%)</title><rect x="301.5" y="629" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="304.52" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;signed char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (189,061 samples, 0.02%)</title><rect x="1145.7" y="933" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1148.72" y="943.5" ></text>
</g>
</g>
</svg>
