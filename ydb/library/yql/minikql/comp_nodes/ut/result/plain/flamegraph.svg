<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1366" onload="init(evt)" viewBox="0 0 1200 1366" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1366.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1349" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1349" > </text>
<g id="frames">
<g >
<title>ArrayKernel (180,095 samples, 0.02%)</title><rect x="1149.2" y="933" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1152.18" y="943.5" ></text>
</g>
<g >
<title>NUnitTest::TTestBase::Run (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1189" width="975.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="199.65" y="1199.5" >NUnitTest::TTestBase::Run</text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (184,083 samples, 0.02%)</title><rect x="1140.4" y="885" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1143.35" y="895.5" ></text>
</g>
<g >
<title>pair&lt;const std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt; &amp;, unsigned short &amp;, nullptr&gt; (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="901" width="1.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1146.58" y="911.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (186,718 samples, 0.02%)</title><rect x="1142.6" y="741" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1145.59" y="751.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__construct_node_hash&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="869" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1142.94" y="879.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::MakeUnique (2,720,005 samples, 0.28%)</title><rect x="204.9" y="789" width="3.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="207.91" y="799.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::emplace[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="917" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.94" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__deallocate_node (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="565" width="1.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1161.27" y="575.5" ></text>
</g>
<g >
<title>TBasicString (332,533 samples, 0.03%)</title><rect x="1148.1" y="901" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1151.10" y="911.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt;, TStringPtrOps&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::UnRef (187,595 samples, 0.02%)</title><rect x="1151.0" y="901" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1153.96" y="911.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__push_back_slow_path&lt;NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="917" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1147.91" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt; (1,269,944 samples, 0.13%)</title><rect x="1149.2" y="965" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1152.18" y="975.5" ></text>
</g>
<g >
<title>__handle_mm_fault (183,166 samples, 0.02%)</title><rect x="1140.1" y="725" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1143.13" y="735.5" ></text>
</g>
<g >
<title>~shared_ptr (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="389" width="5.4" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1155.91" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (180,095 samples, 0.02%)</title><rect x="1149.2" y="725" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1152.18" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper::DoCalculate (233,923,441 samples, 24.32%)</title><rect x="754.3" y="997" width="286.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="757.27" y="1007.5" >NKikimr::NMiniKQL::(anonymous namespac..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::TContainerCacheOnContext::NewArray (2,180,580 samples, 0.23%)</title><rect x="101.7" y="1269" width="2.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="104.66" y="1279.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TConvert&lt;unsigned long, unsigned int&gt;, NKikimr::NMiniKQL::TUnaryArgsOpt&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, false&gt;, NKikimr::NMiniKQL::TUnaryStub&gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="949" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1144.91" y="959.5" ></text>
</g>
<g >
<title>exc_page_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="901" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1145.59" y="911.5" ></text>
</g>
<g >
<title>find_vma (118,865 samples, 0.01%)</title><rect x="1139.6" y="773" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1142.62" y="783.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (1,090,716 samples, 0.11%)</title><rect x="726.5" y="965" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="729.50" y="975.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (181,378 samples, 0.02%)</title><rect x="1150.7" y="869" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1153.74" y="879.5" ></text>
</g>
<g >
<title>std::__y1::copy[abi:v160005]&lt;char const*, char*&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="789" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1142.76" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt; (1,089,849 samples, 0.11%)</title><rect x="1149.4" y="949" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1152.40" y="959.5" ></text>
</g>
<g >
<title>arrow::ArrayBuilder::Reserve (17,260,548 samples, 1.79%)</title><rect x="202.6" y="885" width="21.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="205.57" y="895.5" ></text>
</g>
<g >
<title>ArrayKernel (180,095 samples, 0.02%)</title><rect x="1149.2" y="917" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1152.18" y="927.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;unsigned short&gt; &gt;::deallocate[abi:v160005] (178,043 samples, 0.02%)</title><rect x="41.4" y="1205" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="44.45" y="1215.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,369,462 samples, 0.66%)</title><rect x="211.1" y="565" width="7.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="214.13" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="805" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1175.23" y="815.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::FinishWithLength (1,088,878 samples, 0.11%)</title><rect x="230.1" y="853" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="233.12" y="863.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1045" width="2.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1183.66" y="1055.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__rehash_unique[abi:v160005] (1,089,849 samples, 0.11%)</title><rect x="1149.4" y="869" width="1.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1152.40" y="879.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt;::construct[abi:v160005]&lt;NKikimr::NMiniKQL::TFunctionDescriptor, NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (118,865 samples, 0.01%)</title><rect x="1139.6" y="853" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1142.62" y="863.5" ></text>
</g>
<g >
<title>TStringPtrOps&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt; &gt;::UnRef (187,595 samples, 0.02%)</title><rect x="1151.0" y="885" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1153.96" y="895.5" ></text>
</g>
<g >
<title>__alloc_pages (728,583 samples, 0.08%)</title><rect x="307.2" y="693" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="310.21" y="703.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (332,533 samples, 0.03%)</title><rect x="1148.1" y="853" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1151.10" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryRealKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd&gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="965" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1142.94" y="975.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (118,865 samples, 0.01%)</title><rect x="1139.6" y="789" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1142.62" y="799.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (7,206,622 samples, 0.75%)</title><rect x="1163.3" y="1061" width="8.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1166.34" y="1071.5" ></text>
</g>
<g >
<title>TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt;::UnRef (187,595 samples, 0.02%)</title><rect x="1151.0" y="869" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1153.96" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="917" width="1.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1149.29" y="927.5" ></text>
</g>
<g >
<title>~_ConstructTransaction (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="853" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1146.58" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="517" width="5.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1155.91" y="527.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::__destroy_vector::operator (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="725" width="5.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1155.91" y="735.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="357" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1162.60" y="367.5" ></text>
</g>
<g >
<title>~CPUMemoryManager (626,762 samples, 0.07%)</title><rect x="232.4" y="725" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="235.43" y="735.5" ></text>
</g>
<g >
<title>TCMallocInternalNew (156,576 samples, 0.02%)</title><rect x="1139.9" y="741" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1142.94" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (166,267 samples, 0.02%)</title><rect x="1151.2" y="501" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1154.19" y="511.5" ></text>
</g>
<g >
<title>NPrivate::Destroyer&lt;NKikimr::(anonymous namespace)::TGlobalPools&lt;NKikimr::TSystemMmap&gt; &gt; (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1205" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1175.23" y="1215.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TComputationGraphBuildingVisitor::Visit (103,447,996 samples, 10.75%)</title><rect x="198.0" y="1029" width="126.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="200.99" y="1039.5" >NKikimr::NMiniK..</text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (181,905 samples, 0.02%)</title><rect x="1141.9" y="837" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1144.91" y="847.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (12,632,416 samples, 1.31%)</title><rect x="208.2" y="709" width="15.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="211.25" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (1,089,849 samples, 0.11%)</title><rect x="1149.4" y="933" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1152.40" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterUnaryFunction&lt;NKikimr::NMiniKQL::NDecimal::TCheckBounds&lt; (184,083 samples, 0.02%)</title><rect x="1140.4" y="949" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1143.35" y="959.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes, TAtomicCounter, TDelete&gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="885" width="5.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1155.91" y="895.5" ></text>
</g>
<g >
<title>TBasicString&lt;std::__y1::char_traits&lt;char&gt; &gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="917" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1142.76" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterMul (1,451,322 samples, 0.15%)</title><rect x="1149.2" y="1013" width="1.8" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1152.18" y="1023.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::New (166,267 samples, 0.02%)</title><rect x="1151.2" y="741" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1154.19" y="751.5" ></text>
</g>
<g >
<title>__free_one_page (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1029" width="2.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1183.66" y="1039.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (2,920,942 samples, 0.30%)</title><rect x="652.9" y="965" width="3.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="655.90" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateGreater&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDatetime64&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTimestamp&gt;, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDatetime64&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTimestamp&gt;, false, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (430,339 samples, 0.04%)</title><rect x="1143.0" y="965" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1146.05" y="975.5" ></text>
</g>
<g >
<title>THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;::DoDestroy (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1061" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1175.23" y="1071.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationExternalNode, false&gt;::GetDependencesCount (9,179,653 samples, 0.95%)</title><rect x="740.6" y="1013" width="11.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="743.58" y="1023.5" ></text>
</g>
<g >
<title>~TPlainKernel (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="437" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.27" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="949" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1148.70" y="959.5" ></text>
</g>
<g >
<title>folio_add_lru (812,198 samples, 0.08%)</title><rect x="223.7" y="533" width="1.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="226.74" y="543.5" ></text>
</g>
<g >
<title>unmap_region (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="853" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1175.23" y="863.5" ></text>
</g>
<g >
<title>do_anonymous_page (463,772 samples, 0.05%)</title><rect x="1144.9" y="693" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1147.91" y="703.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IFunctionRegistry, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IFunctionRegistry&gt; &gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="1061" width="2.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1161.27" y="1071.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt;::destroy[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="405" width="5.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1155.91" y="415.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (387,754 samples, 0.04%)</title><rect x="1147.6" y="933" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1150.62" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="773" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="203.95" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,666,813 samples, 0.17%)</title><rect x="223.7" y="629" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="226.74" y="639.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::UnsafeAppend (20,230,873 samples, 2.10%)</title><rect x="290.6" y="853" width="24.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="293.56" y="863.5" >a..</text>
</g>
<g >
<title>kmem_cache_free (773,246 samples, 0.08%)</title><rect x="206.2" y="453" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="209.24" y="463.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void*&gt; &gt;::allocate[abi:v160005] (156,576 samples, 0.02%)</title><rect x="1139.9" y="837" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1142.94" y="847.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt;::destroy[abi:v160005] (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1093" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1175.23" y="1103.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (812,198 samples, 0.08%)</title><rect x="223.7" y="549" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="226.74" y="559.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterDatetimeRescale (183,166 samples, 0.02%)</title><rect x="1140.1" y="997" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1143.13" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestBlockFlowWrapper::DoCalculateImpl (2,156,904 samples, 0.22%)</title><rect x="971.0" y="949" width="2.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="974.02" y="959.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::NullOomPolicy, tcmalloc::tcmalloc_internal::AlignAsPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (12,632,416 samples, 1.31%)</title><rect x="208.2" y="693" width="15.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="211.25" y="703.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TEquals&lt;double, int, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;int&gt;, false, true, true&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, true&gt; &gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="949" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1145.82" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (207,685 samples, 0.02%)</title><rect x="1146.0" y="933" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1149.03" y="943.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (387,754 samples, 0.04%)</title><rect x="1147.6" y="821" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1150.62" y="831.5" ></text>
</g>
<g >
<title>handle_mm_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="869" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1145.59" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (1,089,849 samples, 0.11%)</title><rect x="1149.4" y="885" width="1.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1152.40" y="895.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1141" width="2.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1183.66" y="1151.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (1,088,865 samples, 0.11%)</title><rect x="228.8" y="725" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="231.78" y="735.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (430,339 samples, 0.04%)</title><rect x="1143.0" y="933" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1146.05" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd&lt;double, unsigned char, double&gt;, NKikimr::NMiniKQL::TBinaryArgsOpt&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;double&gt;, true, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;true, false&gt; &gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="949" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1142.76" y="959.5" ></text>
</g>
<g >
<title>do_user_addr_fault (118,865 samples, 0.01%)</title><rect x="1139.6" y="805" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1142.62" y="815.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::ResizePoolBuffer&lt;std::__y1::unique_ptr&lt;arrow::ResizableBuffer, std::__y1::default_delete&lt;arrow::ResizableBuffer&gt; &gt;, std::__y1::unique_ptr&lt;arrow::PoolBuffer, std::__y1::default_delete&lt;arrow::PoolBuffer&gt; &gt; &gt; (12,632,416 samples, 1.31%)</title><rect x="208.2" y="805" width="15.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="211.25" y="815.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt; (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="853" width="5.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1155.91" y="863.5" ></text>
</g>
<g >
<title>TBasicString&lt;std::__y1::char_traits&lt;char&gt; &gt; (332,533 samples, 0.03%)</title><rect x="1148.1" y="917" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1151.10" y="927.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::IComputationNode const*, NKikimr::NMiniKQL::TMKQLAllocator&lt;NKikimr::NMiniKQL::IComputationNode const*,  (9,179,653 samples, 0.95%)</title><rect x="740.6" y="997" width="11.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="743.58" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::pair&lt;unsigned int, NKikimr::NMiniKQL::EValueRepresentation&gt;, std::__y1::allocator&lt;std::__y1::pair&lt;unsigned int, NKikimr::NMiniKQL::EValueRepresentation&gt; &gt; &gt;::begin[abi:v160005] (3,250,370 samples, 0.34%)</title><rect x="487.0" y="981" width="4.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="490.00" y="991.5" ></text>
</g>
<g >
<title>__split_buffer (181,905 samples, 0.02%)</title><rect x="1141.9" y="885" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1144.91" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__dispatch_copy_or_move[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::__copy_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__copy_trivial, char const*, char const*, char*&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="757" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1142.76" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="933" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1175.23" y="943.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (180,210 samples, 0.02%)</title><rect x="1149.0" y="981" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1151.96" y="991.5" ></text>
</g>
<g >
<title>HashLen0to16 (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="837" width="1.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1149.29" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TArrayNode::DoCalculate (11,316,623 samples, 1.18%)</title><rect x="41.7" y="1269" width="13.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="44.67" y="1279.5" ></text>
</g>
<g >
<title>shared_ptr&lt;arrow::ResizableBuffer, void&gt; (1,088,865 samples, 0.11%)</title><rect x="228.8" y="789" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="231.78" y="799.5" ></text>
</g>
<g >
<title>std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt;::operator (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="453" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1161.27" y="463.5" ></text>
</g>
<g >
<title>charge_memcg (1,313,056 samples, 0.14%)</title><rect x="304.8" y="709" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="307.76" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (789,244 samples, 0.08%)</title><rect x="201.6" y="773" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="204.60" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionUnOpt&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TConvert, NKikimr::NMiniKQL::TUnaryArgsOpt&gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="965" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1144.91" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (634,990 samples, 0.07%)</title><rect x="227.1" y="789" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="230.12" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock (180,095 samples, 0.02%)</title><rect x="1149.2" y="597" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1152.18" y="607.5" ></text>
</g>
<g >
<title>[unknown] (50,159,950 samples, 5.21%)</title><rect x="135.1" y="1285" width="61.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="138.12" y="1295.5" >[unkno..</text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="821" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1144.91" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::internal_transfer_cache::RingBufferTransferCache&lt;tcmalloc::tcmalloc_internal::CentralFreeList, tcmalloc::tcmalloc_internal::TransferCacheManager&gt;::RemoveRange (1,088,589 samples, 0.11%)</title><rect x="225.8" y="693" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="228.79" y="703.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::FreeSmall&lt; (1,090,199 samples, 0.11%)</title><rect x="1152.9" y="293" width="1.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1155.91" y="303.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::LockAndAlloc (166,267 samples, 0.02%)</title><rect x="1151.2" y="725" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1154.19" y="735.5" ></text>
</g>
<g >
<title>exc_page_fault (773,246 samples, 0.08%)</title><rect x="206.2" y="661" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="209.24" y="671.5" ></text>
</g>
<g >
<title>_start (796,423,940 samples, 82.79%)</title><rect x="196.6" y="1285" width="977.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="199.65" y="1295.5" >_start</text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (9,163,235 samples, 0.95%)</title><rect x="1160.9" y="1077" width="11.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1163.94" y="1087.5" ></text>
</g>
<g >
<title>TStdString&lt;const char *&amp;, unsigned long &amp;&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="869" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1142.76" y="879.5" ></text>
</g>
<g >
<title>get_page_from_freelist (728,583 samples, 0.08%)</title><rect x="307.2" y="677" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="310.21" y="687.5" ></text>
</g>
<g >
<title>std::__y1::make_shared[abi:v160005]&lt;arrow::ArrayData, std::__y1::shared_ptr&lt;arrow::DataType&gt;, long&amp;, std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;, long&amp;, long&amp;, void&gt; (2,755,402 samples, 0.29%)</title><rect x="223.7" y="853" width="3.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="226.74" y="863.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="597" width="5.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1155.91" y="607.5" ></text>
</g>
<g >
<title>do_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="869" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1148.70" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareOpt&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (332,533 samples, 0.03%)</title><rect x="1148.1" y="965" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1151.10" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (3,269,496 samples, 0.34%)</title><rect x="441.8" y="981" width="4.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="444.78" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper::GetState (12,640,980 samples, 1.31%)</title><rect x="767.0" y="981" width="15.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="769.96" y="991.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (185,922 samples, 0.02%)</title><rect x="1142.8" y="757" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1145.82" y="767.5" ></text>
</g>
<g >
<title>arrow::Datum::kind (1,090,737 samples, 0.11%)</title><rect x="953.2" y="949" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="956.18" y="959.5" ></text>
</g>
<g >
<title>~unique_ptr (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="677" width="2.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1161.27" y="687.5" ></text>
</g>
<g >
<title>std::__y1::__destroy_at[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, 0&gt; (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="517" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1162.60" y="527.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="693" width="5.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1155.91" y="703.5" ></text>
</g>
<g >
<title>NUnitTest::TTestFactory::Execute (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1221" width="975.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="199.65" y="1231.5" >NUnitTest::TTestFactory::Execute</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::FreeSmall&lt; (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="229" width="2.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1157.25" y="239.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TCustomLess&lt; (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="965" width="1.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1149.29" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (14,138,312 samples, 1.47%)</title><rect x="1041.2" y="997" width="17.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1044.21" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::MakeComputationPatternImpl (103,447,996 samples, 10.75%)</title><rect x="198.0" y="1045" width="126.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="200.99" y="1055.5" >NKikimr::NMiniK..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterUnaryFunctionForAllPrecisions&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalInc, NKikimr::NMiniKQL::TUnaryArgsOpt&gt; (180,687 samples, 0.02%)</title><rect x="1145.5" y="997" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1148.48" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="533" width="5.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1155.91" y="543.5" ></text>
</g>
<g >
<title>arrow::internal::MemoryPoolStats::UpdateAllocatedBytes (1,091,153 samples, 0.11%)</title><rect x="1156.9" y="293" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1159.93" y="303.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TContainerCacheOnContext::NewArray (88,396,752 samples, 9.19%)</title><rect x="548.1" y="981" width="108.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="551.05" y="991.5" >NKikimr::NMin..</text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (8,041,571 samples, 0.84%)</title><rect x="707.0" y="965" width="9.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="709.96" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryRealFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="981" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1142.76" y="991.5" ></text>
</g>
<g >
<title>~vector (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1173" width="1.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1175.23" y="1183.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::Ref (897,252 samples, 0.09%)</title><rect x="739.5" y="965" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="742.48" y="975.5" ></text>
</g>
<g >
<title>~PoolBuffer (1,428,550 samples, 0.15%)</title><rect x="231.5" y="821" width="1.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="234.45" y="831.5" ></text>
</g>
<g >
<title>~TKernelFamilyBase (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="629" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1162.60" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterIncrement (180,687 samples, 0.02%)</title><rect x="1145.5" y="1013" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1148.48" y="1023.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::SystemAllocator::AllocateAligned (12,632,416 samples, 1.31%)</title><rect x="208.2" y="741" width="15.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="211.25" y="751.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (187,595 samples, 0.02%)</title><rect x="1151.0" y="917" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1153.96" y="927.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes, TAtomicCounter, TDelete&gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="901" width="5.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1155.91" y="911.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;::reset[abi:v160005] (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="469" width="1.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1161.27" y="479.5" ></text>
</g>
<g >
<title>std::__y1::__introsort&lt;std::__y1::_ClassicAlgPolicy, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (490,146 samples, 0.05%)</title><rect x="1152.2" y="949" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1155.22" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (626,762 samples, 0.07%)</title><rect x="232.4" y="677" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="235.43" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalSub&lt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="949" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1154.19" y="959.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::__shared_ptr_emplace&lt;arrow::ArrayData, std::__y1::allocator&lt;arrow::ArrayData&gt; &gt; &gt;::allocate[abi:v160005] (2,755,402 samples, 0.29%)</title><rect x="223.7" y="789" width="3.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="226.74" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryIntegralFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod, NKikimr::NMiniKQL::TBinaryArgsOptWithNullableResult&gt; (183,711 samples, 0.02%)</title><rect x="1148.7" y="997" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1151.73" y="1007.5" ></text>
</g>
<g >
<title>[anon] (29,459,072 samples, 3.06%)</title><rect x="99.0" y="1285" width="36.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="101.98" y="1295.5" >[an..</text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void*&gt; &gt; &gt;::allocate[abi:v160005] (156,576 samples, 0.02%)</title><rect x="1139.9" y="853" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1142.94" y="863.5" ></text>
</g>
<g >
<title>cache_from_obj (773,246 samples, 0.08%)</title><rect x="206.2" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="209.24" y="447.5" ></text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="885" width="2.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.27" y="895.5" ></text>
</g>
<g >
<title>do_anonymous_page (166,267 samples, 0.02%)</title><rect x="1151.2" y="453" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1154.19" y="463.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeAllocator::AllocateRange (166,267 samples, 0.02%)</title><rect x="1151.2" y="629" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1154.19" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (184,083 samples, 0.02%)</title><rect x="1140.4" y="917" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1143.35" y="927.5" ></text>
</g>
<g >
<title>arrow::Buffer::mutable_data (1,088,160 samples, 0.11%)</title><rect x="202.6" y="757" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="205.57" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1253" width="9.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1183.66" y="1263.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (634,990 samples, 0.07%)</title><rect x="227.1" y="773" width="0.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="230.12" y="783.5" ></text>
</g>
<g >
<title>std::__y1::__unwrap_and_dispatch[abi:v160005]&lt;std::__y1::__overload&lt;std::__y1::__move_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__move_trivial&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, 0&gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="821" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1143.13" y="831.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="981" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1150.62" y="991.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__shared_ptr_emplace&lt;arrow::ArrayData, std::__y1::allocator&lt;arrow::ArrayData&gt; &gt; &gt; &gt;::allocate[abi:v160005] (2,755,402 samples, 0.29%)</title><rect x="223.7" y="805" width="3.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="226.74" y="815.5" ></text>
</g>
<g >
<title>TCMallocInternalPosixMemalign (12,632,416 samples, 1.31%)</title><rect x="208.2" y="725" width="15.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="211.25" y="735.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (2,755,402 samples, 0.29%)</title><rect x="223.7" y="741" width="3.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="226.74" y="751.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::FreeSmall&lt; (187,595 samples, 0.02%)</title><rect x="1151.0" y="805" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1153.96" y="815.5" ></text>
</g>
<g >
<title>release_pages (2,175,910 samples, 0.23%)</title><rect x="1187.3" y="1013" width="2.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1190.33" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, void&gt; (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="581" width="5.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1155.91" y="591.5" ></text>
</g>
<g >
<title>__vm_munmap (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="901" width="1.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1175.23" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (183,711 samples, 0.02%)</title><rect x="1148.7" y="901" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1151.73" y="911.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (187,595 samples, 0.02%)</title><rect x="1151.0" y="821" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1153.96" y="831.5" ></text>
</g>
<g >
<title>std::__y1::__sort&lt;NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (490,146 samples, 0.05%)</title><rect x="1152.2" y="981" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1155.22" y="991.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="837" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="203.95" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TContainerCacheOnContext::NewArray (1,761,302 samples, 0.18%)</title><rect x="136.5" y="1269" width="2.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="139.46" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::__invoke_void_return_wrapper&lt;NKikimr::NMiniKQL::IComputationNode*, false&gt;::__call&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (103,447,996 samples, 10.75%)</title><rect x="198.0" y="949" width="126.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="200.99" y="959.5" >std::__y1::__in..</text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__shared_ptr_emplace&lt;arrow::compute::KernelSignature, std::__y1::allocator&lt;arrow::compute::KernelSignature&gt; &gt; &gt; &gt;::allocate[abi:v160005] (180,095 samples, 0.02%)</title><rect x="1149.2" y="821" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1152.18" y="831.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::__destroy_vector::operator (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="629" width="5.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1155.91" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLess&lt;int, float, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;int&gt;, NYql::NUdf::TDataType&lt;float&gt;, true, false, true&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;true, false&gt; &gt; (207,685 samples, 0.02%)</title><rect x="1146.0" y="949" width="0.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1149.03" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::TRefCountedPtr&lt;NYql::NUdf::IBoxedValue, NYql::NUdf::TDefaultRefCountedPtrOps&lt;NYql::NUdf::IBoxedValue&gt; &gt;::Ref (5,212,843 samples, 0.54%)</title><rect x="821.9" y="917" width="6.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="824.94" y="927.5" ></text>
</g>
<g >
<title>unmap_vmas (5,441,138 samples, 0.57%)</title><rect x="1183.3" y="1141" width="6.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1186.33" y="1151.5" ></text>
</g>
<g >
<title>do_group_exit (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1237" width="9.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1183.66" y="1247.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_sub[abi:v160005]&lt;long&gt; (626,762 samples, 0.07%)</title><rect x="232.4" y="613" width="0.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="235.43" y="623.5" ></text>
</g>
<g >
<title>std::__y1::make_shared[abi:v160005]&lt;arrow::compute::KernelSignature, std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;, arrow::compute::OutputType, bool&amp;, void&gt; (180,095 samples, 0.02%)</title><rect x="1149.2" y="869" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1152.18" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationExternalNode, false&gt;::ValueRef (5,422,795 samples, 0.56%)</title><rect x="665.4" y="965" width="6.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="668.43" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__uninitialized_allocator_move_if_noexcept[abi:v160005]&lt;std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, NKikimr::NMiniKQL::TFunctionDescriptor, void&gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="885" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1147.91" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="357" width="5.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1155.91" y="367.5" ></text>
</g>
<g >
<title>do_exit (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1221" width="9.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1183.66" y="1231.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (180,687 samples, 0.02%)</title><rect x="1145.5" y="917" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1148.48" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePolyOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateGreaterOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="981" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1147.91" y="991.5" ></text>
</g>
<g >
<title>ArrayKernel (186,718 samples, 0.02%)</title><rect x="1142.6" y="933" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1145.59" y="943.5" ></text>
</g>
<g >
<title>operator (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1141" width="975.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="199.65" y="1151.5" >operator</text>
</g>
<g >
<title>~pair (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="501" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1162.60" y="511.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1,087,925 samples, 0.11%)</title><rect x="1187.3" y="981" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.33" y="991.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__push_back_slow_path&lt;NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (118,865 samples, 0.01%)</title><rect x="1139.6" y="885" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1142.62" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernelPoly&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTimestamp&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateEqualsOp&gt; (187,068 samples, 0.02%)</title><rect x="1142.4" y="981" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1145.36" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_Push (187,595 samples, 0.02%)</title><rect x="1151.0" y="757" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1153.96" y="767.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;unsigned int, false&gt;::exchange[abi:v160005] (1,088,589 samples, 0.11%)</title><rect x="225.8" y="645" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="228.79" y="655.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;unsigned short&gt;::deallocate[abi:v160005] (178,043 samples, 0.02%)</title><rect x="41.4" y="1189" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="44.45" y="1199.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="949" width="5.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1155.91" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_sub[abi:v160005]&lt;long&gt; (1,088,778 samples, 0.11%)</title><rect x="204.9" y="629" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="207.91" y="639.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (2,755,402 samples, 0.29%)</title><rect x="223.7" y="757" width="3.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="226.74" y="767.5" ></text>
</g>
<g >
<title>TPlainKernel (182,490 samples, 0.02%)</title><rect x="1142.1" y="917" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1145.14" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationNode, false&gt;::ValueRef (2,182,298 samples, 0.23%)</title><rect x="719.0" y="997" width="2.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="722.02" y="1007.5" ></text>
</g>
<g >
<title>~KernelSignature (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="325" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1161.27" y="335.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterMax (185,109 samples, 0.02%)</title><rect x="1148.5" y="1013" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1151.50" y="1023.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePrimitive&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (332,533 samples, 0.03%)</title><rect x="1148.1" y="997" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1151.10" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryUnsignedFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod, NKikimr::NMiniKQL::TBinaryArgsOptWithNullableResult&gt; (183,711 samples, 0.02%)</title><rect x="1148.7" y="981" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.73" y="991.5" ></text>
</g>
<g >
<title>SpinLockHolder (1,091,087 samples, 0.11%)</title><rect x="1154.3" y="117" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1157.25" y="127.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TAdd&gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="949" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1142.94" y="959.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;unsigned long, void&gt;::UnsafeAppend (20,230,873 samples, 2.10%)</title><rect x="290.6" y="869" width="24.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="293.56" y="879.5" >a..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::TDirectArrayHolderInplace::GetPtr (1,091,501 samples, 0.11%)</title><rect x="564.7" y="965" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="567.68" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (2,156,904 samples, 0.22%)</title><rect x="971.0" y="917" width="2.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="974.02" y="927.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::IsYield (5,205,056 samples, 0.54%)</title><rect x="1133.2" y="1045" width="6.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1136.23" y="1055.5" ></text>
</g>
<g >
<title>exc_page_fault (9,756,504 samples, 1.01%)</title><rect x="210.2" y="613" width="12.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="213.21" y="623.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (118,865 samples, 0.01%)</title><rect x="1139.6" y="917" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1142.62" y="927.5" ></text>
</g>
<g >
<title>lru_add_fn (812,198 samples, 0.08%)</title><rect x="223.7" y="501" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="226.74" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (463,772 samples, 0.05%)</title><rect x="1144.9" y="613" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1147.91" y="623.5" ></text>
</g>
<g >
<title>std::__y1::__invoke[abi:v160005]&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (103,447,996 samples, 10.75%)</title><rect x="198.0" y="933" width="126.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="200.99" y="943.5" >std::__y1::__in..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::WrapTestBlockFlow (103,447,996 samples, 10.75%)</title><rect x="198.0" y="901" width="126.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="200.99" y="911.5" >NKikimr::NMiniK..</text>
</g>
<g >
<title>do_read_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="805" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.59" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual&lt;unsigned char, double, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;double&gt;, false, true, true&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, true&gt; &gt; (332,533 samples, 0.03%)</title><rect x="1148.1" y="949" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1151.10" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_lock (829,779 samples, 0.09%)</title><rect x="211.9" y="533" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="214.92" y="543.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (5,004,132 samples, 0.52%)</title><rect x="721.7" y="997" width="6.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="724.70" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::MemoryManager&gt;::__enable_weak_this[abi:v160005]&lt;arrow::MemoryManager, arrow::CPUMemoryManager, void&gt; (1,088,778 samples, 0.11%)</title><rect x="204.9" y="725" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="207.91" y="735.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::IsInvalid (5,205,056 samples, 0.54%)</title><rect x="1133.2" y="1029" width="6.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1136.23" y="1039.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (2,156,904 samples, 0.22%)</title><rect x="971.0" y="869" width="2.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="974.02" y="879.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (1,756,906 samples, 0.18%)</title><rect x="1131.1" y="1029" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1134.08" y="1039.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (430,339 samples, 0.04%)</title><rect x="1143.0" y="949" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1146.05" y="959.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::Buffer&gt;::operator bool[abi:v160005] (12,332,410 samples, 1.28%)</title><rect x="936.7" y="917" width="15.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="939.72" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="341" width="1.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1162.60" y="351.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterConvert&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt; &gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="981" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1144.91" y="991.5" ></text>
</g>
<g >
<title>__folio_alloc (728,583 samples, 0.08%)</title><rect x="307.2" y="709" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="310.21" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (1,088,778 samples, 0.11%)</title><rect x="204.9" y="677" width="1.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="207.91" y="687.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="901" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1150.62" y="911.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10,824,159 samples, 1.13%)</title><rect x="297.6" y="837" width="13.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="300.57" y="847.5" ></text>
</g>
<g >
<title>std::__y1::char_traits&lt;char&gt;::copy (139,866 samples, 0.01%)</title><rect x="1139.8" y="821" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1142.76" y="831.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterNotEquals (187,595 samples, 0.02%)</title><rect x="1151.0" y="1013" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1153.96" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (2,182,298 samples, 0.23%)</title><rect x="719.0" y="981" width="2.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="722.02" y="991.5" ></text>
</g>
<g >
<title>NKikimr::TSystemMmap::Munmap (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="981" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1175.23" y="991.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (3,903,666 samples, 0.41%)</title><rect x="712.0" y="949" width="4.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="715.04" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (1,090,850 samples, 0.11%)</title><rect x="767.0" y="965" width="1.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="769.96" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDatetimeScaleDown&lt;unsigned int, unsigned short, false&gt;, NKikimr::NMiniKQL::TUnaryArgsOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDatetime&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, false&gt;, NKikimr::NMiniKQL::TUnaryStub&gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="965" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1143.13" y="975.5" ></text>
</g>
<g >
<title>arrow::ArrayBuilder::Resize (4,628,132 samples, 0.48%)</title><rect x="202.6" y="853" width="5.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="205.57" y="863.5" ></text>
</g>
<g >
<title>TCMallocInternalNew (332,533 samples, 0.03%)</title><rect x="1148.1" y="869" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1151.10" y="879.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__swap_out_circular_buffer (463,772 samples, 0.05%)</title><rect x="1144.9" y="901" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1147.91" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;int&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TSub, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (162,041 samples, 0.02%)</title><rect x="1151.4" y="949" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1154.39" y="959.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10,034,506 samples, 1.04%)</title><rect x="298.5" y="805" width="12.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="301.54" y="815.5" ></text>
</g>
<g >
<title>operator (29,716,472 samples, 3.09%)</title><rect x="160.0" y="1269" width="36.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="162.97" y="1279.5" >ope..</text>
</g>
<g >
<title>pmd_val (752,200 samples, 0.08%)</title><rect x="219.8" y="565" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="222.77" y="575.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt; &gt; (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1029" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1175.23" y="1039.5" ></text>
</g>
<g >
<title>TUnboxedValue (24,264,536 samples, 2.52%)</title><rect x="672.1" y="965" width="29.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="675.09" y="975.5" >TU..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterDiv (182,490 samples, 0.02%)</title><rect x="1142.1" y="1013" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1145.14" y="1023.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationNode&gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="789" width="5.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1155.91" y="799.5" ></text>
</g>
<g >
<title>TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;::Construct&lt;char const*&amp;, unsigned long&amp;&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="885" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1142.76" y="895.5" ></text>
</g>
<g >
<title>handle_pte_fault (812,198 samples, 0.08%)</title><rect x="223.7" y="597" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="226.74" y="607.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (139,866 samples, 0.01%)</title><rect x="1139.8" y="693" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1142.76" y="703.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (186,718 samples, 0.02%)</title><rect x="1142.6" y="997" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1145.59" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper::DoCalculate (573,544,507 samples, 59.62%)</title><rect x="377.6" y="1029" width="703.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="380.56" y="1039.5" >NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper::DoCalculate</text>
</g>
<g >
<title>~TIntrusivePtr (1,089,224 samples, 0.11%)</title><rect x="1140.6" y="933" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1143.58" y="943.5" ></text>
</g>
<g >
<title>arrow::NumericBuilder&lt;arrow::UInt64Type&gt;::Resize (17,260,548 samples, 1.79%)</title><rect x="202.6" y="869" width="21.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="205.57" y="879.5" ></text>
</g>
<g >
<title>~__value_func (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="277" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1162.60" y="287.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__do_rehash&lt;true&gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="837" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1150.62" y="847.5" ></text>
</g>
<g >
<title>TStringBase&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, char, std::__y1::char_traits&lt;char&gt; &gt;::equal (185,922 samples, 0.02%)</title><rect x="1142.8" y="837" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1145.82" y="847.5" ></text>
</g>
<g >
<title>sync_regs (1,277,363 samples, 0.13%)</title><rect x="222.2" y="629" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="225.17" y="639.5" ></text>
</g>
<g >
<title>NYql::NUdf::TDefaultRefCountedPtrOps&lt;NYql::NUdf::IBoxedValue&gt;::Ref (897,262 samples, 0.09%)</title><rect x="780.0" y="917" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="783.02" y="927.5" ></text>
</g>
<g >
<title>do_user_addr_fault (166,267 samples, 0.02%)</title><rect x="1151.2" y="517" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1154.19" y="527.5" ></text>
</g>
<g >
<title>std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;::operator (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="901" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1149.29" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryNumericFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (258,731 samples, 0.03%)</title><rect x="1139.6" y="997" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1142.62" y="1007.5" ></text>
</g>
<g >
<title>do_set_pte (186,718 samples, 0.02%)</title><rect x="1142.6" y="773" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1145.59" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (1,091,079 samples, 0.11%)</title><rect x="97.6" y="1269" width="1.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="100.65" y="1279.5" ></text>
</g>
<g >
<title>[[stack]] (46,905,122 samples, 4.88%)</title><rect x="41.4" y="1285" width="57.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="44.45" y="1295.5" >[[stac..</text>
</g>
<g >
<title>asm_exc_page_fault (9,756,504 samples, 1.01%)</title><rect x="210.2" y="629" width="12.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="213.21" y="639.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="933" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1149.29" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="997" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1150.62" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (634,990 samples, 0.07%)</title><rect x="227.1" y="837" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="230.12" y="847.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (156,576 samples, 0.02%)</title><rect x="1139.9" y="981" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1142.94" y="991.5" ></text>
</g>
<g >
<title>std::__y1::destroy_at[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, 0&gt; (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="533" width="1.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1161.27" y="543.5" ></text>
</g>
<g >
<title>arrow::AllocateResizableBuffer (4,628,132 samples, 0.48%)</title><rect x="202.6" y="805" width="5.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="205.57" y="815.5" ></text>
</g>
<g >
<title>arrow::Buffer::data (35,712,363 samples, 3.71%)</title><rect x="892.9" y="917" width="43.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="895.91" y="927.5" >arro..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="965" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1150.62" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="917" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1148.70" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (182,490 samples, 0.02%)</title><rect x="1142.1" y="789" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1145.14" y="799.5" ></text>
</g>
<g >
<title>unmap_page_range (5,441,138 samples, 0.57%)</title><rect x="1183.3" y="1109" width="6.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1186.33" y="1119.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (166,267 samples, 0.02%)</title><rect x="1151.2" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1154.19" y="943.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (166,267 samples, 0.02%)</title><rect x="1151.2" y="837" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1154.19" y="847.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (182,490 samples, 0.02%)</title><rect x="1142.1" y="821" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1145.14" y="831.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::GetElement (37,718,643 samples, 3.92%)</title><rect x="324.9" y="1093" width="46.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="327.88" y="1103.5" >NYql..</text>
</g>
<g >
<title>std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;::operator (185,922 samples, 0.02%)</title><rect x="1142.8" y="885" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1145.82" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (2,156,904 samples, 0.22%)</title><rect x="971.0" y="853" width="2.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="974.02" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1269" width="9.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1183.66" y="1279.5" ></text>
</g>
<g >
<title>NYql::NUdf::TFixedSizeBlockReader&lt;unsigned long, false&gt;::GetItem (1,091,307 samples, 0.11%)</title><rect x="133.8" y="1269" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="136.78" y="1279.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterIntegralCasts&lt;NYql::NUdf::TDataType&lt;unsigned int&gt; &gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="997" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1144.91" y="1007.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;TThrRefBase&gt; (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="981" width="2.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1161.27" y="991.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (8,205,706 samples, 0.85%)</title><rect x="730.5" y="981" width="10.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="733.52" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TContainerCacheOnContext::NewArray (3,223,396 samples, 0.34%)</title><rect x="55.5" y="1269" width="4.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="58.55" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::__unwrap_and_dispatch[abi:v160005]&lt;std::__y1::__overload&lt;std::__y1::__move_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__move_trivial&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, 0&gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="821" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1147.91" y="831.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (184,083 samples, 0.02%)</title><rect x="1140.4" y="901" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1143.35" y="911.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="917" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1145.59" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (1,088,778 samples, 0.11%)</title><rect x="204.9" y="693" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="207.91" y="703.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterGreater (430,339 samples, 0.04%)</title><rect x="1143.0" y="1013" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1146.05" y="1023.5" ></text>
</g>
<g >
<title>~OutputType (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="309" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1162.60" y="319.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (430,339 samples, 0.04%)</title><rect x="1143.0" y="917" width="0.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1146.05" y="927.5" ></text>
</g>
<g >
<title>std::__y1::allocate_shared[abi:v160005]&lt;arrow::compute::KernelSignature, std::__y1::allocator&lt;arrow::compute::KernelSignature&gt;, std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;, arrow::compute::OutputType, bool&amp;, void&gt; (180,095 samples, 0.02%)</title><rect x="1149.2" y="853" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1152.18" y="863.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SizeMap::class_to_size (181,905 samples, 0.02%)</title><rect x="1141.9" y="757" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1144.91" y="767.5" ></text>
</g>
<g >
<title>sync_regs (3,689,119 samples, 0.38%)</title><rect x="310.9" y="837" width="4.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="313.85" y="847.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (1,090,199 samples, 0.11%)</title><rect x="1152.9" y="325" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1155.91" y="335.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IBuiltinFunctionRegistry&gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="901" width="2.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1161.27" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterDefaultOperations (9,760,093 samples, 1.01%)</title><rect x="1139.6" y="1029" width="12.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1142.62" y="1039.5" ></text>
</g>
<g >
<title>NumericBuilder&lt;arrow::UInt64Type&gt; (1,320,916 samples, 0.14%)</title><rect x="200.9" y="885" width="1.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="203.95" y="895.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="869" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1175.23" y="879.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (2,755,402 samples, 0.29%)</title><rect x="223.7" y="725" width="3.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="226.74" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (587,392,767 samples, 61.06%)</title><rect x="377.6" y="1045" width="720.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="380.56" y="1055.5" >NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowM..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="949" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1175.23" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::TFixedSizeBlockReader&lt;unsigned long, false&gt;::GetItem (101,778,372 samples, 10.58%)</title><rect x="828.3" y="965" width="124.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="831.34" y="975.5" >NYql::NUdf::TFi..</text>
</g>
<g >
<title>__alloc_pages (463,772 samples, 0.05%)</title><rect x="1144.9" y="645" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1147.91" y="655.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_delete[abi:v160005]&lt;void*&gt; (178,043 samples, 0.02%)</title><rect x="41.4" y="1141" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="44.45" y="1151.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::ArrayData&gt;::operator*[abi:v160005] (1,091,576 samples, 0.11%)</title><rect x="954.5" y="965" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="957.52" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__allocate_at_least[abi:v160005]&lt;std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="869" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1144.91" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryIntegralFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (162,041 samples, 0.02%)</title><rect x="1151.4" y="981" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1154.39" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd&lt;unsigned int, unsigned char, unsigned int&gt;, NKikimr::NMiniKQL::TBinaryArgsOpt&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (118,865 samples, 0.01%)</title><rect x="1139.6" y="933" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1142.62" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (166,267 samples, 0.02%)</title><rect x="1151.2" y="485" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1154.19" y="495.5" ></text>
</g>
<g >
<title>~unordered_map (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="597" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1162.60" y="607.5" ></text>
</g>
<g >
<title>rcu_core (773,246 samples, 0.08%)</title><rect x="206.2" y="501" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="209.24" y="511.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (430,339 samples, 0.04%)</title><rect x="1143.0" y="901" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1146.05" y="911.5" ></text>
</g>
<g >
<title>std::__y1::copy_n[abi:v160005]&lt;char const*, unsigned long, char*&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="805" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1142.76" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralDiv&gt; (182,490 samples, 0.02%)</title><rect x="1142.1" y="965" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1145.14" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterBinaryFunctionForAllPrecisions&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalSub, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="997" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1154.19" y="1007.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::PtrToIdxSized&lt; (1,090,849 samples, 0.11%)</title><rect x="1155.6" y="69" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1158.59" y="79.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (789,244 samples, 0.08%)</title><rect x="201.6" y="757" width="1.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="204.60" y="767.5" ></text>
</g>
<g >
<title>std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;::swap[abi:v160005] (490,146 samples, 0.05%)</title><rect x="1152.2" y="885" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1155.22" y="895.5" ></text>
</g>
<g >
<title>NYql::NUdf::TFixedSizeBlockReader&lt;unsigned long, false&gt;::GetItem (2,908,967 samples, 0.30%)</title><rect x="884.3" y="933" width="3.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="887.27" y="943.5" ></text>
</g>
<g >
<title>std::__y1::__function::__func&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (7,745,734 samples, 0.81%)</title><rect x="315.4" y="869" width="9.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="318.38" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1285" width="9.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1183.66" y="1295.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;arrow::compute::InputType, std::__y1::allocator&lt;arrow::compute::InputType&gt; &gt;::__destroy_vector::operator (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="293" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1161.27" y="303.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (332,533 samples, 0.03%)</title><rect x="1148.1" y="933" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.10" y="943.5" ></text>
</g>
<g >
<title>do_read_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="853" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.70" y="863.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (12,632,416 samples, 1.31%)</title><rect x="208.2" y="645" width="15.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="211.25" y="655.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (186,718 samples, 0.02%)</title><rect x="1142.6" y="965" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1145.59" y="975.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt;, TStringPtrOps&lt;TStdString&lt;std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::UnRef (1,089,224 samples, 0.11%)</title><rect x="1140.6" y="917" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1143.58" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (3,048,357 samples, 0.32%)</title><rect x="130.0" y="1269" width="3.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="133.04" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1173" width="975.6" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="199.65" y="1183.5" >std::__y1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Exec..</text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (182,490 samples, 0.02%)</title><rect x="1142.1" y="773" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1145.14" y="783.5" ></text>
</g>
<g >
<title>get_page_from_freelist (463,772 samples, 0.05%)</title><rect x="1144.9" y="629" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1147.91" y="639.5" ></text>
</g>
<g >
<title>std::__y1::__introsort&lt;std::__y1::_ClassicAlgPolicy, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (490,146 samples, 0.05%)</title><rect x="1152.2" y="965" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1155.22" y="975.5" ></text>
</g>
<g >
<title>__handle_mm_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="901" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1148.70" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (207,685 samples, 0.02%)</title><rect x="1146.0" y="901" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1149.03" y="911.5" ></text>
</g>
<g >
<title>arrow::BitUtil::SetBitTo (39,586,607 samples, 4.12%)</title><rect x="240.7" y="837" width="48.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="243.67" y="847.5" >arro..</text>
</g>
<g >
<title>std::__y1::__copy_trivial_impl[abi:v160005]&lt;char const, char&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="709" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1142.76" y="719.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::push_back[abi:v160005] (183,166 samples, 0.02%)</title><rect x="1140.1" y="933" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.13" y="943.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (796,423,940 samples, 82.79%)</title><rect x="196.6" y="1269" width="977.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="199.65" y="1279.5" >__libc_start_main_impl</text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, false&gt;::store[abi:v160005] (819,967 samples, 0.09%)</title><rect x="203.9" y="693" width="1.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="206.90" y="703.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper::DoCalculate (17,093,220 samples, 1.78%)</title><rect x="20.5" y="1269" width="20.9" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="23.48" y="1279.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Resize (12,632,416 samples, 1.31%)</title><rect x="208.2" y="789" width="15.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="211.25" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (180,095 samples, 0.02%)</title><rect x="1149.2" y="773" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1152.18" y="783.5" ></text>
</g>
<g >
<title>__irqentry_text_end (747,857 samples, 0.08%)</title><rect x="209.3" y="629" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="212.29" y="639.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareDatetime&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateGreaterOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="997" width="0.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1147.91" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterConvert (1,638,378 samples, 0.17%)</title><rect x="1140.1" y="1013" width="2.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1143.13" y="1023.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::UnRef (7,638,476 samples, 0.79%)</title><rect x="463.4" y="949" width="9.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="466.39" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (182,490 samples, 0.02%)</title><rect x="1142.1" y="837" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1145.14" y="847.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (180,095 samples, 0.02%)</title><rect x="1149.2" y="757" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1152.18" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (773,246 samples, 0.08%)</title><rect x="206.2" y="629" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="209.24" y="639.5" ></text>
</g>
<g >
<title>shared_ptr (789,244 samples, 0.08%)</title><rect x="201.6" y="837" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="204.60" y="847.5" ></text>
</g>
<g >
<title>do_mas_munmap (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="885" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1175.23" y="895.5" ></text>
</g>
<g >
<title>do_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="741" width="0.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="203.95" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterGreaterOrEqual (1,552,416 samples, 0.16%)</title><rect x="1143.6" y="1013" width="1.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1146.58" y="1023.5" ></text>
</g>
<g >
<title>TSetup (10,838,436 samples, 1.13%)</title><rect x="1139.6" y="1093" width="13.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1142.62" y="1103.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TDirectArrayHolderInplace::GetElement (7,454,829 samples, 0.77%)</title><rect x="10.0" y="1285" width="9.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>TRefCountedPtr (16,553,455 samples, 1.72%)</title><rect x="808.0" y="933" width="20.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="811.03" y="943.5" ></text>
</g>
<g >
<title>~TKernelFamilyBase (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="613" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1162.60" y="623.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::AsBoxed (10,459,595 samples, 1.09%)</title><rect x="768.3" y="965" width="12.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="771.30" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_add[abi:v160005] (1,091,153 samples, 0.11%)</title><rect x="1156.9" y="277" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1159.93" y="287.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (15,648,571 samples, 1.63%)</title><rect x="352.0" y="1029" width="19.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="354.95" y="1039.5" ></text>
</g>
<g >
<title>TUnboxedValue (23,950,673 samples, 2.49%)</title><rect x="994.7" y="981" width="29.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="997.66" y="991.5" >TU..</text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (22,168,612 samples, 2.30%)</title><rect x="451.8" y="965" width="27.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="454.78" y="975.5" >N..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePrimitive&lt;NKikimr::NMiniKQL::(anonymous namespace)::TEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="997" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1145.82" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TArrayNode::DoCalculate (1,090,983 samples, 0.11%)</title><rect x="100.3" y="1269" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="103.32" y="1279.5" ></text>
</g>
<g >
<title>CheckedDelete&lt;TThrRefBase&gt; (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="837" width="2.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1161.27" y="847.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,131,032 samples, 0.22%)</title><rect x="216.3" y="517" width="2.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="219.33" y="527.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::push_back[abi:v160005] (166,267 samples, 0.02%)</title><rect x="1151.2" y="917" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.19" y="927.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, void*&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, void, void&gt; (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="741" width="2.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1161.27" y="751.5" ></text>
</g>
<g >
<title>__run_exit_handlers (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1221" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.23" y="1231.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="373" width="5.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1155.91" y="383.5" ></text>
</g>
<g >
<title>TRaw (4,011,245 samples, 0.42%)</title><rect x="580.1" y="933" width="5.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="583.13" y="943.5" ></text>
</g>
<g >
<title>std::__y1::operator==[abi:v160005]&lt;char, std::__y1::char_traits&lt;char&gt; &gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="821" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1145.82" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Allocate&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="773" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1144.91" y="783.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::CentralFreeList::ReleaseToSpans (1,090,849 samples, 0.11%)</title><rect x="1155.6" y="117" width="1.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1158.59" y="127.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::push_back[abi:v160005] (463,772 samples, 0.05%)</title><rect x="1144.9" y="933" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.91" y="943.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (857,981 samples, 0.09%)</title><rect x="207.2" y="725" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="210.19" y="735.5" ></text>
</g>
<g >
<title>TRefCountedPtr (10,459,595 samples, 1.09%)</title><rect x="768.3" y="949" width="12.8" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="771.30" y="959.5" ></text>
</g>
<g >
<title>~unordered_map (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="597" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1161.27" y="607.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt;::destroy[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="661" width="5.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1155.91" y="671.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::construct[abi:v160005]&lt;NKikimr::NMiniKQL::TFunctionDescriptor, NKikimr::NMiniKQL::TFunctionDescriptor const&amp;, void&gt; (118,865 samples, 0.01%)</title><rect x="1139.6" y="869" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1142.62" y="879.5" ></text>
</g>
<g >
<title>~PoolBuffer (1,428,550 samples, 0.15%)</title><rect x="231.5" y="805" width="1.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="234.45" y="815.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt;::reset[abi:v160005] (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="661" width="2.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1161.27" y="671.5" ></text>
</g>
<g >
<title>NYql::NUdf::TRefCountedPtr&lt;NYql::NUdf::IBoxedValue, NYql::NUdf::TDefaultRefCountedPtrOps&lt;NYql::NUdf::IBoxedValue&gt; &gt;::Ref (897,262 samples, 0.09%)</title><rect x="780.0" y="933" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="783.02" y="943.5" ></text>
</g>
<g >
<title>absl::lts_20240116::base_internal::SpinLock::Lock (1,091,087 samples, 0.11%)</title><rect x="1154.3" y="101" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1157.25" y="111.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (185,922 samples, 0.02%)</title><rect x="1142.8" y="917" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1145.82" y="927.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="805" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1142.94" y="815.5" ></text>
</g>
<g >
<title>__alloc_pages (560,562 samples, 0.06%)</title><rect x="218.3" y="485" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="221.26" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (1,090,199 samples, 0.11%)</title><rect x="1152.9" y="309" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1155.91" y="319.5" ></text>
</g>
<g >
<title>arrow::CPUMemoryManager::Make (1,862,024 samples, 0.19%)</title><rect x="204.9" y="757" width="2.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="207.91" y="767.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (655,217 samples, 0.07%)</title><rect x="212.9" y="517" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="215.94" y="527.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (180,095 samples, 0.02%)</title><rect x="1149.2" y="789" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1152.18" y="799.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (773,246 samples, 0.08%)</title><rect x="206.2" y="725" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="209.24" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMax&lt;unsigned int, unsigned char, unsigned int&gt;, NKikimr::NMiniKQL::TBinaryArgsOpt&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (185,109 samples, 0.02%)</title><rect x="1148.5" y="933" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1151.50" y="943.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::CentralFreeList::InsertRange (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="133" width="2.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1157.25" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (463,772 samples, 0.05%)</title><rect x="1144.9" y="725" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1147.91" y="735.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (773,246 samples, 0.08%)</title><rect x="206.2" y="597" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="209.24" y="607.5" ></text>
</g>
<g >
<title>~vector (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="485" width="5.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1155.91" y="495.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryUnsignedFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMax, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (185,109 samples, 0.02%)</title><rect x="1148.5" y="965" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1151.50" y="975.5" ></text>
</g>
<g >
<title>std::__y1::fill_n[abi:v160005]&lt;NYql::NUdf::TUnboxedValue*, unsigned long, NYql::NUdf::TUnboxedValue&gt; (55,312,839 samples, 5.75%)</title><rect x="585.1" y="965" width="67.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="588.05" y="975.5" >std::__..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Scavenge (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="197" width="2.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1157.25" y="207.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::emplace[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="917" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1150.62" y="927.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,666,813 samples, 0.17%)</title><rect x="223.7" y="645" width="2.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="226.74" y="655.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::AsBoxed (21,807,223 samples, 2.27%)</title><rect x="801.6" y="949" width="26.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="804.59" y="959.5" >N..</text>
</g>
<g >
<title>mt_free_rcu (773,246 samples, 0.08%)</title><rect x="206.2" y="469" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="209.24" y="479.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="901" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1142.94" y="911.5" ></text>
</g>
<g >
<title>~TComputationPatternImpl (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="965" width="5.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1155.91" y="975.5" ></text>
</g>
<g >
<title>~TTestBlockFlowWrapper (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="773" width="5.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1155.91" y="783.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralDiv, NKikimr::NMiniKQL::(anonymous namespace)::TDiv&gt;&gt; (182,490 samples, 0.02%)</title><rect x="1142.1" y="997" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1145.14" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="917" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1175.23" y="927.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (207,685 samples, 0.02%)</title><rect x="1146.0" y="917" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1149.03" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::CreateBuiltinRegistry (10,762,772 samples, 1.12%)</title><rect x="1139.6" y="1077" width="13.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1142.62" y="1087.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt; &gt; (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1045" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1175.23" y="1055.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UniqueBoxed (5,306,887 samples, 0.55%)</title><rect x="573.6" y="965" width="6.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="576.62" y="975.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1125" width="1.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1175.23" y="1135.5" ></text>
</g>
<g >
<title>lru_add_fn (825,134 samples, 0.09%)</title><rect x="214.6" y="453" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="217.57" y="463.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::GetElement (28,625,417 samples, 2.98%)</title><rect x="160.0" y="1237" width="35.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="162.97" y="1247.5" >NY..</text>
</g>
<g >
<title>arrow::Buffer::ZeroPadding (717,233 samples, 0.07%)</title><rect x="227.9" y="805" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="230.90" y="815.5" ></text>
</g>
<g >
<title>arrow::internal::MemoryPoolStats::UpdateAllocatedBytes (819,967 samples, 0.09%)</title><rect x="203.9" y="725" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="206.90" y="735.5" ></text>
</g>
<g >
<title>vma_alloc_folio (463,772 samples, 0.05%)</title><rect x="1144.9" y="677" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1147.91" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (463,772 samples, 0.05%)</title><rect x="1144.9" y="789" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1147.91" y="799.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (1,090,716 samples, 0.11%)</title><rect x="726.5" y="981" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="729.50" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::GetValue (4,193,921 samples, 0.44%)</title><rect x="104.3" y="1269" width="5.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="107.33" y="1279.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TIntegralDiv&gt; (182,490 samples, 0.02%)</title><rect x="1142.1" y="949" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1145.14" y="959.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (181,378 samples, 0.02%)</title><rect x="1150.7" y="885" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1153.74" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterUnaryFunctionForPrecision&lt; (180,687 samples, 0.02%)</title><rect x="1145.5" y="981" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1148.48" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareReal&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqual, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (332,533 samples, 0.03%)</title><rect x="1148.1" y="981" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1151.10" y="991.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (1,090,199 samples, 0.11%)</title><rect x="1152.9" y="341" width="1.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1155.91" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (180,095 samples, 0.02%)</title><rect x="1149.2" y="661" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1152.18" y="671.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Resize (12,632,416 samples, 1.31%)</title><rect x="208.2" y="837" width="15.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="211.25" y="847.5" ></text>
</g>
<g >
<title>std::__y1::__function::__value_func&lt;NKikimr::NMiniKQL::IComputationNode*  (103,447,996 samples, 10.75%)</title><rect x="198.0" y="997" width="126.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="200.99" y="1007.5" >std::__y1::__fu..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryIntegralFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMax, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (185,109 samples, 0.02%)</title><rect x="1148.5" y="981" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1151.50" y="991.5" ></text>
</g>
<g >
<title>shared_ptr&lt;arrow::CPUMemoryManager, void&gt; (1,088,778 samples, 0.11%)</title><rect x="204.9" y="741" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="207.91" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (773,246 samples, 0.08%)</title><rect x="206.2" y="613" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="209.24" y="623.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Deallocate (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="213" width="2.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1157.25" y="223.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::Push (187,595 samples, 0.02%)</title><rect x="1151.0" y="773" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1153.96" y="783.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (686,086 samples, 0.07%)</title><rect x="306.4" y="709" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="309.37" y="719.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1,087,925 samples, 0.11%)</title><rect x="1187.3" y="997" width="1.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1190.33" y="1007.5" ></text>
</g>
<g >
<title>unmap_single_vma (5,441,138 samples, 0.57%)</title><rect x="1183.3" y="1125" width="6.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1186.33" y="1135.5" ></text>
</g>
<g >
<title>MurmurHash&lt;unsigned long&gt; (512,533 samples, 0.05%)</title><rect x="1151.6" y="1013" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1154.59" y="1023.5" ></text>
</g>
<g >
<title>unmap_vmas (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="837" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1175.23" y="847.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::IComputationPattern, TAtomicCounter, TDelete&gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="1029" width="5.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1155.91" y="1039.5" ></text>
</g>
<g >
<title>handle_mm_fault (7,789,542 samples, 0.81%)</title><rect x="211.1" y="581" width="9.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="214.13" y="591.5" ></text>
</g>
<g >
<title>pfn_pte (614,112 samples, 0.06%)</title><rect x="215.6" y="517" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="218.58" y="527.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1,088,415 samples, 0.11%)</title><rect x="1186.0" y="1029" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.00" y="1039.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (162,041 samples, 0.02%)</title><rect x="1151.4" y="885" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1154.39" y="895.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (5,062,336 samples, 0.53%)</title><rect x="472.8" y="949" width="6.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="475.76" y="959.5" ></text>
</g>
<g >
<title>find_vma (1,211,209 samples, 0.13%)</title><rect x="220.7" y="565" width="1.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="223.69" y="575.5" ></text>
</g>
<g >
<title>~vector (178,043 samples, 0.02%)</title><rect x="41.4" y="1237" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="44.45" y="1247.5" ></text>
</g>
<g >
<title>vector (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="885" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1146.58" y="895.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (2,182,276 samples, 0.23%)</title><rect x="570.9" y="949" width="2.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="573.95" y="959.5" ></text>
</g>
<g >
<title>arrow::CPUDevice::memory_manager (1,862,024 samples, 0.19%)</title><rect x="204.9" y="773" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="207.91" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (185,109 samples, 0.02%)</title><rect x="1148.5" y="917" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.50" y="927.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__push_back_slow_path&lt;NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (181,905 samples, 0.02%)</title><rect x="1141.9" y="901" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1144.91" y="911.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (187,595 samples, 0.02%)</title><rect x="1151.0" y="741" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1153.96" y="751.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::Release (4,030,997 samples, 0.42%)</title><rect x="1062.1" y="1013" width="5.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1065.11" y="1023.5" ></text>
</g>
<g >
<title>get_page_from_freelist (166,267 samples, 0.02%)</title><rect x="1151.2" y="389" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1154.19" y="399.5" ></text>
</g>
<g >
<title>NHashPrivate::ComputeStringHash&lt;char&gt; (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="869" width="1.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1149.29" y="879.5" ></text>
</g>
<g >
<title>do_user_addr_fault (773,246 samples, 0.08%)</title><rect x="206.2" y="645" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="209.24" y="655.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (7,449,976 samples, 0.77%)</title><rect x="985.5" y="965" width="9.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="988.52" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__allocate_at_least[abi:v160005]&lt;std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="869" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1154.19" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (1,428,550 samples, 0.15%)</title><rect x="231.5" y="837" width="1.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="234.45" y="847.5" ></text>
</g>
<g >
<title>basic_string (139,866 samples, 0.01%)</title><rect x="1139.8" y="853" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1142.76" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (181,905 samples, 0.02%)</title><rect x="1141.9" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1144.91" y="943.5" ></text>
</g>
<g >
<title>arrow::TypeTraits&lt;arrow::UInt64Type&gt;::type_singleton (1,320,916 samples, 0.14%)</title><rect x="200.9" y="869" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="203.95" y="879.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::FreelistPush (1,090,849 samples, 0.11%)</title><rect x="1155.6" y="101" width="1.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1158.59" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (10,034,506 samples, 1.04%)</title><rect x="298.5" y="821" width="12.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="301.54" y="831.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="933" width="2.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1161.27" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterRescaleOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDatetime&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, false&gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="981" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1143.13" y="991.5" ></text>
</g>
<g >
<title>arrow::ArrayBuilder::UnsafeAppendToBitmap (46,760,787 samples, 4.86%)</title><rect x="233.2" y="869" width="57.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="236.20" y="879.5" >arrow:..</text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;unsigned long, void&gt;::Resize (12,632,416 samples, 1.31%)</title><rect x="208.2" y="853" width="15.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="211.25" y="863.5" ></text>
</g>
<g >
<title>~KernelSignature (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="325" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1162.60" y="335.5" ></text>
</g>
<g >
<title>arrow::NumericBuilder&lt;arrow::UInt64Type&gt;::FinishInternal (7,713,918 samples, 0.80%)</title><rect x="223.7" y="885" width="9.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="226.74" y="895.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (166,267 samples, 0.02%)</title><rect x="1151.2" y="565" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.19" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_list (1,087,985 samples, 0.11%)</title><rect x="1188.7" y="997" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1191.67" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareStrings&lt;NKikimr::NMiniKQL::(anonymous namespace)::TCustomLess, NKikimr::NMiniKQL::TCompareArgsOpt, true&gt; (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="997" width="1.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1149.29" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::(anonymous namespace)::TAdd&gt;&gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="997" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1142.94" y="1007.5" ></text>
</g>
<g >
<title>__GI_exit (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1237" width="1.4" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1175.23" y="1247.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TTestBlockFlowWrapper::DoCalculate (2,156,904 samples, 0.22%)</title><rect x="971.0" y="965" width="2.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="974.02" y="975.5" ></text>
</g>
<g >
<title>NYql::NUdf::TDefaultRefCountedPtrOps&lt;NYql::NUdf::IBoxedValue&gt;::Ref (2,164,076 samples, 0.22%)</title><rect x="825.7" y="901" width="2.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="828.68" y="911.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap::Ensure (166,267 samples, 0.02%)</title><rect x="1151.2" y="597" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1154.19" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (463,772 samples, 0.05%)</title><rect x="1144.9" y="757" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1147.91" y="767.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1,088,415 samples, 0.11%)</title><rect x="1186.0" y="1045" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1189.00" y="1055.5" ></text>
</g>
<g >
<title>~function (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="293" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1162.60" y="303.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (27,048,169 samples, 2.81%)</title><rect x="445.8" y="981" width="33.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="448.79" y="991.5" >NY..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod, NKikimr::NMiniKQL::TBinaryArgsOptWithNullableResult&gt; (183,711 samples, 0.02%)</title><rect x="1148.7" y="965" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1151.73" y="975.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (118,865 samples, 0.01%)</title><rect x="1139.6" y="757" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1142.62" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulComputationNode&lt;NKikimr::NMiniKQL::IComputationExternalNode, false&gt;::ValueRef (12,343,861 samples, 1.28%)</title><rect x="491.0" y="997" width="15.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="493.99" y="1007.5" ></text>
</g>
<g >
<title>ScalarKernel (182,490 samples, 0.02%)</title><rect x="1142.1" y="901" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1145.14" y="911.5" ></text>
</g>
<g >
<title>handle_mm_fault (8,543,076 samples, 0.89%)</title><rect x="298.5" y="789" width="10.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="301.54" y="799.5" ></text>
</g>
<g >
<title>~__hash_table (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="773" width="2.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1161.27" y="783.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, void&gt; (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="421" width="5.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1155.91" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (773,246 samples, 0.08%)</title><rect x="206.2" y="565" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="209.24" y="575.5" ></text>
</g>
<g >
<title>MakeIntrusive&lt;NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry&gt;&gt; (10,762,772 samples, 1.12%)</title><rect x="1139.6" y="1061" width="13.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1142.62" y="1071.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::__destroy_vector::operator (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1157" width="1.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1175.23" y="1167.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="357" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1161.27" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (186,718 samples, 0.02%)</title><rect x="1142.6" y="725" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1145.59" y="735.5" ></text>
</g>
<g >
<title>~shared_ptr (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="549" width="5.4" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1155.91" y="559.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterAdd (415,307 samples, 0.04%)</title><rect x="1139.6" y="1013" width="0.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1142.62" y="1023.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (6,389,717 samples, 0.66%)</title><rect x="973.7" y="981" width="7.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="976.67" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePolyOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDatetime64&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTimestamp&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateGreater, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (430,339 samples, 0.04%)</title><rect x="1143.0" y="981" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1146.05" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::InvalidateValue (47,372,334 samples, 4.92%)</title><rect x="432.9" y="997" width="58.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="435.88" y="1007.5" >NKikim..</text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (789,244 samples, 0.08%)</title><rect x="201.6" y="789" width="1.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="204.60" y="799.5" ></text>
</g>
<g >
<title>exc_page_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="821" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="203.95" y="831.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::IBlockReader, std::__y1::default_delete&lt;NYql::NUdf::IBlockReader&gt; &gt;::operator (3,123,248 samples, 0.32%)</title><rect x="955.9" y="965" width="3.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="958.86" y="975.5" ></text>
</g>
<g >
<title>exit_mm (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1205" width="9.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1183.66" y="1215.5" ></text>
</g>
<g >
<title>arrow::compute::KernelSignature::Make (180,095 samples, 0.02%)</title><rect x="1149.2" y="885" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1152.18" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (185,922 samples, 0.02%)</title><rect x="1142.8" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1145.82" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryIntegralToSignedFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (162,041 samples, 0.02%)</title><rect x="1151.4" y="965" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1154.39" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (626,762 samples, 0.07%)</title><rect x="232.4" y="661" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="235.43" y="671.5" ></text>
</g>
<g >
<title>__count_memcg_events (667,880 samples, 0.07%)</title><rect x="218.9" y="549" width="0.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="221.95" y="559.5" ></text>
</g>
<g >
<title>std::__y1::__move_loop&lt;std::__y1::_ClassicAlgPolicy&gt;::operator (183,166 samples, 0.02%)</title><rect x="1140.1" y="805" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1143.13" y="815.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt; &gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="933" width="5.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1155.91" y="943.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::__destroy_vector::operator (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="469" width="5.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1155.91" y="479.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (1,211,209 samples, 0.13%)</title><rect x="220.7" y="581" width="1.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="223.69" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="885" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1145.59" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__function::__value_func&lt;NYql::NUdf::TUnboxedValue  (2,182,290 samples, 0.23%)</title><rect x="701.9" y="949" width="2.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="704.85" y="959.5" ></text>
</g>
<g >
<title>~TPatternNodes (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="837" width="5.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1155.91" y="847.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (162,041 samples, 0.02%)</title><rect x="1151.4" y="901" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1154.39" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (182,490 samples, 0.02%)</title><rect x="1142.1" y="805" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1145.14" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterEquals (559,708 samples, 0.06%)</title><rect x="1142.4" y="1013" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1145.36" y="1023.5" ></text>
</g>
<g >
<title>NMurmurPrivate::TMurHelper&lt;64u&gt;::MurmurHash (512,533 samples, 0.05%)</title><rect x="1151.6" y="997" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1154.59" y="1007.5" ></text>
</g>
<g >
<title>__folio_alloc (560,562 samples, 0.06%)</title><rect x="218.3" y="501" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="221.26" y="511.5" ></text>
</g>
<g >
<title>std::__y1::swap[abi:v160005]&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt; (490,146 samples, 0.05%)</title><rect x="1152.2" y="869" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1155.22" y="879.5" ></text>
</g>
<g >
<title>rcu_do_batch (773,246 samples, 0.08%)</title><rect x="206.2" y="485" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="209.24" y="495.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;NKikimr::NMiniKQL::IComputationPattern&gt; (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="997" width="5.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1155.91" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TFixedSizeBlockItemConverter&lt;unsigned long, false&gt;::MakeValue (6,288,851 samples, 0.65%)</title><rect x="793.9" y="965" width="7.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="796.87" y="975.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (183,711 samples, 0.02%)</title><rect x="1148.7" y="917" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1151.73" y="927.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (773,246 samples, 0.08%)</title><rect x="206.2" y="549" width="1.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="209.24" y="559.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (773,246 samples, 0.08%)</title><rect x="206.2" y="693" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="209.24" y="703.5" ></text>
</g>
<g >
<title>~PoolBuffer (3,273,089 samples, 0.34%)</title><rect x="1154.3" y="341" width="4.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1157.25" y="351.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (11,340,612 samples, 1.18%)</title><rect x="808.0" y="917" width="13.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="811.03" y="927.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (181,905 samples, 0.02%)</title><rect x="1141.9" y="789" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1144.91" y="799.5" ></text>
</g>
<g >
<title>std::__y1::swap[abi:v160005]&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt; (490,146 samples, 0.05%)</title><rect x="1152.2" y="901" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1155.22" y="911.5" ></text>
</g>
<g >
<title>slow_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (166,267 samples, 0.02%)</title><rect x="1151.2" y="805" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1154.19" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::GetValue (39,166,673 samples, 4.07%)</title><rect x="656.5" y="981" width="48.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="659.48" y="991.5" >NKik..</text>
</g>
<g >
<title>~shared_ptr (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="373" width="1.3" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1161.27" y="383.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::mutable_data (1,088,819 samples, 0.11%)</title><rect x="289.2" y="837" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="292.23" y="847.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::UnsafeAppend (46,760,787 samples, 4.86%)</title><rect x="233.2" y="853" width="57.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="236.20" y="863.5" >arrow:..</text>
</g>
<g >
<title>mt_find (1,211,209 samples, 0.13%)</title><rect x="220.7" y="549" width="1.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="223.69" y="559.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (1,088,865 samples, 0.11%)</title><rect x="228.8" y="757" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="231.78" y="767.5" ></text>
</g>
<g >
<title>clear_page_erms (728,583 samples, 0.08%)</title><rect x="307.2" y="661" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="310.21" y="671.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::UnRef (1,756,906 samples, 0.18%)</title><rect x="1131.1" y="1013" width="2.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1134.08" y="1023.5" ></text>
</g>
<g >
<title>do_read_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="725" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="203.95" y="735.5" ></text>
</g>
<g >
<title>~shared_ptr (1,428,550 samples, 0.15%)</title><rect x="231.5" y="869" width="1.7" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="234.45" y="879.5" ></text>
</g>
<g >
<title>std::__y1::__sort_impl[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (490,146 samples, 0.05%)</title><rect x="1152.2" y="997" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1155.22" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__swap_out_circular_buffer (183,166 samples, 0.02%)</title><rect x="1140.1" y="901" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1143.13" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="949" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1149.29" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryRealKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt; (181,378 samples, 0.02%)</title><rect x="1150.7" y="965" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1153.74" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (8,300,567 samples, 0.86%)</title><rect x="143.7" y="1269" width="10.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="146.73" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::__move[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt; &gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="853" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1143.13" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (463,772 samples, 0.05%)</title><rect x="1144.9" y="741" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1147.91" y="751.5" ></text>
</g>
<g >
<title>std::__y1::iter_swap[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*, std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*&gt; (490,146 samples, 0.05%)</title><rect x="1152.2" y="917" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1155.22" y="927.5" ></text>
</g>
<g >
<title>arrow::NumericBuilder&lt;arrow::UInt64Type&gt;::UnsafeAppend (74,737,394 samples, 7.77%)</title><rect x="233.2" y="885" width="91.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="236.20" y="895.5" >arrow::Num..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (12,632,416 samples, 1.31%)</title><rect x="208.2" y="677" width="15.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="211.25" y="687.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryUnsignedFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (118,865 samples, 0.01%)</title><rect x="1139.6" y="965" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1142.62" y="975.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::Buffer&gt;::operator=[abi:v160005]&lt;arrow::ResizableBuffer, void&gt; (1,088,865 samples, 0.11%)</title><rect x="228.8" y="805" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="231.78" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TSetup&lt;false&gt;::BuildGraph (103,447,996 samples, 10.75%)</title><rect x="198.0" y="1093" width="126.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="200.99" y="1103.5" >NKikimr::NMiniK..</text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (789,244 samples, 0.08%)</title><rect x="201.6" y="805" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="204.60" y="815.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::IBlockItemConverter, std::__y1::default_delete&lt;NKikimr::NMiniKQL::IBlockItemConverter&gt; &gt;, std::__y1::allocator&lt;std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::IBlockItemConverter, std::__y1::default_delete&lt;NKikimr::NMiniKQL::IBlockItemConverter&gt; &gt; &gt; &gt;::operator[][abi:v160005] (4,896,988 samples, 0.51%)</title><rect x="963.7" y="965" width="6.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="966.70" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_deallocate[abi:v160005] (178,043 samples, 0.02%)</title><rect x="41.4" y="1173" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="44.45" y="1183.5" ></text>
</g>
<g >
<title>~TTestBlockFlowWrapper (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="757" width="5.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1155.91" y="767.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TPlainKernel, NKikimr::NMiniKQL::TKernelFamilyBase&amp;, std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;&amp;, unsigned short&amp;, arrow::compute::ScalarKernel&amp;, NKikimr::NMiniKQL::TKernel::ENullMode const&amp;&gt; (182,490 samples, 0.02%)</title><rect x="1142.1" y="933" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1145.14" y="943.5" ></text>
</g>
<g >
<title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::SystemAllocator&gt;::Allocate (819,967 samples, 0.09%)</title><rect x="203.9" y="741" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="206.90" y="751.5" ></text>
</g>
<g >
<title>NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;::FreePage (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="997" width="1.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1175.23" y="1007.5" ></text>
</g>
<g >
<title>HashLen16 (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="821" width="1.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1149.29" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::AllocAndReport&lt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="613" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1154.19" y="623.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt; (180,095 samples, 0.02%)</title><rect x="1149.2" y="949" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1152.18" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryNumericFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMax, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (185,109 samples, 0.02%)</title><rect x="1148.5" y="997" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1151.50" y="1007.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::SampleifyAllocation (166,267 samples, 0.02%)</title><rect x="1151.2" y="773" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1154.19" y="783.5" ></text>
</g>
<g >
<title>std::__y1::__function::__alloc_func&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (103,447,996 samples, 10.75%)</title><rect x="198.0" y="965" width="126.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="200.99" y="975.5" >std::__y1::__fu..</text>
</g>
<g >
<title>TUnboxedValue (24,178,060 samples, 2.51%)</title><rect x="341.5" y="1045" width="29.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="344.49" y="1055.5" >TU..</text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (634,990 samples, 0.07%)</title><rect x="227.1" y="805" width="0.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="230.12" y="815.5" ></text>
</g>
<g >
<title>~__hash_table (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="581" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1161.27" y="591.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::GetElement (37,718,643 samples, 3.92%)</title><rect x="324.9" y="1077" width="46.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="327.88" y="1087.5" >NYql..</text>
</g>
<g >
<title>~TIntrusivePtr (6,543,597 samples, 0.68%)</title><rect x="1152.9" y="1077" width="8.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1155.91" y="1087.5" ></text>
</g>
<g >
<title>~ArrayData (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="501" width="5.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1155.91" y="511.5" ></text>
</g>
<g >
<title>TUnboxedValue (10,387,357 samples, 1.08%)</title><rect x="727.8" y="997" width="12.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="730.84" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub&lt;int, unsigned short, int&gt;, NKikimr::NMiniKQL::TBinaryArgsOpt&lt;NYql::NUdf::TDataType&lt;int&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;int&gt;, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (162,041 samples, 0.02%)</title><rect x="1151.4" y="933" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1154.39" y="943.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TMul, NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt;&gt; (1,451,322 samples, 0.15%)</title><rect x="1149.2" y="997" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1152.18" y="1007.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::ReleaseRef (2,944,455 samples, 0.31%)</title><rect x="1062.1" y="997" width="3.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1065.11" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TArrowBlock::From (21,807,223 samples, 2.27%)</title><rect x="801.6" y="965" width="26.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="804.59" y="975.5" >N..</text>
</g>
<g >
<title>unmap_single_vma (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="821" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1175.23" y="831.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TFlowForwardListWrapper::TIterator::Next (1,089,998 samples, 0.11%)</title><rect x="135.1" y="1269" width="1.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="138.12" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator&lt;NYql::NUdf::TUnboxedValue,  (3,272,107 samples, 0.34%)</title><rect x="959.7" y="965" width="4.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="962.69" y="975.5" ></text>
</g>
<g >
<title>folio_add_lru (1,496,219 samples, 0.16%)</title><rect x="213.7" y="485" width="1.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="216.74" y="495.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap2&lt;30, &amp;tcmalloc::tcmalloc_internal::MetaDataAlloc&gt;::Ensure (166,267 samples, 0.02%)</title><rect x="1151.2" y="581" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1154.19" y="591.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod&lt;unsigned char, unsigned short, unsigned short&gt;, NKikimr::NMiniKQL::TBinaryArgsOptWithNullableResult&lt;NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;unsigned short&gt;, true, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;true, false&gt; &gt; (183,711 samples, 0.02%)</title><rect x="1148.7" y="949" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1151.73" y="959.5" ></text>
</g>
<g >
<title>__handle_mm_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="853" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1145.59" y="863.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (53,355,728 samples, 5.55%)</title><rect x="587.5" y="933" width="65.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="590.45" y="943.5" >NYql::N..</text>
</g>
<g >
<title>NMurmurPrivate::MurmurHash64 (512,533 samples, 0.05%)</title><rect x="1151.6" y="981" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1154.59" y="991.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (667,880 samples, 0.07%)</title><rect x="218.9" y="565" width="0.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="221.95" y="575.5" ></text>
</g>
<g >
<title>arrow::NumericBuilder&lt;arrow::UInt64Type&gt;::type (634,990 samples, 0.07%)</title><rect x="227.1" y="869" width="0.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="230.12" y="879.5" ></text>
</g>
<g >
<title>~TBasicString (1,089,224 samples, 0.11%)</title><rect x="1140.6" y="949" width="1.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1143.58" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (2,824,742 samples, 0.29%)</title><rect x="1081.1" y="1029" width="3.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1084.09" y="1039.5" ></text>
</g>
<g >
<title>TCMallocInternalNew (181,905 samples, 0.02%)</title><rect x="1141.9" y="805" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1144.91" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (252,940,829 samples, 26.29%)</title><rect x="751.8" y="1013" width="310.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="754.84" y="1023.5" >NKikimr::NMiniKQL::TStatefulWideFlowCompu..</text>
</g>
<g >
<title>arrow::ArrayData::GetValues&lt;unsigned long&gt; (58,120,181 samples, 6.04%)</title><rect x="881.9" y="949" width="71.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="884.89" y="959.5" >arrow::A..</text>
</g>
<g >
<title>std::__y1::unordered_map&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::operator[] (185,109 samples, 0.02%)</title><rect x="1148.5" y="901" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1151.50" y="911.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (801,788 samples, 0.08%)</title><rect x="231.5" y="741" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="234.45" y="751.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (5,002,055 samples, 0.52%)</title><rect x="1017.9" y="949" width="6.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1020.90" y="959.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2,175,910 samples, 0.23%)</title><rect x="1187.3" y="1061" width="2.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1190.33" y="1071.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1109" width="2.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1183.66" y="1119.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1,087,985 samples, 0.11%)</title><rect x="1188.7" y="965" width="1.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1191.67" y="975.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TPlainKernel, NKikimr::NMiniKQL::TKernelFamilyBase&amp;, std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;&amp;, unsigned short&amp;, arrow::compute::ScalarKernel&amp;, NKikimr::NMiniKQL::TKernel::ENullMode const&amp;&gt; (181,378 samples, 0.02%)</title><rect x="1150.7" y="933" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1153.74" y="943.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Resize (4,628,132 samples, 0.48%)</title><rect x="202.6" y="821" width="5.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="205.57" y="831.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Finish (1,806,098 samples, 0.19%)</title><rect x="227.9" y="837" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="230.90" y="847.5" ></text>
</g>
<g >
<title>arrow::uint64 (1,320,916 samples, 0.14%)</title><rect x="200.9" y="853" width="1.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="203.95" y="863.5" ></text>
</g>
<g >
<title>filemap_map_pages (267,553 samples, 0.03%)</title><rect x="1145.7" y="837" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1148.70" y="847.5" ></text>
</g>
<g >
<title>ArrayKernel (182,490 samples, 0.02%)</title><rect x="1142.1" y="885" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1145.14" y="895.5" ></text>
</g>
<g >
<title>std::__y1::shared_ptr&lt;arrow::Buffer&gt;::get[abi:v160005] (12,332,410 samples, 1.28%)</title><rect x="936.7" y="901" width="15.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="939.72" y="911.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::IComputationNode*, NKikimr::NMiniKQL::TMKQLAllocator&lt;NKikimr::NMiniKQL::IComputationNode*,  (1,794,185 samples, 0.19%)</title><rect x="716.8" y="981" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="719.82" y="991.5" ></text>
</g>
<g >
<title>std::__y1::__copy[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, char const*, char const*, char*&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="773" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1142.76" y="783.5" ></text>
</g>
<g >
<title>arrow::ArrayData::GetValues&lt;unsigned long&gt; (53,271,597 samples, 5.54%)</title><rect x="887.8" y="933" width="65.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="890.84" y="943.5" >arrow::..</text>
</g>
<g >
<title>asm_exc_page_fault (773,246 samples, 0.08%)</title><rect x="206.2" y="677" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="209.24" y="687.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Resize (1,908,127 samples, 0.20%)</title><rect x="202.6" y="773" width="2.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="205.57" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (183,166 samples, 0.02%)</title><rect x="1140.1" y="949" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1143.13" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (23,950,673 samples, 2.49%)</title><rect x="994.7" y="965" width="29.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="997.66" y="975.5" >NY..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Sampler::TryRecordAllocationFast (332,533 samples, 0.03%)</title><rect x="1148.1" y="837" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1151.10" y="847.5" ></text>
</g>
<g >
<title>NUnitTest::RunMain (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1237" width="975.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="199.65" y="1247.5" >NUnitTest::RunMain</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareBigDatetime&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateGreater, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (430,339 samples, 0.04%)</title><rect x="1143.0" y="997" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1146.05" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterSub (328,308 samples, 0.03%)</title><rect x="1151.2" y="1013" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1154.19" y="1023.5" ></text>
</g>
<g >
<title>~Kernel (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="389" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1161.27" y="399.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::SystemAllocator::DeallocateAligned (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="293" width="2.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1157.25" y="303.5" ></text>
</g>
<g >
<title>std::__y1::__dispatch_copy_or_move[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::__move_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__move_trivial, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt; &gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="837" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1147.91" y="847.5" ></text>
</g>
<g >
<title>do_user_addr_fault (183,166 samples, 0.02%)</title><rect x="1140.1" y="757" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1143.13" y="767.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_sub[abi:v160005] (626,762 samples, 0.07%)</title><rect x="232.4" y="629" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="235.43" y="639.5" ></text>
</g>
<g >
<title>__allocation_guard&lt;std::__y1::allocator&lt;arrow::ArrayData&gt; &gt; (2,755,402 samples, 0.29%)</title><rect x="223.7" y="821" width="3.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="226.74" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (857,981 samples, 0.09%)</title><rect x="207.2" y="757" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="210.19" y="767.5" ></text>
</g>
<g >
<title>__split_buffer (166,267 samples, 0.02%)</title><rect x="1151.2" y="885" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1154.19" y="895.5" ></text>
</g>
<g >
<title>exc_page_fault (1,666,813 samples, 0.17%)</title><rect x="223.7" y="661" width="2.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="226.74" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (717,233 samples, 0.07%)</title><rect x="227.9" y="789" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="230.90" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator--[abi:v160005] (1,088,778 samples, 0.11%)</title><rect x="204.9" y="661" width="1.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="207.91" y="671.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (2,755,402 samples, 0.29%)</title><rect x="223.7" y="773" width="3.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="226.74" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TFixedSizeBlockItemConverter&lt;unsigned long, false&gt;::MakeValue (1,089,880 samples, 0.11%)</title><rect x="99.0" y="1269" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="101.98" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void*&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void, void&gt; (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="549" width="1.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1161.27" y="559.5" ></text>
</g>
<g >
<title>std::__y1::function&lt;NYql::NUdf::TUnboxedValue  (2,182,290 samples, 0.23%)</title><rect x="701.9" y="965" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="704.85" y="975.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (10,723,172 samples, 1.11%)</title><rect x="981.5" y="981" width="13.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="984.51" y="991.5" ></text>
</g>
<g >
<title>~TGlobalPools (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1189" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1175.23" y="1199.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::FinishWithLength (1,806,098 samples, 0.19%)</title><rect x="227.9" y="853" width="2.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="230.90" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::NDecimal::TCheckBounds&lt; (184,083 samples, 0.02%)</title><rect x="1140.4" y="933" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1143.35" y="943.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageAllocator::New (166,267 samples, 0.02%)</title><rect x="1151.2" y="757" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1154.19" y="767.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="277" width="2.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1157.25" y="287.5" ></text>
</g>
<g >
<title>~unique_ptr (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="485" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1161.27" y="495.5" ></text>
</g>
<g >
<title>std::__y1::char_traits&lt;char&gt;::compare (185,922 samples, 0.02%)</title><rect x="1142.8" y="789" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1145.82" y="799.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, void&gt; (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="677" width="5.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1155.91" y="687.5" ></text>
</g>
<g >
<title>exc_page_fault (180,095 samples, 0.02%)</title><rect x="1149.2" y="677" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1152.18" y="687.5" ></text>
</g>
<g >
<title>std::__y1::__constexpr_memcmp[abi:v160005]&lt;char&gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="773" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1145.82" y="783.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,313,056 samples, 0.14%)</title><rect x="304.8" y="725" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="307.76" y="735.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (267,553 samples, 0.03%)</title><rect x="1145.7" y="981" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1148.70" y="991.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="901" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1145.82" y="911.5" ></text>
</g>
<g >
<title>__folio_alloc (166,267 samples, 0.02%)</title><rect x="1151.2" y="421" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1154.19" y="431.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TMutableComputationNode&lt;NKikimr::NMiniKQL::TArrayNode&gt;::GetValue (191,136,428 samples, 19.87%)</title><rect x="506.1" y="1013" width="234.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="509.13" y="1023.5" >NKikimr::NMiniKQL::TMutableComp..</text>
</g>
<g >
<title>std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;::operator (185,922 samples, 0.02%)</title><rect x="1142.8" y="869" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1145.82" y="879.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__push_back_slow_path&lt;NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="917" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1143.13" y="927.5" ></text>
</g>
<g >
<title>exc_page_fault (118,865 samples, 0.01%)</title><rect x="1139.6" y="821" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1142.62" y="831.5" ></text>
</g>
<g >
<title>exc_page_fault (463,772 samples, 0.05%)</title><rect x="1144.9" y="773" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1147.91" y="783.5" ></text>
</g>
<g >
<title>std::__y1::__copy_trivial::operator (139,866 samples, 0.01%)</title><rect x="1139.8" y="725" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1142.76" y="735.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Finish (1,806,098 samples, 0.19%)</title><rect x="227.9" y="821" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="230.90" y="831.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (186,718 samples, 0.02%)</title><rect x="1142.6" y="709" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1145.59" y="719.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (6,196,224 samples, 0.64%)</title><rect x="566.0" y="965" width="7.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="569.02" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareOpt&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="965" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1145.82" y="975.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (1,451,322 samples, 0.15%)</title><rect x="1149.2" y="981" width="1.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1152.18" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::TransferCacheManager::InsertRange (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="165" width="2.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1157.25" y="175.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (187,595 samples, 0.02%)</title><rect x="1151.0" y="949" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1153.96" y="959.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (5,790,382 samples, 0.60%)</title><rect x="364.0" y="1013" width="7.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="367.04" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::__function::__func&lt;NKikimr::NMiniKQL::(anonymous namespace)::GetNodeFactory (103,447,996 samples, 10.75%)</title><rect x="198.0" y="981" width="126.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="200.99" y="991.5" >std::__y1::__fu..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="965" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1142.76" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::piecewise_construct_t const&amp;, std::__y1::tuple&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;&amp;&amp;&gt;, std::__y1::tuple&lt;&gt; &gt; (185,109 samples, 0.02%)</title><rect x="1148.5" y="885" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1151.50" y="895.5" ></text>
</g>
<g >
<title>shared_ptr (2,156,904 samples, 0.22%)</title><rect x="971.0" y="933" width="2.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="974.02" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLessOrEqualOp&gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="949" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1150.62" y="959.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeCache::DoGet (166,267 samples, 0.02%)</title><rect x="1151.2" y="661" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1154.19" y="671.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Finish (1,088,878 samples, 0.11%)</title><rect x="230.1" y="837" width="1.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="233.12" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernelPoly&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTimestamp&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateEqualsOp&gt; (187,068 samples, 0.02%)</title><rect x="1142.4" y="965" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1145.36" y="975.5" ></text>
</g>
<g >
<title>TUnboxedValue (11,023,518 samples, 1.15%)</title><rect x="1084.6" y="1029" width="13.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1087.55" y="1039.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (180,095 samples, 0.02%)</title><rect x="1149.2" y="741" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1152.18" y="751.5" ></text>
</g>
<g >
<title>~Buffer (1,428,550 samples, 0.15%)</title><rect x="231.5" y="789" width="1.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="234.45" y="799.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::GetElement (28,625,417 samples, 2.98%)</title><rect x="160.0" y="1253" width="35.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="162.97" y="1263.5" >NY..</text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (1,428,550 samples, 0.15%)</title><rect x="231.5" y="757" width="1.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="234.45" y="767.5" ></text>
</g>
<g >
<title>~TPlainKernel (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="421" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1162.60" y="431.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (10,024,940 samples, 1.04%)</title><rect x="704.5" y="981" width="12.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="707.53" y="991.5" ></text>
</g>
<g >
<title>TCMallocInternalFree (187,595 samples, 0.02%)</title><rect x="1151.0" y="853" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1153.96" y="863.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (686,086 samples, 0.07%)</title><rect x="306.4" y="725" width="0.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="309.37" y="735.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::Deallocate (187,595 samples, 0.02%)</title><rect x="1151.0" y="789" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1153.96" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__release_shared[abi:v160005] (1,428,550 samples, 0.15%)</title><rect x="231.5" y="853" width="1.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="234.45" y="863.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt;::allocate[abi:v160005] (166,267 samples, 0.02%)</title><rect x="1151.2" y="853" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1154.19" y="863.5" ></text>
</g>
<g >
<title>get_page_from_freelist (560,562 samples, 0.06%)</title><rect x="218.3" y="469" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="221.26" y="479.5" ></text>
</g>
<g >
<title>page_add_file_rmap (186,718 samples, 0.02%)</title><rect x="1142.6" y="757" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1145.59" y="767.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::IComputationExternalNode*, NKikimr::NMiniKQL::TMKQLAllocator&lt;NKikimr::NMiniKQL::IComputationExternalNode*,  (11,442,768 samples, 1.19%)</title><rect x="1067.1" y="1013" width="14.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1070.05" y="1023.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (819,557 samples, 0.09%)</title><rect x="303.8" y="741" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="306.75" y="751.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (3,253,854 samples, 0.34%)</title><rect x="668.1" y="949" width="4.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="671.10" y="959.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationPattern&gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="1045" width="5.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1155.91" y="1055.5" ></text>
</g>
<g >
<title>_compound_head (2,176,813 samples, 0.23%)</title><rect x="1183.3" y="1077" width="2.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1186.33" y="1087.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLessOp&gt; (267,553 samples, 0.03%)</title><rect x="1145.7" y="997" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1148.70" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::operator[][abi:v160005] (1,089,359 samples, 0.11%)</title><rect x="951.8" y="917" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="954.85" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (180,095 samples, 0.02%)</title><rect x="1149.2" y="629" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1152.18" y="639.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (5,441,138 samples, 0.57%)</title><rect x="1183.3" y="1093" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1186.33" y="1103.5" ></text>
</g>
<g >
<title>__folio_alloc (463,772 samples, 0.05%)</title><rect x="1144.9" y="661" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1147.91" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (118,865 samples, 0.01%)</title><rect x="1139.6" y="837" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1142.62" y="847.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::FinishWithLength (1,806,098 samples, 0.19%)</title><rect x="227.9" y="869" width="2.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="230.90" y="879.5" ></text>
</g>
<g >
<title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::SystemAllocator&gt;::Allocate (609,544 samples, 0.06%)</title><rect x="159.2" y="1269" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="162.22" y="1279.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (118,865 samples, 0.01%)</title><rect x="1139.6" y="949" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1142.62" y="959.5" ></text>
</g>
<g >
<title>vma_alloc_folio (166,267 samples, 0.02%)</title><rect x="1151.2" y="437" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1154.19" y="447.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterLess (1,564,226 samples, 0.16%)</title><rect x="1145.7" y="1013" width="1.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1148.70" y="1023.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeCache::Get (166,267 samples, 0.02%)</title><rect x="1151.2" y="677" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1154.19" y="687.5" ></text>
</g>
<g >
<title>std::__y1::__unwrap_and_dispatch[abi:v160005]&lt;std::__y1::__overload&lt;std::__y1::__copy_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__copy_trivial&gt;, char const*, char const*, char*, 0&gt; (139,866 samples, 0.01%)</title><rect x="1139.8" y="741" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1142.76" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePolyOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzTimestamp&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateNotEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (187,595 samples, 0.02%)</title><rect x="1151.0" y="981" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1153.96" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap2&lt;30, &amp;tcmalloc::tcmalloc_internal::MetaDataAlloc&gt;::sizeclass (801,788 samples, 0.08%)</title><rect x="231.5" y="677" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="234.45" y="687.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::__base_destruct_at_end[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="437" width="5.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1155.91" y="447.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (185,109 samples, 0.02%)</title><rect x="1148.5" y="869" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1151.50" y="879.5" ></text>
</g>
<g >
<title>~vector (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="741" width="5.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1155.91" y="751.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Resize (1,088,878 samples, 0.11%)</title><rect x="230.1" y="789" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="233.12" y="799.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::AllocSmall&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (166,267 samples, 0.02%)</title><rect x="1151.2" y="789" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1154.19" y="799.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::GetCacheIfPresent (1,090,199 samples, 0.11%)</title><rect x="1152.9" y="277" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1155.91" y="287.5" ></text>
</g>
<g >
<title>std::__y1::destroy_at[abi:v160005]&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, 0&gt; (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="725" width="2.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1161.27" y="735.5" ></text>
</g>
<g >
<title>std::__y1::__move[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt; &gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="853" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1147.91" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper::DoCalculate (30,004,477 samples, 3.12%)</title><rect x="60.8" y="1253" width="36.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="63.84" y="1263.5" >NKi..</text>
</g>
<g >
<title>std::__y1::move[abi:v160005]&lt;std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt; &gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="869" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1147.91" y="879.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt;::destroy[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="565" width="5.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1155.91" y="575.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;unsigned long, void&gt;::FinishWithLength (1,088,878 samples, 0.11%)</title><rect x="230.1" y="869" width="1.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="233.12" y="879.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::PageMap::sizeclass (801,788 samples, 0.08%)</title><rect x="231.5" y="693" width="0.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="234.45" y="703.5" ></text>
</g>
<g >
<title>std::__y1::__do_deallocate_handle_size[abi:v160005]&lt;&gt; (178,043 samples, 0.02%)</title><rect x="41.4" y="1157" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="44.45" y="1167.5" ></text>
</g>
<g >
<title>absl::lts_20240116::base_internal::SpinLock::Unlock (1,088,589 samples, 0.11%)</title><rect x="225.8" y="661" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="228.79" y="671.5" ></text>
</g>
<g >
<title>~TPlainKernel (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="437" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1162.60" y="447.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IBuiltinFunctionRegistry, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IBuiltinFunctionRegistry&gt; &gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="917" width="2.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1161.27" y="927.5" ></text>
</g>
<g >
<title>std::__y1::make_pair[abi:v160005]&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt; const&amp;, unsigned short&amp;&gt; (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="917" width="1.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1146.58" y="927.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::RefillFiller (166,267 samples, 0.02%)</title><rect x="1151.2" y="693" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1154.19" y="703.5" ></text>
</g>
<g >
<title>~TBuiltinFunctionRegistry (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="805" width="2.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1161.27" y="815.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_allocate[abi:v160005] (156,576 samples, 0.02%)</title><rect x="1139.9" y="821" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1142.94" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::internal_transfer_cache::RingBufferTransferCache&lt;tcmalloc::tcmalloc_internal::CentralFreeList, tcmalloc::tcmalloc_internal::TransferCacheManager&gt;::InsertRange (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="149" width="2.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1157.25" y="159.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Finish (1,088,878 samples, 0.11%)</title><rect x="230.1" y="821" width="1.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="233.12" y="831.5" ></text>
</g>
<g >
<title>std::__y1::__destroy_at[abi:v160005]&lt;std::__y1::pair&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, 0&gt; (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="709" width="2.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1161.27" y="719.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1061" width="2.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1183.66" y="1071.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::__push_back_slow_path&lt;NKikimr::NMiniKQL::TFunctionDescriptor const&amp;&gt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="901" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1154.19" y="911.5" ></text>
</g>
<g >
<title>mt_find (1,491,430 samples, 0.16%)</title><rect x="309.0" y="757" width="1.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="312.02" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (180,095 samples, 0.02%)</title><rect x="1149.2" y="613" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1152.18" y="623.5" ></text>
</g>
<g >
<title>std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;::compare (185,922 samples, 0.02%)</title><rect x="1142.8" y="805" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1145.82" y="815.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (825,134 samples, 0.09%)</title><rect x="214.6" y="469" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="217.57" y="479.5" ></text>
</g>
<g >
<title>~Kernel (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="389" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1162.60" y="399.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper::TState::Get (153,722,902 samples, 15.98%)</title><rect x="782.5" y="981" width="188.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="785.46" y="991.5" >NKikimr::NMiniKQL::(anon..</text>
</g>
<g >
<title>CheckedDelete&lt;NKikimr::NMiniKQL::IComputationPattern&gt; (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="981" width="5.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1155.91" y="991.5" ></text>
</g>
<g >
<title>std::__y1::_IterOps&lt;std::__y1::_ClassicAlgPolicy&gt;::iter_swap[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*&amp;, std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*&amp;&gt; (490,146 samples, 0.05%)</title><rect x="1152.2" y="933" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1155.22" y="943.5" ></text>
</g>
<g >
<title>__count_memcg_events (681,008 samples, 0.07%)</title><rect x="304.8" y="693" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="307.76" y="703.5" ></text>
</g>
<g >
<title>release_pages (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1093" width="2.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1183.66" y="1103.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TTestCaseTestOldFromBlocks::Execute_ (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1125" width="975.6" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="199.65" y="1135.5" >NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TTestCaseTestOldFromBlocks::Execute_</text>
</g>
<g >
<title>handle_mm_fault (183,166 samples, 0.02%)</title><rect x="1140.1" y="741" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1143.13" y="751.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (1,002,679 samples, 0.10%)</title><rect x="1151.6" y="1029" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1154.59" y="1039.5" ></text>
</g>
<g >
<title>~TGlobalPagePool (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1013" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1175.23" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt;::operator (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="645" width="2.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1161.27" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (812,198 samples, 0.08%)</title><rect x="223.7" y="613" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="226.74" y="623.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;long&gt;, NYql::NUdf::TDataType&lt;long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod&gt; (180,210 samples, 0.02%)</title><rect x="1149.0" y="949" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1151.96" y="959.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1,496,219 samples, 0.16%)</title><rect x="213.7" y="501" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="216.74" y="511.5" ></text>
</g>
<g >
<title>Kernel (182,490 samples, 0.02%)</title><rect x="1142.1" y="869" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1145.14" y="879.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (15,739,170 samples, 1.64%)</title><rect x="682.5" y="949" width="19.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="685.54" y="959.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8,543,076 samples, 0.89%)</title><rect x="298.5" y="773" width="10.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="301.54" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;float&gt;, NYql::NUdf::TDataType&lt;float&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TMul&gt; (181,378 samples, 0.02%)</title><rect x="1150.7" y="949" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1153.74" y="959.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,175,910 samples, 0.23%)</title><rect x="1187.3" y="1029" width="2.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1190.33" y="1039.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (31,095,981 samples, 3.23%)</title><rect x="59.5" y="1269" width="38.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="62.50" y="1279.5" >NKi..</text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IComputationPattern, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationPattern&gt; &gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="1061" width="5.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1155.91" y="1071.5" ></text>
</g>
<g >
<title>vma_alloc_folio (728,583 samples, 0.08%)</title><rect x="307.2" y="725" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="310.21" y="735.5" ></text>
</g>
<g >
<title>rmqueue_bulk (560,562 samples, 0.06%)</title><rect x="218.3" y="437" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="221.26" y="447.5" ></text>
</g>
<g >
<title>~TIntrusivePtr (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="821" width="5.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1155.91" y="831.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::TransferCacheManager::RemoveRange (1,088,589 samples, 0.11%)</title><rect x="225.8" y="709" width="1.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="228.79" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5,778,493 samples, 0.60%)</title><rect x="1173.6" y="1285" width="7.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1176.57" y="1295.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareReal&lt;NKikimr::NMiniKQL::(anonymous namespace)::TEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="981" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1145.82" y="991.5" ></text>
</g>
<g >
<title>~TBasicString (187,595 samples, 0.02%)</title><rect x="1151.0" y="933" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1153.96" y="943.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_store[abi:v160005]&lt;long&gt; (819,967 samples, 0.09%)</title><rect x="203.9" y="677" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="206.90" y="687.5" ></text>
</g>
<g >
<title>~vector (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="645" width="5.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1155.91" y="655.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="965" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1148.70" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt;, std::__y1::equal_to&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernelFamily, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernelFamily&gt; &gt; &gt; &gt; &gt;::__deallocate_node (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="757" width="2.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1161.27" y="767.5" ></text>
</g>
<g >
<title>fast_alloc&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;, decltype (156,576 samples, 0.02%)</title><rect x="1139.9" y="773" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1142.94" y="783.5" ></text>
</g>
<g >
<title>TIntrusivePtr&lt;NKikimr::NMiniKQL::IComputationNode, TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IComputationNode&gt; &gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="805" width="5.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1155.91" y="815.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryRealKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub&gt; (178,043 samples, 0.02%)</title><rect x="41.4" y="1269" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="44.45" y="1279.5" ></text>
</g>
<g >
<title>arrow::TypedBufferBuilder&lt;bool, void&gt;::Resize (4,628,132 samples, 0.48%)</title><rect x="202.6" y="837" width="5.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="205.57" y="847.5" ></text>
</g>
<g >
<title>std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt;::operator (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="453" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1162.60" y="463.5" ></text>
</g>
<g >
<title>arrow::ArrayData::Make (2,755,402 samples, 0.29%)</title><rect x="223.7" y="869" width="3.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="226.74" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddDateComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateEqualsOp&gt; (187,068 samples, 0.02%)</title><rect x="1142.4" y="997" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1145.36" y="1007.5" ></text>
</g>
<g >
<title>pmd_val (750,155 samples, 0.08%)</title><rect x="308.1" y="741" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="311.10" y="751.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::FetchFromCentralCache (181,378 samples, 0.02%)</title><rect x="1150.7" y="901" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1153.74" y="911.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterBinaryFunctionForPrecision&lt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="981" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1154.19" y="991.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__rehash&lt;true&gt; (1,089,849 samples, 0.11%)</title><rect x="1149.4" y="853" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1152.40" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::RegisterDecimalConvert (1,273,307 samples, 0.13%)</title><rect x="1140.4" y="997" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1143.35" y="1007.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::Next (1,091,055 samples, 0.11%)</title><rect x="195.1" y="1237" width="1.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="198.08" y="1247.5" ></text>
</g>
<g >
<title>~shared_ptr (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="373" width="1.3" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1162.60" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (773,246 samples, 0.08%)</title><rect x="206.2" y="741" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="209.24" y="751.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;, std::__y1::allocator&lt;std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt; &gt; &gt;::__clear[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="709" width="5.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1155.91" y="719.5" ></text>
</g>
<g >
<title>std::__y1::hash&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt; &gt;::operator (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="885" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1149.29" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterUnaryFunction&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalInc&lt; (180,687 samples, 0.02%)</title><rect x="1145.5" y="965" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1148.48" y="975.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;::__destroy_vector::operator (178,043 samples, 0.02%)</title><rect x="41.4" y="1221" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="44.45" y="1231.5" ></text>
</g>
<g >
<title>~PoolBuffer (3,273,089 samples, 0.34%)</title><rect x="1154.3" y="325" width="4.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1157.25" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1077" width="2.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1183.66" y="1087.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SizeMap::GetSizeClass&lt;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt; &gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="757" width="0.2" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1142.94" y="767.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;double&gt;, NYql::NUdf::TDataType&lt;short&gt;, NYql::NUdf::TDataType&lt;double&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TSub&gt; (178,043 samples, 0.02%)</title><rect x="41.4" y="1253" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="44.45" y="1263.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Ref (6,214,239 samples, 0.65%)</title><rect x="1090.5" y="1013" width="7.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1093.45" y="1023.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;::__clear[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="453" width="5.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1155.91" y="463.5" ></text>
</g>
<g >
<title>~shared_ptr (1,428,550 samples, 0.15%)</title><rect x="231.5" y="773" width="1.7" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="234.45" y="783.5" ></text>
</g>
<g >
<title>std::__y1::__destroy_at[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, 0&gt; (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="517" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1161.27" y="527.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (857,981 samples, 0.09%)</title><rect x="207.2" y="773" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="210.19" y="783.5" ></text>
</g>
<g >
<title>__do_softirq (773,246 samples, 0.08%)</title><rect x="206.2" y="533" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="209.24" y="543.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterComparePrimitive&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLess, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (207,685 samples, 0.02%)</title><rect x="1146.0" y="997" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1149.03" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (186,718 samples, 0.02%)</title><rect x="1142.6" y="949" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1145.59" y="959.5" ></text>
</g>
<g >
<title>TUnboxedValuePod (4,011,245 samples, 0.42%)</title><rect x="580.1" y="949" width="5.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="583.13" y="959.5" ></text>
</g>
<g >
<title>__free_one_page (1,087,985 samples, 0.11%)</title><rect x="1188.7" y="949" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1191.67" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatelessFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TNarrowMapWrapper&gt;::GetValue (18,184,208 samples, 1.89%)</title><rect x="19.1" y="1285" width="22.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="22.14" y="1295.5" >N..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterUnaryFunctionForAllPrecisions&lt;NKikimr::NMiniKQL::NDecimal::TCheckBounds, NKikimr::NMiniKQL::TUnaryArgsOpt&gt; (1,273,307 samples, 0.13%)</title><rect x="1140.4" y="981" width="1.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1143.35" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (187,595 samples, 0.02%)</title><rect x="1151.0" y="837" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1153.96" y="847.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (6,543,111 samples, 0.68%)</title><rect x="479.0" y="981" width="8.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="481.97" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (11,043,787 samples, 1.15%)</title><rect x="109.5" y="1269" width="13.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="112.48" y="1279.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1205" width="975.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="199.65" y="1215.5" >NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute</text>
</g>
<g >
<title>filemap_map_pages (531,672 samples, 0.06%)</title><rect x="200.9" y="709" width="0.7" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="203.95" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (180,095 samples, 0.02%)</title><rect x="1149.2" y="693" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1152.18" y="703.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::HasValue (1,090,535 samples, 0.11%)</title><rect x="781.1" y="965" width="1.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="784.13" y="975.5" ></text>
</g>
<g >
<title>~TUnboxedValue (9,163,235 samples, 0.95%)</title><rect x="1160.9" y="1093" width="11.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1163.94" y="1103.5" ></text>
</g>
<g >
<title>~pair (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="501" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1161.27" y="511.5" ></text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="1029" width="2.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.27" y="1039.5" ></text>
</g>
<g >
<title>CityHash64 (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="853" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1149.29" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_compare_exchange_strong[abi:v160005]&lt;unsigned int&gt; (1,091,087 samples, 0.11%)</title><rect x="1154.3" y="37" width="1.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1157.25" y="47.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateGreaterOrEqual&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, false, false, false&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;false, false&gt; &gt; (463,772 samples, 0.05%)</title><rect x="1144.9" y="965" width="0.6" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1147.91" y="975.5" ></text>
</g>
<g >
<title>exc_page_fault (183,166 samples, 0.02%)</title><rect x="1140.1" y="773" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1143.13" y="783.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt;::allocate[abi:v160005] (181,905 samples, 0.02%)</title><rect x="1141.9" y="853" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1144.91" y="863.5" ></text>
</g>
<g >
<title>folio_add_lru (686,086 samples, 0.07%)</title><rect x="306.4" y="693" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="309.37" y="703.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="853" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1150.62" y="863.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (183,711 samples, 0.02%)</title><rect x="1148.7" y="885" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1151.73" y="895.5" ></text>
</g>
<g >
<title>do_user_addr_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="933" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1148.70" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;unsigned long&gt;, NYql::NUdf::TDataType&lt;bool&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="949" width="1.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1146.58" y="959.5" ></text>
</g>
<g >
<title>std::__y1::allocate_shared[abi:v160005]&lt;arrow::ArrayData, std::__y1::allocator&lt;arrow::ArrayData&gt;, std::__y1::shared_ptr&lt;arrow::DataType&gt;, long&amp;, std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::Buffer&gt; &gt; &gt;, long&amp;, long&amp;, void&gt; (2,755,402 samples, 0.29%)</title><rect x="223.7" y="837" width="3.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="226.74" y="847.5" ></text>
</g>
<g >
<title>__libc_start_call_main (796,423,940 samples, 82.79%)</title><rect x="196.6" y="1253" width="977.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="199.65" y="1263.5" >__libc_start_call_main</text>
</g>
<g >
<title>~TKernelFamilyBase (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="613" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1161.27" y="623.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="261" width="2.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1157.25" y="271.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryPredicateKernel&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NYql::NUdf::TDataType&lt;unsigned long&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="965" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1146.58" y="975.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (626,762 samples, 0.07%)</title><rect x="232.4" y="741" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="235.43" y="751.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (812,198 samples, 0.08%)</title><rect x="223.7" y="565" width="1.0" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="226.74" y="575.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::Ref (897,262 samples, 0.09%)</title><rect x="780.0" y="901" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="783.02" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (2,156,904 samples, 0.22%)</title><rect x="971.0" y="885" width="2.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="974.02" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TFlowForwardListWrapper::TIterator::Next (626,491,117 samples, 65.12%)</title><rect x="371.1" y="1061" width="768.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="374.15" y="1071.5" >NKikimr::NMiniKQL::(anonymous namespace)::TFlowForwardListWrapper::TIterator::Next</text>
</g>
<g >
<title>operator (795,293,486 samples, 82.67%)</title><rect x="196.6" y="1109" width="975.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="199.65" y="1119.5" >operator</text>
</g>
<g >
<title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::SystemAllocator&gt;::Free (3,273,089 samples, 0.34%)</title><rect x="1154.3" y="309" width="4.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1157.25" y="319.5" ></text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="869" width="2.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.27" y="879.5" ></text>
</g>
<g >
<title>__allocation_guard&lt;std::__y1::allocator&lt;arrow::compute::KernelSignature&gt; &gt; (180,095 samples, 0.02%)</title><rect x="1149.2" y="837" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1152.18" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::MakeComputationPattern (103,447,996 samples, 10.75%)</title><rect x="198.0" y="1061" width="126.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="200.99" y="1071.5" >NKikimr::NMiniK..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalInc&lt; (180,687 samples, 0.02%)</title><rect x="1145.5" y="949" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1148.48" y="959.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (387,754 samples, 0.04%)</title><rect x="1147.6" y="885" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1150.62" y="895.5" ></text>
</g>
<g >
<title>TRefCounted&lt;TThrRefBase, TAtomicCounter, TDelete&gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="1013" width="2.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.27" y="1023.5" ></text>
</g>
<g >
<title>all (961,984,037 samples, 100%)</title><rect x="10.0" y="1317" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>clear_page_erms (166,267 samples, 0.02%)</title><rect x="1151.2" y="373" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1154.19" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1,496,219 samples, 0.16%)</title><rect x="213.7" y="517" width="1.9" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="216.74" y="527.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_exchange[abi:v160005]&lt;unsigned int&gt; (1,088,589 samples, 0.11%)</title><rect x="225.8" y="629" width="1.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="228.79" y="639.5" ></text>
</g>
<g >
<title>handle_pte_fault (267,553 samples, 0.03%)</title><rect x="1145.7" y="885" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1148.70" y="895.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (9,562,333 samples, 0.99%)</title><rect x="768.3" y="933" width="11.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="771.30" y="943.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::AllocateSlow&lt;&amp;tcmalloc::tcmalloc_internal::TCMallocPolicy&lt;tcmalloc::tcmalloc_internal::CppOomPolicy, tcmalloc::tcmalloc_internal::DefaultAlignPolicy, tcmalloc::tcmalloc_internal::InvokeHooksPolicy, tcmalloc::tcmalloc_internal::LocalNumaPartitionPolicy&gt;::handle_oom&gt; (181,378 samples, 0.02%)</title><rect x="1150.7" y="917" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1153.74" y="927.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::Span::FreelistPushSized&lt; (1,090,849 samples, 0.11%)</title><rect x="1155.6" y="85" width="1.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1158.59" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9,756,504 samples, 1.01%)</title><rect x="210.2" y="597" width="12.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="213.21" y="607.5" ></text>
</g>
<g >
<title>zap_pte_range (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="773" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1175.23" y="783.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TType*, std::__y1::allocator&lt;NKikimr::NMiniKQL::TType*&gt; &gt;::size[abi:v160005] (13,998,394 samples, 1.46%)</title><rect x="1024.0" y="981" width="17.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1027.04" y="991.5" ></text>
</g>
<g >
<title>std::__y1::__dispatch_copy_or_move[abi:v160005]&lt;std::__y1::_ClassicAlgPolicy, std::__y1::__move_loop&lt;std::__y1::_ClassicAlgPolicy&gt;, std::__y1::__move_trivial, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt; &gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="837" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1143.13" y="847.5" ></text>
</g>
<g >
<title>~TBinaryNumericKernelFamily (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="629" width="1.3" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1161.27" y="639.5" ></text>
</g>
<g >
<title>do_anonymous_page (812,198 samples, 0.08%)</title><rect x="223.7" y="581" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="226.74" y="591.5" ></text>
</g>
<g >
<title>std::__y1::__libcpp_operator_new[abi:v160005]&lt;unsigned long&gt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="821" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1154.19" y="831.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;TThrRefBase&gt; (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="997" width="2.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1161.27" y="1007.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::ReleaseRef (1,980,523 samples, 0.21%)</title><rect x="1063.3" y="981" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1066.29" y="991.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryNumericFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TSub, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (162,041 samples, 0.02%)</title><rect x="1151.4" y="997" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1154.39" y="1007.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (1,666,813 samples, 0.17%)</title><rect x="223.7" y="709" width="2.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="226.74" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TSetup&lt;false&gt;::BuildGraph (103,447,996 samples, 10.75%)</title><rect x="198.0" y="1077" width="126.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="200.99" y="1087.5" >NKikimr::NMiniK..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (12,632,416 samples, 1.31%)</title><rect x="208.2" y="661" width="15.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="211.25" y="671.5" ></text>
</g>
<g >
<title>std::__y1::__fill_n[abi:v160005]&lt;NYql::NUdf::TUnboxedValue*, unsigned long, NYql::NUdf::TUnboxedValue&gt; (55,312,839 samples, 5.75%)</title><rect x="585.1" y="949" width="67.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="588.05" y="959.5" >std::__..</text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free (801,788 samples, 0.08%)</title><rect x="231.5" y="725" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="234.45" y="735.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__release_shared[abi:v160005] (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="341" width="1.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1161.27" y="351.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::GetValue (4,165,710 samples, 0.43%)</title><rect x="138.6" y="1269" width="5.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="141.62" y="1279.5" ></text>
</g>
<g >
<title>rcu_core_si (773,246 samples, 0.08%)</title><rect x="206.2" y="517" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="209.24" y="527.5" ></text>
</g>
<g >
<title>rmqueue (560,562 samples, 0.06%)</title><rect x="218.3" y="453" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="221.26" y="463.5" ></text>
</g>
<g >
<title>TBinaryNumericKernelFamily (182,490 samples, 0.02%)</title><rect x="1142.1" y="981" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1145.14" y="991.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator++[abi:v160005] (1,088,865 samples, 0.11%)</title><rect x="228.8" y="741" width="1.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="231.78" y="751.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (1,491,430 samples, 0.16%)</title><rect x="309.0" y="789" width="1.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="312.02" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareOpt&lt;NYql::NUdf::TDataType&lt;int&gt;, NYql::NUdf::TDataType&lt;float&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TLess, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (207,685 samples, 0.02%)</title><rect x="1146.0" y="965" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1149.03" y="975.5" ></text>
</g>
<g >
<title>~THolder (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1077" width="1.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1175.23" y="1087.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (183,711 samples, 0.02%)</title><rect x="1148.7" y="933" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1151.73" y="943.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (2,169,150 samples, 0.23%)</title><rect x="650.2" y="901" width="2.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="653.24" y="911.5" ></text>
</g>
<g >
<title>[abi:v160005] (3,123,248 samples, 0.32%)</title><rect x="955.9" y="949" width="3.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="958.86" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper, false&gt;::FetchValues (4,328,206 samples, 0.45%)</title><rect x="153.9" y="1269" width="5.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="156.91" y="1279.5" ></text>
</g>
<g >
<title>~shared_ptr (626,762 samples, 0.07%)</title><rect x="232.4" y="693" width="0.8" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="235.43" y="703.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,896,580 samples, 0.51%)</title><rect x="212.9" y="533" width="6.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="215.94" y="543.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (2,896,576 samples, 0.30%)</title><rect x="1058.6" y="997" width="3.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1061.55" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TArrayNode::DoCalculate (162,781,359 samples, 16.92%)</title><rect x="519.4" y="997" width="199.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="522.35" y="1007.5" >NKikimr::NMiniKQL::TArrayN..</text>
</g>
<g >
<title>Hash128to64 (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="805" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1149.29" y="815.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (812,198 samples, 0.08%)</title><rect x="223.7" y="517" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="226.74" y="527.5" ></text>
</g>
<g >
<title>~TBuiltinsWrapper (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="965" width="2.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1161.27" y="975.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;signed char&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TEqualsOp&gt; (186,718 samples, 0.02%)</title><rect x="1142.6" y="981" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1145.59" y="991.5" ></text>
</g>
<g >
<title>do_user_addr_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="805" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="203.95" y="815.5" ></text>
</g>
<g >
<title>TBasicString (139,866 samples, 0.01%)</title><rect x="1139.8" y="901" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1142.76" y="911.5" ></text>
</g>
<g >
<title>next_uptodate_page (267,553 samples, 0.03%)</title><rect x="1145.7" y="821" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1148.70" y="831.5" ></text>
</g>
<g >
<title>__GI___munmap (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="965" width="1.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1175.23" y="975.5" ></text>
</g>
<g >
<title>exc_page_fault (166,267 samples, 0.02%)</title><rect x="1151.2" y="533" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1154.19" y="543.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareReal&lt;NKikimr::NMiniKQL::(anonymous namespace)::TLess, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (207,685 samples, 0.02%)</title><rect x="1146.0" y="981" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1149.03" y="991.5" ></text>
</g>
<g >
<title>TUnboxedValue (4,011,245 samples, 0.42%)</title><rect x="580.1" y="965" width="5.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="583.13" y="975.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::mutable_data (1,088,819 samples, 0.11%)</title><rect x="289.2" y="821" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="292.23" y="831.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::destroy[abi:v160005]&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, void&gt; (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1109" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1175.23" y="1119.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (166,267 samples, 0.02%)</title><rect x="1151.2" y="549" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1154.19" y="559.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NYql::NUdf::TUnboxedValue [], std::__y1::default_delete&lt;NYql::NUdf::TUnboxedValue []&gt; &gt;::operator[][abi:v160005] (8,436,790 samples, 0.88%)</title><rect x="495.8" y="981" width="10.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="498.78" y="991.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (183,166 samples, 0.02%)</title><rect x="1140.1" y="789" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1143.13" y="799.5" ></text>
</g>
<g >
<title>TRaw (1,086,542 samples, 0.11%)</title><rect x="1065.7" y="997" width="1.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1068.72" y="1007.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Reserve (12,632,416 samples, 1.31%)</title><rect x="208.2" y="773" width="15.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="211.25" y="783.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterUnaryFunctionForPrecision&lt; (1,273,307 samples, 0.13%)</title><rect x="1140.4" y="965" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1143.35" y="975.5" ></text>
</g>
<g >
<title>std::__y1::basic_string&lt;char, std::__y1::char_traits&lt;char&gt;, std::__y1::allocator&lt;char&gt; &gt;::__init (139,866 samples, 0.01%)</title><rect x="1139.8" y="837" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1142.76" y="847.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionBinOpt&lt;NYql::NUdf::TDataType&lt;unsigned int&gt;, NYql::NUdf::TDataType&lt;unsigned char&gt;, NYql::NUdf::TDataType&lt;unsigned int&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TMax, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (185,109 samples, 0.02%)</title><rect x="1148.5" y="949" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1151.50" y="959.5" ></text>
</g>
<g >
<title>std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;::reset[abi:v160005] (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="469" width="1.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1162.60" y="479.5" ></text>
</g>
<g >
<title>~vector (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="309" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1161.27" y="319.5" ></text>
</g>
<g >
<title>std::__y1::unordered_map&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, std::__y1::allocator&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::emplace[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (1,089,849 samples, 0.11%)</title><rect x="1149.4" y="917" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1152.40" y="927.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,177,285 samples, 0.23%)</title><rect x="1180.7" y="1125" width="2.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1183.66" y="1135.5" ></text>
</g>
<g >
<title>pud_val (854,615 samples, 0.09%)</title><rect x="224.7" y="613" width="1.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="227.74" y="623.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::UnRef (14,324,413 samples, 1.49%)</title><rect x="635.3" y="917" width="17.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="638.33" y="927.5" ></text>
</g>
<g >
<title>~ArrayKernel (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="405" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1162.60" y="415.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__rehash_unique[abi:v160005] (387,754 samples, 0.04%)</title><rect x="1147.6" y="869" width="0.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1150.62" y="879.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::IFunctionRegistry&gt;::UnRef (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="1045" width="2.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1161.27" y="1055.5" ></text>
</g>
<g >
<title>std::__y1::__function::__value_func&lt;arrow::Result&lt;arrow::ValueDescr&gt;  (188,151 samples, 0.02%)</title><rect x="196.4" y="1269" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="199.42" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__deallocate_node (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="565" width="1.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1162.60" y="575.5" ></text>
</g>
<g >
<title>~pair (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="693" width="2.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1161.27" y="703.5" ></text>
</g>
<g >
<title>zap_pte_range (3,264,325 samples, 0.34%)</title><rect x="1186.0" y="1077" width="4.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1189.00" y="1087.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::Ref (6,214,239 samples, 0.65%)</title><rect x="1090.5" y="997" width="7.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1093.45" y="1007.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (590,709 samples, 0.06%)</title><rect x="303.0" y="741" width="0.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="306.03" y="751.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (1,088,865 samples, 0.11%)</title><rect x="228.8" y="709" width="1.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="231.78" y="719.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (857,981 samples, 0.09%)</title><rect x="207.2" y="741" width="1.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="210.19" y="751.5" ></text>
</g>
<g >
<title>~TBuiltinsWrapper (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="949" width="2.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1161.27" y="959.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareCustomOpt&lt;NYql::NUdf::TDataType&lt;char*&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TUtf8&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TCustomLess&lt; (1,088,988 samples, 0.11%)</title><rect x="1146.3" y="981" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1149.29" y="991.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::TRaw::GetMarkers (5,198,062 samples, 0.54%)</title><rect x="695.5" y="933" width="6.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="698.47" y="943.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,473,587 samples, 0.67%)</title><rect x="301.1" y="757" width="7.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="304.08" y="767.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="245" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1157.25" y="255.5" ></text>
</g>
<g >
<title>absl::lts_20240116::base_internal::SpinLock::TryLockInternal (1,091,087 samples, 0.11%)</title><rect x="1154.3" y="69" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1157.25" y="79.5" ></text>
</g>
<g >
<title>exit_mmap (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1157" width="9.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1183.66" y="1167.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::push_back[abi:v160005] (181,905 samples, 0.02%)</title><rect x="1141.9" y="917" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.91" y="927.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugePageAwareAllocator::AllocSmall (166,267 samples, 0.02%)</title><rect x="1151.2" y="709" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1154.19" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (156,576 samples, 0.02%)</title><rect x="1139.9" y="933" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1142.94" y="943.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterLessOrEqual (720,287 samples, 0.07%)</title><rect x="1147.6" y="1013" width="0.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1150.62" y="1023.5" ></text>
</g>
<g >
<title>__mmput (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1173" width="9.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1183.66" y="1183.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::unique_ptr&lt;NYql::NUdf::IBlockReader, std::__y1::default_delete&lt;NYql::NUdf::IBlockReader&gt; &gt;, std::__y1::allocator&lt;std::__y1::unique_ptr&lt;NYql::NUdf::IBlockReader, std::__y1::default_delete&lt;NYql::NUdf::IBlockReader&gt; &gt; &gt; &gt;::operator[][abi:v160005] (1,071,851 samples, 0.11%)</title><rect x="969.7" y="965" width="1.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="972.71" y="975.5" ></text>
</g>
<g >
<title>do_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="821" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1145.59" y="831.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TMutableComputationNode&lt;NKikimr::NMiniKQL::TArrayNode&gt;::GetValue (5,720,257 samples, 0.59%)</title><rect x="123.0" y="1269" width="7.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="126.03" y="1279.5" ></text>
</g>
<g >
<title>std::__y1::function&lt;NKikimr::NMiniKQL::IComputationNode*  (103,447,996 samples, 10.75%)</title><rect x="198.0" y="1013" width="126.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="200.99" y="1023.5" >std::__y1::func..</text>
</g>
<g >
<title>std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;::__construct_at_end&lt;unsigned short*, 0&gt; (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="869" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1146.58" y="879.5" ></text>
</g>
<g >
<title>mtree_range_walk (1,491,430 samples, 0.16%)</title><rect x="309.0" y="741" width="1.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="312.02" y="751.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,369,462 samples, 0.66%)</title><rect x="211.1" y="549" width="7.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="214.13" y="559.5" ></text>
</g>
<g >
<title>~unique_ptr (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="485" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1162.60" y="495.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TExternalComputationNode::RefValue (63,851,783 samples, 6.64%)</title><rect x="427.8" y="1013" width="78.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="430.80" y="1023.5" >NKikimr::..</text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::operator--[abi:v160005] (626,762 samples, 0.07%)</title><rect x="232.4" y="645" width="0.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="235.43" y="655.5" ></text>
</g>
<g >
<title>NYql::NUdf::IBoxedValue1::Ref (2,164,076 samples, 0.22%)</title><rect x="825.7" y="885" width="2.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="828.68" y="895.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;long, true&gt;::fetch_sub[abi:v160005] (1,088,778 samples, 0.11%)</title><rect x="204.9" y="645" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="207.91" y="655.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;TThrRefBase&gt; (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="853" width="2.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1161.27" y="863.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (162,041 samples, 0.02%)</title><rect x="1151.4" y="917" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1154.39" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterFunctionImpl&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateNotEquals&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzTimestamp&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, false&gt;, NKikimr::NMiniKQL::TCompareArgsOpt&lt;NYql::NUdf::TDataType&lt;NYql::NUdf::TTzTimestamp&gt;, NYql::NUdf::TDataType&lt;NYql::NUdf::TTzDate&gt;, true, true, true&gt;, NKikimr::NMiniKQL::TBinaryWrap&lt;true, true&gt; &gt; (187,595 samples, 0.02%)</title><rect x="1151.0" y="965" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1153.96" y="975.5" ></text>
</g>
<g >
<title>filemap_map_pages (186,718 samples, 0.02%)</title><rect x="1142.6" y="789" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1145.59" y="799.5" ></text>
</g>
<g >
<title>std::__y1::allocator&lt;std::__y1::__shared_ptr_emplace&lt;arrow::compute::KernelSignature, std::__y1::allocator&lt;arrow::compute::KernelSignature&gt; &gt; &gt;::allocate[abi:v160005] (180,095 samples, 0.02%)</title><rect x="1149.2" y="805" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1152.18" y="815.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Next (1,091,055 samples, 0.11%)</title><rect x="195.1" y="1253" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="198.08" y="1263.5" ></text>
</g>
<g >
<title>sync_regs (181,378 samples, 0.02%)</title><rect x="1150.7" y="853" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1153.74" y="863.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (180,095 samples, 0.02%)</title><rect x="1149.2" y="709" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1152.18" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (2,156,904 samples, 0.22%)</title><rect x="971.0" y="901" width="2.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="974.02" y="911.5" ></text>
</g>
<g >
<title>absl::lts_20240116::base_internal::SpinLock::TryLockImpl (1,091,087 samples, 0.11%)</title><rect x="1154.3" y="85" width="1.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1157.25" y="95.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterMod (363,921 samples, 0.04%)</title><rect x="1148.7" y="1013" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1151.73" y="1023.5" ></text>
</g>
<g >
<title>NYql::NUdf::TBoxedValueAccessor::Next (626,491,117 samples, 65.12%)</title><rect x="371.1" y="1077" width="768.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="374.15" y="1087.5" >NYql::NUdf::TBoxedValueAccessor::Next</text>
</g>
<g >
<title>std::__y1::__invoke[abi:v160005]&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute (795,333,475 samples, 82.68%)</title><rect x="196.6" y="1157" width="975.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="199.65" y="1167.5" >std::__y1::__invoke[abi:v160005]&lt;NKikimr::NMiniKQL::NTestSuiteTMiniKQLWideTakeSkipBlocks::TCurrentTest::Execute</text>
</g>
<g >
<title>std::__y1::vector&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::allocator&lt;std::__y1::shared_ptr&lt;arrow::ArrayData&gt; &gt; &gt;::__clear[abi:v160005] (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="613" width="5.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1155.91" y="623.5" ></text>
</g>
<g >
<title>TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;::Construct&lt;char const*&amp;, unsigned long&amp;&gt; (332,533 samples, 0.03%)</title><rect x="1148.1" y="885" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1151.10" y="895.5" ></text>
</g>
<g >
<title>~__hash_table (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="581" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1162.60" y="591.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt;::push_back[abi:v160005] (118,865 samples, 0.01%)</title><rect x="1139.6" y="901" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.62" y="911.5" ></text>
</g>
<g >
<title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::SystemAllocator&gt;::Allocate (12,632,416 samples, 1.31%)</title><rect x="208.2" y="757" width="15.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="211.25" y="767.5" ></text>
</g>
<g >
<title>std::__y1::allocator_traits&lt;std::__y1::allocator&lt;std::__y1::__hash_node&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void*&gt; &gt; &gt;::destroy[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, void, void&gt; (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="549" width="1.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1162.60" y="559.5" ></text>
</g>
<g >
<title>Kernel (180,095 samples, 0.02%)</title><rect x="1149.2" y="901" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1152.18" y="911.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValue::operator= (28,664,218 samples, 2.98%)</title><rect x="1098.1" y="1045" width="35.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1101.07" y="1055.5" >NY..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddNumericComparisonKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="997" width="1.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1146.58" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__constrain_hash[abi:v160005] (207,685 samples, 0.02%)</title><rect x="1146.0" y="885" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1149.03" y="895.5" ></text>
</g>
<g >
<title>~ArrayKernel (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="405" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1161.27" y="415.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterBinaryIntegralFunctionOpt&lt;NKikimr::NMiniKQL::(anonymous namespace)::TAdd, NKikimr::NMiniKQL::TBinaryArgsOpt&gt; (118,865 samples, 0.01%)</title><rect x="1139.6" y="981" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1142.62" y="991.5" ></text>
</g>
<g >
<title>std::__y1::destroy_at[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; const, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, 0&gt; (1,090,672 samples, 0.11%)</title><rect x="1159.6" y="533" width="1.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1162.60" y="543.5" ></text>
</g>
<g >
<title>std::__y1::__cxx_atomic_fetch_add[abi:v160005]&lt;long&gt; (1,091,153 samples, 0.11%)</title><rect x="1156.9" y="261" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1159.93" y="271.5" ></text>
</g>
<g >
<title>TDelete::Destroy&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt; (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="869" width="5.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1155.91" y="879.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::NDecimal::RegisterBinaryFunction&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDecimalSub&lt; (166,267 samples, 0.02%)</title><rect x="1151.2" y="965" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1154.19" y="975.5" ></text>
</g>
<g >
<title>TCMallocInternalNew (156,576 samples, 0.02%)</title><rect x="1139.9" y="789" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1142.94" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__uninitialized_allocator_move_if_noexcept[abi:v160005]&lt;std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, NKikimr::NMiniKQL::TFunctionDescriptor, void&gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="885" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1143.13" y="895.5" ></text>
</g>
<g >
<title>~SpinLockHolder (1,088,589 samples, 0.11%)</title><rect x="225.8" y="677" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="228.79" y="687.5" ></text>
</g>
<g >
<title>handle_pte_fault (186,718 samples, 0.02%)</title><rect x="1142.6" y="837" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1145.59" y="847.5" ></text>
</g>
<g >
<title>arrow::util::Variant&lt;arrow::Datum::Empty, std::__y1::shared_ptr&lt;arrow::Scalar&gt;, std::__y1::shared_ptr&lt;arrow::ArrayData&gt;, std::__y1::shared_ptr&lt;arrow::ChunkedArray&gt;, std::__y1::shared_ptr&lt;arrow::RecordBatch&gt;, std::__y1::shared_ptr&lt;arrow::Table&gt;, std::__y1::vector&lt;arrow::Datum, std::__y1::allocator&lt;arrow::Datum&gt; &gt; &gt;::index (1,090,737 samples, 0.11%)</title><rect x="953.2" y="933" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="956.18" y="943.5" ></text>
</g>
<g >
<title>std::__y1::__move_loop&lt;std::__y1::_ClassicAlgPolicy&gt;::operator (463,772 samples, 0.05%)</title><rect x="1144.9" y="805" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1147.91" y="815.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::LinkedList::PushBatch (773,246 samples, 0.08%)</title><rect x="206.2" y="709" width="1.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="209.24" y="719.5" ></text>
</g>
<g >
<title>operator (103,447,996 samples, 10.75%)</title><rect x="198.0" y="917" width="126.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="200.99" y="927.5" >operator</text>
</g>
<g >
<title>std::__y1::sort[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::basic_string_view&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::vector&lt;NKikimr::NMiniKQL::TFunctionDescriptor, std::__y1::allocator&lt;NKikimr::NMiniKQL::TFunctionDescriptor&gt; &gt; const*&gt;*, NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::CalculateMetadataEtag (490,146 samples, 0.05%)</title><rect x="1152.2" y="1013" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1155.22" y="1023.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (180,687 samples, 0.02%)</title><rect x="1145.5" y="933" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1148.48" y="943.5" ></text>
</g>
<g >
<title>shared_ptr (634,990 samples, 0.07%)</title><rect x="227.1" y="853" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="230.12" y="863.5" ></text>
</g>
<g >
<title>ydb-library-yql (961,984,037 samples, 100.00%)</title><rect x="10.0" y="1301" width="1180.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" >ydb-library-yql</text>
</g>
<g >
<title>arrow::AllocateResizableBuffer (12,632,416 samples, 1.31%)</title><rect x="208.2" y="821" width="15.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="211.25" y="831.5" ></text>
</g>
<g >
<title>std::__y1::vector&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt;, std::__y1::allocator&lt;THolder&lt;NKikimr::(anonymous namespace)::TGlobalPagePool&lt;NKikimr::TSystemMmap&gt;, TDelete&gt; &gt; &gt;::__clear[abi:v160005] (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="1141" width="1.4" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="1175.23" y="1151.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (789,244 samples, 0.08%)</title><rect x="201.6" y="821" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="204.60" y="831.5" ></text>
</g>
<g >
<title>mmput (7,618,423 samples, 0.79%)</title><rect x="1180.7" y="1189" width="9.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1183.66" y="1199.5" ></text>
</g>
<g >
<title>handle_pte_fault (166,267 samples, 0.02%)</title><rect x="1151.2" y="469" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1154.19" y="479.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TKernelFamilyBase::Adopt (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="933" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1146.58" y="943.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (773,246 samples, 0.08%)</title><rect x="206.2" y="581" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="209.24" y="591.5" ></text>
</g>
<g >
<title>find_vma (1,491,430 samples, 0.16%)</title><rect x="309.0" y="773" width="1.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="312.02" y="783.5" ></text>
</g>
<g >
<title>arrow::Datum::is_scalar (1,090,737 samples, 0.11%)</title><rect x="953.2" y="965" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="956.18" y="975.5" ></text>
</g>
<g >
<title>~MemoryManager (626,762 samples, 0.07%)</title><rect x="232.4" y="709" width="0.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="235.43" y="719.5" ></text>
</g>
<g >
<title>handle_pte_fault (463,772 samples, 0.05%)</title><rect x="1144.9" y="709" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1147.91" y="719.5" ></text>
</g>
<g >
<title>std::__y1::atomic&lt;long&gt;::operator=[abi:v160005] (819,967 samples, 0.09%)</title><rect x="203.9" y="709" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="206.90" y="719.5" ></text>
</g>
<g >
<title>std::__y1::make_unique[abi:v160005]&lt;NKikimr::NMiniKQL::TBinaryNumericKernelFamily&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod, NKikimr::NMiniKQL::(anonymous namespace)::TMod&gt;&gt; (180,210 samples, 0.02%)</title><rect x="1149.0" y="997" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1151.96" y="1007.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::RegisterCompareDatetime&lt;NKikimr::NMiniKQL::(anonymous namespace)::TDiffDateNotEquals, NKikimr::NMiniKQL::TCompareArgsOpt&gt; (187,595 samples, 0.02%)</title><rect x="1151.0" y="997" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1153.96" y="1007.5" ></text>
</g>
<g >
<title>std::__y1::__shared_weak_count::__add_shared[abi:v160005] (1,088,865 samples, 0.11%)</title><rect x="228.8" y="773" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="231.78" y="783.5" ></text>
</g>
<g >
<title>TStringBase&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, char, std::__y1::char_traits&lt;char&gt; &gt;::operator==&lt;TBasicString&lt;char, std::__y1::char_traits&lt;char&gt; &gt;, std::__y1::char_traits&lt;char&gt; &gt; (185,922 samples, 0.02%)</title><rect x="1142.8" y="853" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1145.82" y="863.5" ></text>
</g>
<g >
<title>std::__y1::move[abi:v160005]&lt;std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt;, std::__y1::reverse_iterator&lt;NKikimr::NMiniKQL::TFunctionDescriptor*&gt; &gt; (183,166 samples, 0.02%)</title><rect x="1140.1" y="869" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1143.13" y="879.5" ></text>
</g>
<g >
<title>~TSetup (6,543,597 samples, 0.68%)</title><rect x="1152.9" y="1093" width="8.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1155.91" y="1103.5" ></text>
</g>
<g >
<title>arrow::(anonymous namespace)::ResizePoolBuffer&lt;std::__y1::unique_ptr&lt;arrow::ResizableBuffer, std::__y1::default_delete&lt;arrow::ResizableBuffer&gt; &gt;, std::__y1::unique_ptr&lt;arrow::PoolBuffer, std::__y1::default_delete&lt;arrow::PoolBuffer&gt; &gt; &gt; (1,908,127 samples, 0.20%)</title><rect x="202.6" y="789" width="2.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="205.57" y="799.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddBinaryIntegralKernels&lt;NKikimr::NMiniKQL::(anonymous namespace)::TIntegralMod&gt; (180,210 samples, 0.02%)</title><rect x="1149.0" y="965" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1151.96" y="975.5" ></text>
</g>
<g >
<title>NYql::NUdf::TUnboxedValuePod::Next (626,491,117 samples, 65.12%)</title><rect x="371.1" y="1093" width="768.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="374.15" y="1103.5" >NYql::NUdf::TUnboxedValuePod::Next</text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (463,772 samples, 0.05%)</title><rect x="1144.9" y="949" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1147.91" y="959.5" ></text>
</g>
<g >
<title>TDefaultIntrusivePtrOps&lt;NKikimr::NMiniKQL::(anonymous namespace)::TPatternNodes&gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="917" width="5.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1155.91" y="927.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TBuiltinFunctionRegistry::Register (139,866 samples, 0.01%)</title><rect x="1139.8" y="933" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1142.76" y="943.5" ></text>
</g>
<g >
<title>arrow::BufferBuilder::Resize (1,088,878 samples, 0.11%)</title><rect x="230.1" y="805" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="233.12" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (180,095 samples, 0.02%)</title><rect x="1149.2" y="645" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1152.18" y="655.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::(anonymous namespace)::do_free_with_cl&lt;false,  (801,788 samples, 0.08%)</title><rect x="231.5" y="709" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="234.45" y="719.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::(anonymous namespace)::TWideFromBlocksWrapper::TState::Get (30,004,477 samples, 3.12%)</title><rect x="60.8" y="1237" width="36.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="63.84" y="1247.5" >NKi..</text>
</g>
<g >
<title>NKikimr::NMiniKQL::AddArithmeticComparisonKernels&lt;NYql::NUdf::TDataType&lt;unsigned short&gt;, NKikimr::NMiniKQL::(anonymous namespace)::TGreaterOrEqualOp&gt; (1,088,644 samples, 0.11%)</title><rect x="1143.6" y="981" width="1.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1146.58" y="991.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::SLL_SetNext (1,666,813 samples, 0.17%)</title><rect x="223.7" y="693" width="2.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="226.74" y="703.5" ></text>
</g>
<g >
<title>~TBuiltinFunctionRegistry (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="821" width="2.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1161.27" y="831.5" ></text>
</g>
<g >
<title>page_remove_rmap (1,088,415 samples, 0.11%)</title><rect x="1186.0" y="1061" width="1.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.00" y="1071.5" ></text>
</g>
<g >
<title>arrow::PoolBuffer::Reserve (819,967 samples, 0.09%)</title><rect x="203.9" y="757" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.90" y="767.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,727,725 samples, 0.28%)</title><rect x="304.8" y="741" width="3.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="307.76" y="751.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,666,813 samples, 0.17%)</title><rect x="223.7" y="677" width="2.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="226.74" y="687.5" ></text>
</g>
<g >
<title>std::__y1::__shared_count::__add_shared[abi:v160005] (634,990 samples, 0.07%)</title><rect x="227.1" y="821" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="230.12" y="831.5" ></text>
</g>
<g >
<title>handle_pte_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="757" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="203.95" y="767.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,090,465 samples, 0.11%)</title><rect x="1172.2" y="789" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1175.23" y="799.5" ></text>
</g>
<g >
<title>~shared_ptr (1,088,778 samples, 0.11%)</title><rect x="204.9" y="709" width="1.3" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="207.91" y="719.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique[abi:v160005]&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (1,089,849 samples, 0.11%)</title><rect x="1149.4" y="901" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1152.40" y="911.5" ></text>
</g>
<g >
<title>std::__y1::__hash_table&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::__unordered_map_hasher&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, true&gt;, std::__y1::__unordered_map_equal&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt;, std::__y1::equal_to&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt; &gt;, NKikimr::NMiniKQL::TTypeHasher, true&gt;, std::__y1::allocator&lt;std::__y1::__hash_value_type&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::pair&lt;std::__y1::vector&lt;unsigned short, std::__y1::allocator&lt;unsigned short&gt; &gt;, unsigned short&gt;, std::__y1::unique_ptr&lt;NKikimr::NMiniKQL::TKernel, std::__y1::default_delete&lt;NKikimr::NMiniKQL::TKernel&gt; &gt; &gt; (156,576 samples, 0.02%)</title><rect x="1139.9" y="885" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1142.94" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (531,672 samples, 0.06%)</title><rect x="200.9" y="789" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="203.95" y="799.5" ></text>
</g>
<g >
<title>std::__y1::__atomic_base&lt;unsigned int, false&gt;::compare_exchange_strong[abi:v160005] (1,091,087 samples, 0.11%)</title><rect x="1154.3" y="53" width="1.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1157.25" y="63.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TStatefulWideFlowComputationNode&lt;NKikimr::NMiniKQL::(anonymous namespace)::TTestBlockFlowWrapper, false&gt;::FetchValues (2,156,904 samples, 0.22%)</title><rect x="971.0" y="981" width="2.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="974.02" y="991.5" ></text>
</g>
<g >
<title>__alloc_pages (166,267 samples, 0.02%)</title><rect x="1151.2" y="405" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1154.19" y="415.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1,087,985 samples, 0.11%)</title><rect x="1188.7" y="981" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1191.67" y="991.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,175,910 samples, 0.23%)</title><rect x="1187.3" y="1045" width="2.7" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1190.33" y="1055.5" ></text>
</g>
<g >
<title>NKikimr::NMiniKQL::TDirectArrayHolderInplace::GetElement (27,451,363 samples, 2.85%)</title><rect x="337.5" y="1061" width="33.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="340.47" y="1071.5" >NK..</text>
</g>
<g >
<title>shared_ptr (182,490 samples, 0.02%)</title><rect x="1142.1" y="853" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1145.14" y="863.5" ></text>
</g>
<g >
<title>~TPlainKernel (1,089,637 samples, 0.11%)</title><rect x="1158.3" y="421" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.27" y="431.5" ></text>
</g>
<g >
<title>TRefCounted&lt;NKikimr::NMiniKQL::IComputationPattern, TAtomicCounter, TDelete&gt;::UnRef (4,363,288 samples, 0.45%)</title><rect x="1152.9" y="1013" width="5.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1155.91" y="1023.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::HugeAllocator::Get (166,267 samples, 0.02%)</title><rect x="1151.2" y="645" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1154.19" y="655.5" ></text>
</g>
<g >
<title>TBuiltinFunctionRegistry (10,762,772 samples, 1.12%)</title><rect x="1139.6" y="1045" width="13.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1142.62" y="1055.5" ></text>
</g>
<g >
<title>~unordered_map (2,180,309 samples, 0.23%)</title><rect x="1158.3" y="789" width="2.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1161.27" y="799.5" ></text>
</g>
<g >
<title>try_charge_memcg (632,048 samples, 0.07%)</title><rect x="305.6" y="693" width="0.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="308.59" y="703.5" ></text>
</g>
<g >
<title>tcmalloc::tcmalloc_internal::ThreadCache::ReleaseToCentralCache (2,181,936 samples, 0.23%)</title><rect x="1154.3" y="181" width="2.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1157.25" y="191.5" ></text>
</g>
</g>
</svg>
